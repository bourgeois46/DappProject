{
	"id": "87325543ebb24454d5278c5b6bb6a21c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SaleAnimalToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.6;\r\n\r\nimport \"./MintAnimalToken.sol\";\r\n\r\ncontract SaleAnimalToken {\r\n    MintAnimalToken public mintAnimalTokenAddress;\r\n\r\n    constructor(address _mintAnimalTolenAddress) {\r\n        mintAnimalTokenAddress = MintAnimalToken(_mintAnimalTolenAddress);\r\n    }\r\n\r\n    // animalTokenId => 가격 (입력 / 출력)\r\n    mapping(uint256 => uint256) public animalTokenPrices;\r\n\r\n    uint256[] public onSaleAnimalTokenArray; // 프론트에서 판매중인 토큰 확인 \r\n\r\n    // 판매 등록 함수 \r\n    function setForSaleAnimalToken(uint256 _animalTokenId, uint256 _price) public {\r\n        address animalTokenOwner = mintAnimalTokenAddress.ownerOf(_animalTokenId);\r\n\r\n        // 주인이 맞는지 확인\r\n        // 조건 o -> 넘어감\r\n        // 조건 x -> 오류 메시지 출력\r\n\r\n        require(animalTokenOwner == msg.sender, \"Caller is not animal token onwer.\");\r\n        require(_price > 0, \"Price is zero or lower.\");\r\n        require(animalTokenPrices[_animalTokenId] == 0, \"This animalToken is already on sale.\");\r\n        require(mintAnimalTokenAddress.isApprovedForAll(animalTokenOwner, address(this)), \"Animal token owner did not approve tolen.\");\r\n\r\n        animalTokenPrices[_animalTokenId] = _price;\r\n\r\n        onSaleAnimalTokenArray.push(_animalTokenId);\r\n    }\r\n}"
			},
			"contracts/MintAnimalToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.6;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\";  \r\n\r\ncontract MintAnimalToken is ERC721Enumerable {\r\n    constructor() ERC721(\"bourgeoisAnimals\", \"BAS\"){} \r\n\r\n    mapping(uint256 => uint256) public animalTypes;\r\n\r\n    function mintAnimalToken() public { \r\n       uint256 animalTokenId = totalSupply() + 1; \r\n\r\n       uint256 animalType = uint256(keccak256(abi.encodePacked(block.timestamp, msg.sender, animalTokenId))) % 5 + 1;\r\n\r\n       animalTypes[animalTokenId] = animalType;\r\n\r\n       _mint(msg.sender, animalTokenId); \r\n    }\r\n}"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721Enumerable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {IERC721Enumerable} from \"./IERC721Enumerable.sol\";\nimport {IERC165} from \"../../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev This implements an optional extension of {ERC721} defined in the EIP that adds enumerability\n * of all the token ids in the contract as well as all token ids owned by each account.\n *\n * CAUTION: `ERC721` extensions that implement custom `balanceOf` logic, such as `ERC721Consecutive`,\n * interfere with enumerability and should not be used together with `ERC721Enumerable`.\n */\nabstract contract ERC721Enumerable is ERC721, IERC721Enumerable {\n    mapping(address owner => mapping(uint256 index => uint256)) private _ownedTokens;\n    mapping(uint256 tokenId => uint256) private _ownedTokensIndex;\n\n    uint256[] private _allTokens;\n    mapping(uint256 tokenId => uint256) private _allTokensIndex;\n\n    /**\n     * @dev An `owner`'s token query was out of bounds for `index`.\n     *\n     * NOTE: The owner being `address(0)` indicates a global out of bounds index.\n     */\n    error ERC721OutOfBoundsIndex(address owner, uint256 index);\n\n    /**\n     * @dev Batch mint is not allowed.\n     */\n    error ERC721EnumerableForbiddenBatchMint();\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {\n        return interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual returns (uint256) {\n        if (index >= balanceOf(owner)) {\n            revert ERC721OutOfBoundsIndex(owner, index);\n        }\n        return _ownedTokens[owner][index];\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _allTokens.length;\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenByIndex}.\n     */\n    function tokenByIndex(uint256 index) public view virtual returns (uint256) {\n        if (index >= totalSupply()) {\n            revert ERC721OutOfBoundsIndex(address(0), index);\n        }\n        return _allTokens[index];\n    }\n\n    /**\n     * @dev See {ERC721-_update}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual override returns (address) {\n        address previousOwner = super._update(to, tokenId, auth);\n\n        if (previousOwner == address(0)) {\n            _addTokenToAllTokensEnumeration(tokenId);\n        } else if (previousOwner != to) {\n            _removeTokenFromOwnerEnumeration(previousOwner, tokenId);\n        }\n        if (to == address(0)) {\n            _removeTokenFromAllTokensEnumeration(tokenId);\n        } else if (previousOwner != to) {\n            _addTokenToOwnerEnumeration(to, tokenId);\n        }\n\n        return previousOwner;\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\n     * @param to address representing the new owner of the given token ID\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\n     */\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\n        uint256 length = balanceOf(to) - 1;\n        _ownedTokens[to][length] = tokenId;\n        _ownedTokensIndex[tokenId] = length;\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's token tracking data structures.\n     * @param tokenId uint256 ID of the token to be added to the tokens list\n     */\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) private {\n        _allTokensIndex[tokenId] = _allTokens.length;\n        _allTokens.push(tokenId);\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\n     * @param from address representing the previous owner of the given token ID\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\n     */\n    function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = balanceOf(from);\n        uint256 tokenIndex = _ownedTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary\n        if (tokenIndex != lastTokenIndex) {\n            uint256 lastTokenId = _ownedTokens[from][lastTokenIndex];\n\n            _ownedTokens[from][tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n            _ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n        }\n\n        // This also deletes the contents at the last position of the array\n        delete _ownedTokensIndex[tokenId];\n        delete _ownedTokens[from][lastTokenIndex];\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's token tracking data structures.\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\n     */\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = _allTokens.length - 1;\n        uint256 tokenIndex = _allTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\n        uint256 lastTokenId = _allTokens[lastTokenIndex];\n\n        _allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n        _allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n\n        // This also deletes the contents at the last position of the array\n        delete _allTokensIndex[tokenId];\n        _allTokens.pop();\n    }\n\n    /**\n     * See {ERC721-_increaseBalance}. We need that to account tokens that were minted in batch\n     */\n    function _increaseBalance(address account, uint128 amount) internal virtual override {\n        if (amount > 0) {\n            revert ERC721EnumerableForbiddenBatchMint();\n        }\n        super._increaseBalance(account, amount);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Enumerable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "london"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 175,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 179,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 183,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 189,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
				"ERC721Enumerable": {
					"abi": [
						{
							"inputs": [],
							"name": "ERC721EnumerableForbiddenBatchMint",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "ERC721OutOfBoundsIndex",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This implements an optional extension of {ERC721} defined in the EIP that adds enumerability of all the token ids in the contract as well as all token ids owned by each account. CAUTION: `ERC721` extensions that implement custom `balanceOf` logic, such as `ERC721Consecutive`, interfere with enumerability and should not be used together with `ERC721Enumerable`.",
						"errors": {
							"ERC721EnumerableForbiddenBatchMint()": [
								{
									"details": "Batch mint is not allowed."
								}
							],
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721OutOfBoundsIndex(address,uint256)": [
								{
									"details": "An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenByIndex(uint256)": {
								"details": "See {IERC721Enumerable-tokenByIndex}."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"totalSupply()": {
								"details": "See {IERC721Enumerable-totalSupply}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC721EnumerableForbiddenBatchMint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"ERC721OutOfBoundsIndex\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This implements an optional extension of {ERC721} defined in the EIP that adds enumerability of all the token ids in the contract as well as all token ids owned by each account. CAUTION: `ERC721` extensions that implement custom `balanceOf` logic, such as `ERC721Consecutive`, interfere with enumerability and should not be used together with `ERC721Enumerable`.\",\"errors\":{\"ERC721EnumerableForbiddenBatchMint()\":[{\"details\":\"Batch mint is not allowed.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721OutOfBoundsIndex(address,uint256)\":[{\"details\":\"An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":\"ERC721Enumerable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x36797469c391ea5ba27408e6ca8adf0824ba6f3adea9c139be18bd6f63232c16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0dcf8bb9f7c29d678de34a051b4a71cf27ae56464678696c6913cbbfc75d548a\",\"dweb:/ipfs/QmSfdgU9V2dXh9oajUxgF9hU1aPnpd1PEMtcchoANsCNmW\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x3d6954a93ac198a2ffa384fa58ccf18e7e235263e051a394328002eff4e073de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f58c799bd939d3951c94893e83ef86acd56989d1d7db7f9d180c515e29e28ff\",\"dweb:/ipfs/QmTgAxHAAys4kq9ZfU9YB24MWYoHLGAKSxnYUigPFrNW7g\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 175,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 179,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 183,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 189,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1299,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_ownedTokens",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							},
							{
								"astId": 1303,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_ownedTokensIndex",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1306,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_allTokens",
								"offset": 0,
								"slot": "8",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 1310,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_allTokensIndex",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"IERC721Enumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"tokenByIndex(uint256)": {
								"details": "Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional enumeration extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x3d6954a93ac198a2ffa384fa58ccf18e7e235263e051a394328002eff4e073de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f58c799bd939d3951c94893e83ef86acd56989d1d7db7f9d180c515e29e28ff\",\"dweb:/ipfs/QmTgAxHAAys4kq9ZfU9YB24MWYoHLGAKSxnYUigPFrNW7g\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122044ecc9b1d0d157284f1de827d0a8cc820faea4a7dea0e21de227bde082bedbc564736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122044ecc9b1d0d157284f1de827d0a8cc820faea4a7dea0e21de227bde082bedbc564736f6c634300081a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIFFICULTY 0xEC 0xC9 0xB1 0xD0 0xD1 JUMPI 0x28 0x4F SAR 0xE8 0x27 0xD0 0xA8 0xCC DUP3 0xF 0xAE LOG4 0xA7 0xDE LOG0 0xE2 SAR 0xE2 0x27 0xBD 0xE0 DUP3 0xBE 0xDB 0xC5 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "251:2847:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122044ecc9b1d0d157284f1de827d0a8cc820faea4a7dea0e21de227bde082bedbc564736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIFFICULTY 0xEC 0xC9 0xB1 0xD0 0xD1 JUMPI 0x28 0x4F SAR 0xE8 0x27 0xD0 0xA8 0xCC DUP3 0xF 0xAE LOG4 0xA7 0xDE LOG0 0xE2 SAR 0xE2 0x27 0xBD 0xE0 DUP3 0xBE 0xDB 0xC5 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "251:2847:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122044ecc9b1d0d157284f1de827d0a8cc820faea4a7dea0e21de227bde082bedbc564736f6c634300081a0033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/MintAnimalToken.sol",
								"contracts/SaleAnimalToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220cee994082f5ba4a577df9815f46880285a118acde1042f7a574d64cddd62375564736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cee994082f5ba4a577df9815f46880285a118acde1042f7a574d64cddd62375564736f6c634300081a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE 0xE9 SWAP5 ADDMOD 0x2F JUMPDEST LOG4 0xA5 PUSH24 0xDF9815F46880285A118ACDE1042F7A574D64CDDD62375564 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "203:14914:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cee994082f5ba4a577df9815f46880285a118acde1042f7a574d64cddd62375564736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE 0xE9 SWAP5 ADDMOD 0x2F JUMPDEST LOG4 0xA5 PUSH24 0xDF9815F46880285A118ACDE1042F7A574D64CDDD62375564 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "203:14914:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cee994082f5ba4a577df9815f46880285a118acde1042f7a574d64cddd62375564736f6c634300081a0033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/MintAnimalToken.sol",
								"contracts/SaleAnimalToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203954692f7b86466f0c3a88db0c67bae19435a5989177571f251fd8dcf803e77464736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203954692f7b86466f0c3a88db0c67bae19435a5989177571f251fd8dcf803e77464736f6c634300081a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY SLOAD PUSH10 0x2F7B86466F0C3A88DB0C PUSH8 0xBAE19435A5989177 JUMPI 0x1F 0x25 0x1F 0xD8 0xDC 0xF8 SUB 0xE7 PUSH21 0x64736F6C634300081A003300000000000000000000 ",
							"sourceMap": "216:1047:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203954692f7b86466f0c3a88db0c67bae19435a5989177571f251fd8dcf803e77464736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY SLOAD PUSH10 0x2F7B86466F0C3A88DB0C PUSH8 0xBAE19435A5989177 JUMPI 0x1F 0x25 0x1F 0xD8 0xDC 0xF8 SUB 0xE7 PUSH21 0x64736F6C634300081A003300000000000000000000 ",
							"sourceMap": "216:1047:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203954692f7b86466f0c3a88db0c67bae19435a5989177571f251fd8dcf803e77464736f6c634300081a0033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/MintAnimalToken.sol",
								"contracts/SaleAnimalToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/MintAnimalToken.sol": {
				"MintAnimalToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ERC721EnumerableForbiddenBatchMint",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "ERC721OutOfBoundsIndex",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "animalTypes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mintAnimalToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721EnumerableForbiddenBatchMint()": [
								{
									"details": "Batch mint is not allowed."
								}
							],
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721OutOfBoundsIndex(address,uint256)": [
								{
									"details": "An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenByIndex(uint256)": {
								"details": "See {IERC721Enumerable-tokenByIndex}."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"totalSupply()": {
								"details": "See {IERC721Enumerable-totalSupply}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MintAnimalToken.sol\":146:626  contract MintAnimalToken is ERC721Enumerable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/MintAnimalToken.sol\":198:247  constructor() ERC721(\"bourgeoisAnimals\", \"BAS\"){} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x10\n  dup2\n  mstore\n  0x20\n  add\n  0x626f757267656f6973416e696d616c7300000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x4241530000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1455:1460  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1452  _name */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1460  _name = name_ */\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1480:1487  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1477  _symbol */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1487  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/MintAnimalToken.sol\":146:626  contract MintAnimalToken is ERC721Enumerable {... */\n  jump(tag_9)\n    /* \"#utility.yul\":7:106   */\ntag_10:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_11:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_12:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_13:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_35:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_37\n  tag_12\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":714:798   */\ntag_36:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_14:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_15:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_16:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_17:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_42\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_16\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1429:1468   */\n  tag_43\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_16\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_18:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_19:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_20:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_47\n    /* \"#utility.yul\":1818:1852   */\n  tag_48\n    /* \"#utility.yul\":1827:1851   */\n  tag_49\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_18\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1818:1852   */\n  tag_19\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1800:1853   */\n  tag_18\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_21:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_22:\n    /* \"#utility.yul\":2056:2095   */\n  tag_52\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_20\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":2117:2208   */\n  tag_53\n    /* \"#utility.yul\":2166:2207   */\n  tag_54\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_21\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_17\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_23:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_24:\n    /* \"#utility.yul\":2377:2409   */\n  tag_57\n  tag_23\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":2418:2483   */\n  tag_58\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_22\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_25:\n    /* \"#utility.yul\":2555:2675   */\ntag_60:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_63\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_24\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_60)\ntag_62:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_26:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_66\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_14\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2906:2935   */\n  tag_67\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_15\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_68:\n    /* \"#utility.yul\":3133:3213   */\n  tag_69\n    /* \"#utility.yul\":3189:3211   */\n  tag_70\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_15\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_25\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_65:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_27:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_28:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_73\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_27\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_29:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_75\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_28\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_6:\n    /* \"#utility.yul\":3950:3987   */\n  tag_77\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_10\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_79\n  tag_11\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":4038:4094   */\ntag_78:\n    /* \"#utility.yul\":4118:4156   */\n  tag_80\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_13\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":4203:4270   */\n  tag_81\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_26\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_83\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_84:\n    /* \"#utility.yul\":5144:5211   */\n  tag_85\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_29\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_82)\n    /* \"#utility.yul\":4365:4983   */\ntag_83:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_86\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_14\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_87:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_87)\ntag_89:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_91\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_28\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_90:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_82:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/MintAnimalToken.sol\":146:626  contract MintAnimalToken is ERC721Enumerable {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MintAnimalToken.sol\":146:626  contract MintAnimalToken is ERC721Enumerable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4f6ccce7\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x4f6ccce7\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x62b4c27f\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x18160ddd\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2f745c59\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x4e7fe41e\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1435:1657  function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {... */\n    tag_3:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_5:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2062:2164  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_8:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1736:1991  function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual returns (uint256) {... */\n    tag_9:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_10:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n    tag_56:\n      stop\n        /* \"contracts/MintAnimalToken.sol\":256:302  mapping(uint256 => uint256) public animalTypes */\n    tag_11:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2236:2462  function tokenByIndex(uint256 index) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MintAnimalToken.sol\":311:623  function mintAnimalToken() public { ... */\n    tag_13:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_14:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_15:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_16:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_17:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      tag_84\n      jump\t// in\n    tag_81:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_18:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      tag_88\n      jump\t// in\n    tag_85:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_19:\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_20:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      tag_96\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1435:1657  function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1537:1541  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1575:1610  type(IERC721Enumerable).interfaceId */\n      0x780e9d6300000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1560:1610  interfaceId == type(IERC721Enumerable).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1560:1571  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1560:1610  interfaceId == type(IERC721Enumerable).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1560:1650  interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_99\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1614:1650  super.supportsInterface(interfaceId) */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1638:1649  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1614:1637  super.supportsInterface */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1614:1650  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1560:1650  interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId) */\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1553:1650  return interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1435:1657  function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2410:2423  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2442:2447  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2435:2447  return _name */\n      dup1\n      sload\n      tag_103\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_105\n      swap1\n      tag_104\n      jump\t// in\n    tag_105:\n      dup1\n      iszero\n      tag_106\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_107\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_106)\n    tag_107:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_108:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_108\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3571  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      tag_110\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3604  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3596  _requireOwned */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      jump\t// in\n    tag_110:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3636:3643  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3635  _getApproved */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      jump\t// in\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3616:3644  return _getApproved(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      tag_115\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3403:3405  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3407:3414  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3426  _msgSender */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3402  _approve */\n      tag_118\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_115:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2062:2164  function totalSupply() public view virtual returns (uint256) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2114:2121  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2140:2150  _allTokens */\n      0x08\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2140:2157  _allTokens.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2133:2157  return _allTokens.length */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2062:2164  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4251:4252  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4239  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n      tag_121\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4306:4307  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4276:4309  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4559  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4570:4572  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4574:4581  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4593  _msgSender */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      jump\t// in\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4569  _update */\n      tag_125\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4596  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4627:4631  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4623  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n      tag_126\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4675:4679  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4681:4688  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4690:4703  previousOwner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4223:4721  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1736:1991  function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual returns (uint256) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1824:1831  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1856:1872  balanceOf(owner) */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1866:1871  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1856:1865  balanceOf */\n      tag_76\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1856:1872  balanceOf(owner) */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1847:1852  index */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1847:1872  index >= balanceOf(owner) */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1843:1942  if (index >= balanceOf(owner)) {... */\n      tag_131\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1918:1923  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1925:1930  index */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1895:1931  ERC721OutOfBoundsIndex(owner, index) */\n      mload(0x40)\n      0xa57d13dc00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap3\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1843:1942  if (index >= balanceOf(owner)) {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1958:1970  _ownedTokens */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1958:1977  _ownedTokens[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1971:1976  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1958:1977  _ownedTokens[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1958:1984  _ownedTokens[owner][index] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1978:1983  index */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1958:1984  _ownedTokens[owner][index] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1951:1984  return _ownedTokens[owner][index] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1736:1991  function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4890:4894  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4896:4898  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4900:4907  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4889  safeTransferFrom */\n      tag_88\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MintAnimalToken.sol\":256:302  mapping(uint256 => uint256) public animalTypes */\n    tag_61:\n      mstore(0x20, 0x0a)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2236:2462  function tokenByIndex(uint256 index) public view virtual returns (uint256) {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2302:2309  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2334:2347  totalSupply() */\n      tag_137\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2334:2345  totalSupply */\n      tag_45\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2334:2347  totalSupply() */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2325:2330  index */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2325:2347  index >= totalSupply() */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2321:2422  if (index >= totalSupply()) {... */\n      tag_138\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2401:2402  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2405:2410  index */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2370:2411  ERC721OutOfBoundsIndex(address(0), index) */\n      mload(0x40)\n      0xa57d13dc00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap3\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2321:2422  if (index >= totalSupply()) {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2438:2448  _allTokens */\n      0x08\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2449:2454  index */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2438:2455  _allTokens[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_140\n      jumpi\n      tag_141\n      tag_142\n      jump\t// in\n    tag_141:\n    tag_140:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2431:2455  return _allTokens[index] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2236:2462  function tokenByIndex(uint256 index) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/MintAnimalToken.sol\":311:623  function mintAnimalToken() public { ... */\n    tag_68:\n        /* \"contracts/MintAnimalToken.sol\":356:377  uint256 animalTokenId */\n      0x00\n        /* \"contracts/MintAnimalToken.sol\":396:397  1 */\n      0x01\n        /* \"contracts/MintAnimalToken.sol\":380:393  totalSupply() */\n      tag_145\n        /* \"contracts/MintAnimalToken.sol\":380:391  totalSupply */\n      tag_45\n        /* \"contracts/MintAnimalToken.sol\":380:393  totalSupply() */\n      jump\t// in\n    tag_145:\n        /* \"contracts/MintAnimalToken.sol\":380:397  totalSupply() + 1 */\n      tag_146\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n        /* \"contracts/MintAnimalToken.sol\":356:397  uint256 animalTokenId = totalSupply() + 1 */\n      swap1\n      pop\n        /* \"contracts/MintAnimalToken.sol\":410:428  uint256 animalType */\n      0x00\n        /* \"contracts/MintAnimalToken.sol\":518:519  1 */\n      0x01\n        /* \"contracts/MintAnimalToken.sol\":514:515  5 */\n      0x05\n        /* \"contracts/MintAnimalToken.sol\":466:481  block.timestamp */\n      timestamp\n        /* \"contracts/MintAnimalToken.sol\":483:493  msg.sender */\n      caller\n        /* \"contracts/MintAnimalToken.sol\":495:508  animalTokenId */\n      dup6\n        /* \"contracts/MintAnimalToken.sol\":449:509  abi.encodePacked(block.timestamp, msg.sender, animalTokenId) */\n      add(0x20, mload(0x40))\n      tag_148\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/MintAnimalToken.sol\":439:510  keccak256(abi.encodePacked(block.timestamp, msg.sender, animalTokenId)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/MintAnimalToken.sol\":431:511  uint256(keccak256(abi.encodePacked(block.timestamp, msg.sender, animalTokenId))) */\n      0x00\n      shr\n        /* \"contracts/MintAnimalToken.sol\":431:515  uint256(keccak256(abi.encodePacked(block.timestamp, msg.sender, animalTokenId))) % 5 */\n      tag_150\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n        /* \"contracts/MintAnimalToken.sol\":431:519  uint256(keccak256(abi.encodePacked(block.timestamp, msg.sender, animalTokenId))) % 5 + 1 */\n      tag_152\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_152:\n        /* \"contracts/MintAnimalToken.sol\":410:519  uint256 animalType = uint256(keccak256(abi.encodePacked(block.timestamp, msg.sender, animalTokenId))) % 5 + 1 */\n      swap1\n      pop\n        /* \"contracts/MintAnimalToken.sol\":560:570  animalType */\n      dup1\n        /* \"contracts/MintAnimalToken.sol\":531:542  animalTypes */\n      0x0a\n        /* \"contracts/MintAnimalToken.sol\":531:557  animalTypes[animalTokenId] */\n      0x00\n        /* \"contracts/MintAnimalToken.sol\":543:556  animalTokenId */\n      dup5\n        /* \"contracts/MintAnimalToken.sol\":531:557  animalTypes[animalTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MintAnimalToken.sol\":531:570  animalTypes[animalTokenId] = animalType */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MintAnimalToken.sol\":582:614  _mint(msg.sender, animalTokenId) */\n      tag_153\n        /* \"contracts/MintAnimalToken.sol\":588:598  msg.sender */\n      caller\n        /* \"contracts/MintAnimalToken.sol\":600:613  animalTokenId */\n      dup4\n        /* \"contracts/MintAnimalToken.sol\":582:587  _mint */\n      tag_154\n        /* \"contracts/MintAnimalToken.sol\":582:614  _mint(msg.sender, animalTokenId) */\n      jump\t// in\n    tag_153:\n        /* \"contracts/MintAnimalToken.sol\":345:623  { ... */\n      pop\n      pop\n        /* \"contracts/MintAnimalToken.sol\":311:623  function mintAnimalToken() public { ... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2248:2255  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2288:2295  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2287  _requireOwned */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      jump\t// in\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2267:2296  return _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1983:1990  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2023:2024  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2011  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n      tag_158\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2075:2076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2048:2078  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      0x89c62b6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2114  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2115:2120  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2098:2121  return _balances[owner] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2565:2578  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2597:2604  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2590:2604  return _symbol */\n      dup1\n      sload\n      tag_161\n      swap1\n      tag_104\n      jump\t// in\n    tag_161:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_162\n      swap1\n      tag_104\n      jump\t// in\n    tag_162:\n      dup1\n      iszero\n      tag_163\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_164\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_163)\n    tag_164:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_165:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_165\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_163:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3832  _msgSender */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3836:3844  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3854  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3821  _setApprovalForAll */\n      tag_169\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5111:5115  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5117:5119  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5121:5128  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5110  transferFrom */\n      tag_51\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_172\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5162:5166  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5168:5170  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5172:5179  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5181:5185  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5161  _checkOnERC721Received */\n      tag_173\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2741:2754  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      tag_175\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2780:2787  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2779  _requireOwned */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      jump\t// in\n    tag_175:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2820  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2831  _baseURI */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2833  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2874:2875  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2856:2863  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2871  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2875  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_178\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_179)\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2892:2899  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      tag_180\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2908  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2917  tokenId.toString */\n      tag_181\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      jump\t// in\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2878:2920  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_182\n      swap3\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2843:2925  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4016:4020  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4057  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4058:4063  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4065:4073  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4032:4074  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1663:1667  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1713:1738  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1709  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_186\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1769:1802  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1765  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_187\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      tag_188\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1842:1853  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1841  super.supportsInterface */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_188:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n    tag_187:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1679:1854  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16201:16208  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16233  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      tag_191\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16245:16252  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16244  _ownerOf */\n      tag_192\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      jump\t// in\n    tag_191:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16253  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16284:16285  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16272  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n      tag_193\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16332:16339  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16309:16340  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_194\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16367:16372  owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16360:16372  return owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6008:6015  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6049  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6050:6057  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6027:6058  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      tag_198\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14507:14509  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14511:14518  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14520:14524  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14526:14530  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14506  _approve */\n      tag_199\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      jump\t// in\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2518:3143  function _update(address to, uint256 tokenId, address auth) internal virtual override returns (address) {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2613:2620  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2632:2653  address previousOwner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2656:2688  super._update(to, tokenId, auth) */\n      tag_201\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2670:2672  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2674:2681  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2683:2687  auth */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2656:2669  super._update */\n      tag_202\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2656:2688  super._update(to, tokenId, auth) */\n      jump\t// in\n    tag_201:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2632:2688  address previousOwner = super._update(to, tokenId, auth) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2728:2729  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2703:2730  previousOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2703:2716  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2703:2730  previousOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2699:2909  if (previousOwner == address(0)) {... */\n      tag_203\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2746:2786  _addTokenToAllTokensEnumeration(tokenId) */\n      tag_204\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2778:2785  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2746:2777  _addTokenToAllTokensEnumeration */\n      tag_205\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2746:2786  _addTokenToAllTokensEnumeration(tokenId) */\n      jump\t// in\n    tag_204:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2699:2909  if (previousOwner == address(0)) {... */\n      jump(tag_206)\n    tag_203:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2824:2826  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2807:2826  previousOwner != to */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2807:2820  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2807:2826  previousOwner != to */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2803:2909  if (previousOwner != to) {... */\n      tag_207\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2842:2898  _removeTokenFromOwnerEnumeration(previousOwner, tokenId) */\n      tag_208\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2875:2888  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2890:2897  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2842:2874  _removeTokenFromOwnerEnumeration */\n      tag_209\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2842:2898  _removeTokenFromOwnerEnumeration(previousOwner, tokenId) */\n      jump\t// in\n    tag_208:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2803:2909  if (previousOwner != to) {... */\n    tag_207:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2699:2909  if (previousOwner == address(0)) {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2936:2937  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2922:2938  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2922:2924  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2922:2938  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2918:3106  if (to == address(0)) {... */\n      tag_210\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2954:2999  _removeTokenFromAllTokensEnumeration(tokenId) */\n      tag_211\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2991:2998  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2954:2990  _removeTokenFromAllTokensEnumeration */\n      tag_212\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2954:2999  _removeTokenFromAllTokensEnumeration(tokenId) */\n      jump\t// in\n    tag_211:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2918:3106  if (to == address(0)) {... */\n      jump(tag_213)\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3037:3039  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3020:3039  previousOwner != to */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3020:3033  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3020:3039  previousOwner != to */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3016:3106  if (previousOwner != to) {... */\n      tag_214\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3055:3095  _addTokenToOwnerEnumeration(to, tokenId) */\n      tag_215\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3083:3085  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3087:3094  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3055:3082  _addTokenToOwnerEnumeration */\n      tag_216\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3055:3095  _addTokenToOwnerEnumeration(to, tokenId) */\n      jump\t// in\n    tag_215:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3016:3106  if (previousOwner != to) {... */\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2918:3106  if (to == address(0)) {... */\n    tag_213:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3123:3136  previousOwner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3116:3136  return previousOwner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2518:3143  function _update(address to, uint256 tokenId, address auth) internal virtual override returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10036:10037  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10024  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n      tag_218\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10091:10092  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10061:10094  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_219\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_219:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n    tag_218:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10135  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      tag_220\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10146:10148  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10150:10157  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10167:10168  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10145  _update */\n      tag_125\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_220:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10170  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10209:10210  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10197  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n      tag_221\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10262:10263  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10234:10265  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      0x73c6ac6e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_222\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n    tag_221:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10008:10282  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15718:15719  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15706  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n      tag_224\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15765:15773  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15743:15774  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_225\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_225:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n    tag_224:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15832:15840  approved */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15812  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15813:15818  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15820:15828  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15840  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15877:15885  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15870:15875  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15887:15895  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_226\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_226:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17051:17052  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17036  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17048  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17052  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n      iszero\n      tag_228\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17088:17090  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17108  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      tag_229\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17119  _msgSender */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      jump\t// in\n    tag_229:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17123:17127  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17129:17136  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17138:17142  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_230\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_230:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_232\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_233\n      swap2\n      swap1\n      tag_234\n      jump\t// in\n    tag_233:\n      0x01\n    tag_232:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_235\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_240\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_239)\n    tag_240:\n      0x60\n      swap2\n      pop\n    tag_239:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17398:17399  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17387  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17394  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17399  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n      tag_241\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17452:17454  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17430:17455  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_242\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_242:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n    tag_241:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17622:17628  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17616:17629  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17607:17613  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17603:17605  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17599:17614  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17592:17630  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_235:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17200:17241  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17196  retval */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_245\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17294:17296  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17272:17297  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_246\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_246:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_245:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17144:17330  returns (bytes4 retval) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n    tag_228:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3225:3238  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3250:3259  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_181:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":693:706  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:756  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":779:780  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      tag_249\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":770:775  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:769  Math.log10 */\n      tag_250\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      jump\t// in\n    tag_249:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:780  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:780  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:814  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":828:834  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:835  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_251\n      jumpi\n      tag_252\n      tag_253\n      jump\t// in\n    tag_252:\n    tag_251:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_254\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_254:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:835  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":849:860  uint256 ptr */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":975:981  length */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":971:973  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":967:982  add(32, length) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":959:965  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":948:983  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_255:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1017:1021  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      iszero\n      tag_256\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1180:1190  HEX_DIGITS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1175:1177  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1168:1173  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1164:1178  mod(value, 10) */\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1159:1191  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1154:1157  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1146:1192  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1236:1238  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1227:1238  value /= 10 */\n      dup6\n      dup2\n      tag_257\n      jumpi\n      tag_258\n      tag_259\n      jump\t// in\n    tag_258:\n    tag_257:\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1269:1270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1265  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1270  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      tag_255\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_256:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1312:1318  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1305:1318  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5773:5780  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5806  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5807:5814  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5792:5815  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_199:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14889  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n      dup1\n      tag_264\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14909:14910  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14897  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n    tag_264:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_265\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14940  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      tag_266\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14957:14964  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14956  _requireOwned */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      jump\t// in\n    tag_266:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14965  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15109:15110  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15097  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n      dup1\n      iszero\n      tag_267\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15124:15128  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n    tag_267:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_268\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      tag_269\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15150:15155  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15157:15161  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15149  isApprovedForAll */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_269:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15132:15162  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_268:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_270\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15211:15215  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15216  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_271\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_271:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15249:15258  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n      iszero\n      tag_272\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15303:15310  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15299:15301  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15292:15297  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n    tag_272:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14913:15336  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n    tag_265:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15373:15375  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15361  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15362:15369  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15375  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8924:8931  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8955  address from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      tag_274\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8967:8974  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8966  _ownerOf */\n      tag_192\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      jump\t// in\n    tag_274:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8975  address from = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9051:9052  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9039  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n      tag_275\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      tag_276\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9086:9090  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9092:9096  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9098:9105  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9085  _checkAuthorized */\n      tag_277\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_276:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n    tag_275:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9177:9178  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9165  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n      tag_278\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      tag_279\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9294:9295  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9298:9305  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9315:9316  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9319:9324  false */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9285  _approve */\n      tag_199\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_279:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9387:9388  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9377  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9378:9382  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9388  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n    tag_278:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9441:9442  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9429  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n      tag_280\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9504:9505  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9496  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9497:9499  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9505  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n    tag_280:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9559:9561  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9547  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9548:9555  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9561  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9596:9603  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9592:9594  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9586:9590  from */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9622:9626  from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9615:9626  return from */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3846:4007  function _addTokenToAllTokensEnumeration(uint256 tokenId) private {... */\n    tag_205:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3949:3959  _allTokens */\n      0x08\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3949:3966  _allTokens.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3922:3937  _allTokensIndex */\n      0x09\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3922:3946  _allTokensIndex[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3938:3945  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3922:3946  _allTokensIndex[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3922:3966  _allTokensIndex[tokenId] = _allTokens.length */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3976:3986  _allTokens */\n      0x08\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3992:3999  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3976:4000  _allTokens.push(tokenId) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3846:4007  function _addTokenToAllTokensEnumeration(uint256 tokenId) private {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4624:5583  function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {... */\n    tag_209:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4886:4908  uint256 lastTokenIndex */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4911:4926  balanceOf(from) */\n      tag_284\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4921:4925  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4911:4920  balanceOf */\n      tag_76\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4911:4926  balanceOf(from) */\n      jump\t// in\n    tag_284:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4886:4926  uint256 lastTokenIndex = balanceOf(from) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4936:4954  uint256 tokenIndex */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4957:4974  _ownedTokensIndex */\n      0x07\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4957:4983  _ownedTokensIndex[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4975:4982  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4957:4983  _ownedTokensIndex[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4936:4983  uint256 tokenIndex = _ownedTokensIndex[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5101:5115  lastTokenIndex */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5087:5097  tokenIndex */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5087:5115  tokenIndex != lastTokenIndex */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5083:5406  if (tokenIndex != lastTokenIndex) {... */\n      tag_285\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5131:5150  uint256 lastTokenId */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5153:5165  _ownedTokens */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5153:5171  _ownedTokens[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5166:5170  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5153:5171  _ownedTokens[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5153:5187  _ownedTokens[from][lastTokenIndex] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5172:5186  lastTokenIndex */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5153:5187  _ownedTokens[from][lastTokenIndex] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5131:5187  uint256 lastTokenId = _ownedTokens[from][lastTokenIndex] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5235:5246  lastTokenId */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5202:5214  _ownedTokens */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5202:5220  _ownedTokens[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5215:5219  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5202:5220  _ownedTokens[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5202:5232  _ownedTokens[from][tokenIndex] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5221:5231  tokenIndex */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5202:5232  _ownedTokens[from][tokenIndex] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5202:5246  _ownedTokens[from][tokenIndex] = lastTokenId */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5351:5361  tokenIndex */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5318:5335  _ownedTokensIndex */\n      0x07\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5318:5348  _ownedTokensIndex[lastTokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5336:5347  lastTokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5318:5348  _ownedTokensIndex[lastTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5318:5361  _ownedTokensIndex[lastTokenId] = tokenIndex */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5117:5406  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5083:5406  if (tokenIndex != lastTokenIndex) {... */\n    tag_285:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5499:5516  _ownedTokensIndex */\n      0x07\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5499:5525  _ownedTokensIndex[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5517:5524  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5499:5525  _ownedTokensIndex[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5492:5525  delete _ownedTokensIndex[tokenId] */\n      0x00\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5542:5554  _ownedTokens */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5542:5560  _ownedTokens[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5555:5559  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5542:5560  _ownedTokens[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5542:5576  _ownedTokens[from][lastTokenIndex] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5561:5575  lastTokenIndex */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5542:5576  _ownedTokens[from][lastTokenIndex] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5535:5576  delete _ownedTokens[from][lastTokenIndex] */\n      0x00\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4705:5583  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4624:5583  function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5871:6932  function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {... */\n    tag_212:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6120:6142  uint256 lastTokenIndex */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6165:6166  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6145:6155  _allTokens */\n      0x08\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6145:6162  _allTokens.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6145:6166  _allTokens.length - 1 */\n      tag_287\n      swap2\n      swap1\n      tag_288\n      jump\t// in\n    tag_287:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6120:6166  uint256 lastTokenIndex = _allTokens.length - 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6176:6194  uint256 tokenIndex */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6197:6212  _allTokensIndex */\n      0x09\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6197:6221  _allTokensIndex[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6213:6220  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6197:6221  _allTokensIndex[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6176:6221  uint256 tokenIndex = _allTokensIndex[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6543:6562  uint256 lastTokenId */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6565:6575  _allTokens */\n      0x08\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6576:6590  lastTokenIndex */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6565:6591  _allTokens[lastTokenIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_289\n      jumpi\n      tag_290\n      tag_142\n      jump\t// in\n    tag_290:\n    tag_289:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6543:6591  uint256 lastTokenId = _allTokens[lastTokenIndex] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6627:6638  lastTokenId */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6602:6612  _allTokens */\n      0x08\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6613:6623  tokenIndex */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6602:6624  _allTokens[tokenIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_292\n      jumpi\n      tag_293\n      tag_142\n      jump\t// in\n    tag_293:\n    tag_292:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6602:6638  _allTokens[tokenIndex] = lastTokenId */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6737:6747  tokenIndex */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6706:6721  _allTokensIndex */\n      0x09\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6706:6734  _allTokensIndex[lastTokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6722:6733  lastTokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6706:6734  _allTokensIndex[lastTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6706:6747  _allTokensIndex[lastTokenId] = tokenIndex */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6875:6890  _allTokensIndex */\n      0x09\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6875:6899  _allTokensIndex[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6891:6898  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6875:6899  _allTokensIndex[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6868:6899  delete _allTokensIndex[tokenId] */\n      0x00\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6909:6919  _allTokens */\n      0x08\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6909:6925  _allTokens.pop() */\n      dup1\n      sload\n      dup1\n      tag_295\n      jumpi\n      tag_296\n      tag_297\n      jump\t// in\n    tag_296:\n    tag_295:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5942:6932  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5871:6932  function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3437:3651  function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {... */\n    tag_216:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3521:3535  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3554:3555  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3538:3551  balanceOf(to) */\n      tag_300\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3548:3550  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3538:3547  balanceOf */\n      tag_76\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3538:3551  balanceOf(to) */\n      jump\t// in\n    tag_300:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3538:3555  balanceOf(to) - 1 */\n      tag_301\n      swap2\n      swap1\n      tag_288\n      jump\t// in\n    tag_301:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3521:3555  uint256 length = balanceOf(to) - 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3592:3599  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3565:3577  _ownedTokens */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3565:3581  _ownedTokens[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3578:3580  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3565:3581  _ownedTokens[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3565:3589  _ownedTokens[to][length] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3582:3588  length */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3565:3589  _ownedTokens[to][length] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3565:3599  _ownedTokens[to][length] = tokenId */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3638:3644  length */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3609:3626  _ownedTokensIndex */\n      0x07\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3609:3635  _ownedTokensIndex[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3627:3634  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3609:3635  _ownedTokensIndex[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3609:3644  _ownedTokensIndex[tokenId] = length */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3511:3651  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3437:3651  function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_250:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12267:12274  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12300  uint256 result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12303:12304  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12304  uint256 result = 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12351:12359  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12347  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12359  value >= 10 ** 64 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n      tag_303\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12388:12396  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12379:12396  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_304\n      jumpi\n      tag_305\n      tag_259\n      jump\t// in\n    tag_305:\n    tag_304:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12424:12426  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12414:12426  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n    tag_303:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12467:12475  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12463  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12475  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n      tag_306\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12504:12512  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12495:12512  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_307\n      jumpi\n      tag_308\n      tag_259\n      jump\t// in\n    tag_308:\n    tag_307:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12540:12542  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12530:12542  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n    tag_306:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12583:12591  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12579  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12591  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n      tag_309\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12620:12628  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12611:12628  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_310\n      jumpi\n      tag_311\n      tag_259\n      jump\t// in\n    tag_311:\n    tag_310:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12656:12658  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12646:12658  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n    tag_309:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12699:12706  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12695  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12706  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n      tag_312\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12735:12742  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12726:12742  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_313\n      jumpi\n      tag_314\n      tag_259\n      jump\t// in\n    tag_314:\n    tag_313:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12770:12771  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12760:12771  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n    tag_312:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12812:12819  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12808  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12819  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n      tag_315\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12848:12855  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12839:12855  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_316\n      jumpi\n      tag_317\n      tag_259\n      jump\t// in\n    tag_317:\n    tag_316:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12883:12884  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12873:12884  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n    tag_315:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12925:12932  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12921  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12932  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n      tag_318\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12961:12968  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12952:12968  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_319\n      jumpi\n      tag_320\n      tag_259\n      jump\t// in\n    tag_320:\n    tag_319:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12996:12997  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12986:12997  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n    tag_318:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13038:13045  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13034  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13045  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n      tag_321\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13075:13076  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13065:13076  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n    tag_321:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13117:13123  result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13110:13123  return result */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_277:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      tag_323\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7208:7213  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7215:7222  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7224:7231  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7207  _isAuthorized */\n      tag_324\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_323:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_325\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7269:7270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7257  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n      tag_326\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7321:7328  tokenId */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7298:7329  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_327\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_327:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n    tag_326:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7402:7409  spender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7411:7418  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      0x177e802f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_329\n      swap3\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_329:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n    tag_325:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_324:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6479:6483  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6533:6534  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6521  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n      dup1\n      iszero\n      tag_331\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6561:6568  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6557  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_332\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      tag_333\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6589:6594  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6596:6603  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6588  isApprovedForAll */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_333:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n    tag_332:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_334\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6633:6640  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      tag_335\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6621:6628  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6620  _getApproved */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      jump\t// in\n    tag_335:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_334:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n    tag_331:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6495:6641  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_336:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_337:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_338:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_339:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_340:\n        /* \"#utility.yul\":561:584   */\n      tag_388\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_339\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_389\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_389:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_341:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_391\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_340\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_26:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_393\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_394\n      tag_337\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":833:952   */\n    tag_393:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_395\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_341\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_342:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_343:\n        /* \"#utility.yul\":1268:1289   */\n      tag_398\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_342\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_29:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_400\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_343\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_344:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_345:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2046   */\n    tag_346:\n        /* \"#utility.yul\":1880:1881   */\n      0x00\n        /* \"#utility.yul\":1890:2003   */\n    tag_404:\n        /* \"#utility.yul\":1904:1910   */\n      dup4\n        /* \"#utility.yul\":1901:1902   */\n      dup2\n        /* \"#utility.yul\":1898:1911   */\n      lt\n        /* \"#utility.yul\":1890:2003   */\n      iszero\n      tag_406\n      jumpi\n        /* \"#utility.yul\":1989:1990   */\n      dup1\n        /* \"#utility.yul\":1984:1987   */\n      dup3\n        /* \"#utility.yul\":1980:1991   */\n      add\n        /* \"#utility.yul\":1974:1992   */\n      mload\n        /* \"#utility.yul\":1970:1971   */\n      dup2\n        /* \"#utility.yul\":1965:1968   */\n      dup5\n        /* \"#utility.yul\":1961:1972   */\n      add\n        /* \"#utility.yul\":1954:1993   */\n      mstore\n        /* \"#utility.yul\":1926:1928   */\n      0x20\n        /* \"#utility.yul\":1923:1924   */\n      dup2\n        /* \"#utility.yul\":1919:1929   */\n      add\n        /* \"#utility.yul\":1914:1929   */\n      swap1\n      pop\n        /* \"#utility.yul\":1890:2003   */\n      jump(tag_404)\n    tag_406:\n        /* \"#utility.yul\":2037:2038   */\n      0x00\n        /* \"#utility.yul\":2028:2034   */\n      dup5\n        /* \"#utility.yul\":2023:2026   */\n      dup5\n        /* \"#utility.yul\":2019:2035   */\n      add\n        /* \"#utility.yul\":2012:2039   */\n      mstore\n        /* \"#utility.yul\":1860:2046   */\n      pop\n        /* \"#utility.yul\":1798:2046   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2052:2154   */\n    tag_347:\n        /* \"#utility.yul\":2093:2099   */\n      0x00\n        /* \"#utility.yul\":2144:2146   */\n      0x1f\n        /* \"#utility.yul\":2140:2147   */\n      not\n        /* \"#utility.yul\":2135:2137   */\n      0x1f\n        /* \"#utility.yul\":2128:2133   */\n      dup4\n        /* \"#utility.yul\":2124:2138   */\n      add\n        /* \"#utility.yul\":2120:2148   */\n      and\n        /* \"#utility.yul\":2110:2148   */\n      swap1\n      pop\n        /* \"#utility.yul\":2052:2154   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2160:2537   */\n    tag_348:\n        /* \"#utility.yul\":2248:2251   */\n      0x00\n        /* \"#utility.yul\":2276:2315   */\n      tag_409\n        /* \"#utility.yul\":2309:2314   */\n      dup3\n        /* \"#utility.yul\":2276:2315   */\n      tag_344\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":2331:2402   */\n      tag_410\n        /* \"#utility.yul\":2395:2401   */\n      dup2\n        /* \"#utility.yul\":2390:2393   */\n      dup6\n        /* \"#utility.yul\":2331:2402   */\n      tag_345\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":2324:2402   */\n      swap4\n      pop\n        /* \"#utility.yul\":2411:2476   */\n      tag_411\n        /* \"#utility.yul\":2469:2475   */\n      dup2\n        /* \"#utility.yul\":2464:2467   */\n      dup6\n        /* \"#utility.yul\":2457:2461   */\n      0x20\n        /* \"#utility.yul\":2450:2455   */\n      dup7\n        /* \"#utility.yul\":2446:2462   */\n      add\n        /* \"#utility.yul\":2411:2476   */\n      tag_346\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":2501:2530   */\n      tag_412\n        /* \"#utility.yul\":2523:2529   */\n      dup2\n        /* \"#utility.yul\":2501:2530   */\n      tag_347\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":2496:2499   */\n      dup5\n        /* \"#utility.yul\":2492:2531   */\n      add\n        /* \"#utility.yul\":2485:2531   */\n      swap2\n      pop\n        /* \"#utility.yul\":2252:2537   */\n      pop\n        /* \"#utility.yul\":2160:2537   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2543:2856   */\n    tag_33:\n        /* \"#utility.yul\":2656:2660   */\n      0x00\n        /* \"#utility.yul\":2694:2696   */\n      0x20\n        /* \"#utility.yul\":2683:2692   */\n      dup3\n        /* \"#utility.yul\":2679:2697   */\n      add\n        /* \"#utility.yul\":2671:2697   */\n      swap1\n      pop\n        /* \"#utility.yul\":2743:2752   */\n      dup2\n        /* \"#utility.yul\":2737:2741   */\n      dup2\n        /* \"#utility.yul\":2733:2753   */\n      sub\n        /* \"#utility.yul\":2729:2730   */\n      0x00\n        /* \"#utility.yul\":2718:2727   */\n      dup4\n        /* \"#utility.yul\":2714:2731   */\n      add\n        /* \"#utility.yul\":2707:2754   */\n      mstore\n        /* \"#utility.yul\":2771:2849   */\n      tag_414\n        /* \"#utility.yul\":2844:2848   */\n      dup2\n        /* \"#utility.yul\":2835:2841   */\n      dup5\n        /* \"#utility.yul\":2771:2849   */\n      tag_348\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":2763:2849   */\n      swap1\n      pop\n        /* \"#utility.yul\":2543:2856   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2862:2939   */\n    tag_349:\n        /* \"#utility.yul\":2899:2906   */\n      0x00\n        /* \"#utility.yul\":2928:2933   */\n      dup2\n        /* \"#utility.yul\":2917:2933   */\n      swap1\n      pop\n        /* \"#utility.yul\":2862:2939   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2945:3067   */\n    tag_350:\n        /* \"#utility.yul\":3018:3042   */\n      tag_417\n        /* \"#utility.yul\":3036:3041   */\n      dup2\n        /* \"#utility.yul\":3018:3042   */\n      tag_349\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":3011:3016   */\n      dup2\n        /* \"#utility.yul\":3008:3043   */\n      eq\n        /* \"#utility.yul\":2998:3061   */\n      tag_418\n      jumpi\n        /* \"#utility.yul\":3057:3058   */\n      0x00\n        /* \"#utility.yul\":3054:3055   */\n      dup1\n        /* \"#utility.yul\":3047:3059   */\n      revert\n        /* \"#utility.yul\":2998:3061   */\n    tag_418:\n        /* \"#utility.yul\":2945:3067   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3073:3212   */\n    tag_351:\n        /* \"#utility.yul\":3119:3124   */\n      0x00\n        /* \"#utility.yul\":3157:3163   */\n      dup2\n        /* \"#utility.yul\":3144:3164   */\n      calldataload\n        /* \"#utility.yul\":3135:3164   */\n      swap1\n      pop\n        /* \"#utility.yul\":3173:3206   */\n      tag_420\n        /* \"#utility.yul\":3200:3205   */\n      dup2\n        /* \"#utility.yul\":3173:3206   */\n      tag_350\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":3073:3212   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3218:3547   */\n    tag_36:\n        /* \"#utility.yul\":3277:3283   */\n      0x00\n        /* \"#utility.yul\":3326:3328   */\n      0x20\n        /* \"#utility.yul\":3314:3323   */\n      dup3\n        /* \"#utility.yul\":3305:3312   */\n      dup5\n        /* \"#utility.yul\":3301:3324   */\n      sub\n        /* \"#utility.yul\":3297:3329   */\n      slt\n        /* \"#utility.yul\":3294:3413   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":3332:3411   */\n      tag_423\n      tag_337\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":3294:3413   */\n    tag_422:\n        /* \"#utility.yul\":3452:3453   */\n      0x00\n        /* \"#utility.yul\":3477:3530   */\n      tag_424\n        /* \"#utility.yul\":3522:3529   */\n      dup5\n        /* \"#utility.yul\":3513:3519   */\n      dup3\n        /* \"#utility.yul\":3502:3511   */\n      dup6\n        /* \"#utility.yul\":3498:3520   */\n      add\n        /* \"#utility.yul\":3477:3530   */\n      tag_351\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":3467:3530   */\n      swap2\n      pop\n        /* \"#utility.yul\":3423:3540   */\n      pop\n        /* \"#utility.yul\":3218:3547   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3553:3679   */\n    tag_352:\n        /* \"#utility.yul\":3590:3597   */\n      0x00\n        /* \"#utility.yul\":3630:3672   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3623:3628   */\n      dup3\n        /* \"#utility.yul\":3619:3673   */\n      and\n        /* \"#utility.yul\":3608:3673   */\n      swap1\n      pop\n        /* \"#utility.yul\":3553:3679   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3685:3781   */\n    tag_353:\n        /* \"#utility.yul\":3722:3729   */\n      0x00\n        /* \"#utility.yul\":3751:3775   */\n      tag_427\n        /* \"#utility.yul\":3769:3774   */\n      dup3\n        /* \"#utility.yul\":3751:3775   */\n      tag_352\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":3740:3775   */\n      swap1\n      pop\n        /* \"#utility.yul\":3685:3781   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3787:3905   */\n    tag_354:\n        /* \"#utility.yul\":3874:3898   */\n      tag_429\n        /* \"#utility.yul\":3892:3897   */\n      dup2\n        /* \"#utility.yul\":3874:3898   */\n      tag_353\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":3869:3872   */\n      dup3\n        /* \"#utility.yul\":3862:3899   */\n      mstore\n        /* \"#utility.yul\":3787:3905   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3911:4133   */\n    tag_39:\n        /* \"#utility.yul\":4004:4008   */\n      0x00\n        /* \"#utility.yul\":4042:4044   */\n      0x20\n        /* \"#utility.yul\":4031:4040   */\n      dup3\n        /* \"#utility.yul\":4027:4045   */\n      add\n        /* \"#utility.yul\":4019:4045   */\n      swap1\n      pop\n        /* \"#utility.yul\":4055:4126   */\n      tag_431\n        /* \"#utility.yul\":4123:4124   */\n      0x00\n        /* \"#utility.yul\":4112:4121   */\n      dup4\n        /* \"#utility.yul\":4108:4125   */\n      add\n        /* \"#utility.yul\":4099:4105   */\n      dup5\n        /* \"#utility.yul\":4055:4126   */\n      tag_354\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":3911:4133   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4139:4261   */\n    tag_355:\n        /* \"#utility.yul\":4212:4236   */\n      tag_433\n        /* \"#utility.yul\":4230:4235   */\n      dup2\n        /* \"#utility.yul\":4212:4236   */\n      tag_353\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":4205:4210   */\n      dup2\n        /* \"#utility.yul\":4202:4237   */\n      eq\n        /* \"#utility.yul\":4192:4255   */\n      tag_434\n      jumpi\n        /* \"#utility.yul\":4251:4252   */\n      0x00\n        /* \"#utility.yul\":4248:4249   */\n      dup1\n        /* \"#utility.yul\":4241:4253   */\n      revert\n        /* \"#utility.yul\":4192:4255   */\n    tag_434:\n        /* \"#utility.yul\":4139:4261   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4267:4406   */\n    tag_356:\n        /* \"#utility.yul\":4313:4318   */\n      0x00\n        /* \"#utility.yul\":4351:4357   */\n      dup2\n        /* \"#utility.yul\":4338:4358   */\n      calldataload\n        /* \"#utility.yul\":4329:4358   */\n      swap1\n      pop\n        /* \"#utility.yul\":4367:4400   */\n      tag_436\n        /* \"#utility.yul\":4394:4399   */\n      dup2\n        /* \"#utility.yul\":4367:4400   */\n      tag_355\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":4267:4406   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4412:4886   */\n    tag_42:\n        /* \"#utility.yul\":4480:4486   */\n      0x00\n        /* \"#utility.yul\":4488:4494   */\n      dup1\n        /* \"#utility.yul\":4537:4539   */\n      0x40\n        /* \"#utility.yul\":4525:4534   */\n      dup4\n        /* \"#utility.yul\":4516:4523   */\n      dup6\n        /* \"#utility.yul\":4512:4535   */\n      sub\n        /* \"#utility.yul\":4508:4540   */\n      slt\n        /* \"#utility.yul\":4505:4624   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":4543:4622   */\n      tag_439\n      tag_337\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":4505:4624   */\n    tag_438:\n        /* \"#utility.yul\":4663:4664   */\n      0x00\n        /* \"#utility.yul\":4688:4741   */\n      tag_440\n        /* \"#utility.yul\":4733:4740   */\n      dup6\n        /* \"#utility.yul\":4724:4730   */\n      dup3\n        /* \"#utility.yul\":4713:4722   */\n      dup7\n        /* \"#utility.yul\":4709:4731   */\n      add\n        /* \"#utility.yul\":4688:4741   */\n      tag_356\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":4678:4741   */\n      swap3\n      pop\n        /* \"#utility.yul\":4634:4751   */\n      pop\n        /* \"#utility.yul\":4790:4792   */\n      0x20\n        /* \"#utility.yul\":4816:4869   */\n      tag_441\n        /* \"#utility.yul\":4861:4868   */\n      dup6\n        /* \"#utility.yul\":4852:4858   */\n      dup3\n        /* \"#utility.yul\":4841:4850   */\n      dup7\n        /* \"#utility.yul\":4837:4859   */\n      add\n        /* \"#utility.yul\":4816:4869   */\n      tag_351\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":4806:4869   */\n      swap2\n      pop\n        /* \"#utility.yul\":4761:4879   */\n      pop\n        /* \"#utility.yul\":4412:4886   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4892:5010   */\n    tag_357:\n        /* \"#utility.yul\":4979:5003   */\n      tag_443\n        /* \"#utility.yul\":4997:5002   */\n      dup2\n        /* \"#utility.yul\":4979:5003   */\n      tag_349\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":4974:4977   */\n      dup3\n        /* \"#utility.yul\":4967:5004   */\n      mstore\n        /* \"#utility.yul\":4892:5010   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5016:5238   */\n    tag_47:\n        /* \"#utility.yul\":5109:5113   */\n      0x00\n        /* \"#utility.yul\":5147:5149   */\n      0x20\n        /* \"#utility.yul\":5136:5145   */\n      dup3\n        /* \"#utility.yul\":5132:5150   */\n      add\n        /* \"#utility.yul\":5124:5150   */\n      swap1\n      pop\n        /* \"#utility.yul\":5160:5231   */\n      tag_445\n        /* \"#utility.yul\":5228:5229   */\n      0x00\n        /* \"#utility.yul\":5217:5226   */\n      dup4\n        /* \"#utility.yul\":5213:5230   */\n      add\n        /* \"#utility.yul\":5204:5210   */\n      dup5\n        /* \"#utility.yul\":5160:5231   */\n      tag_357\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":5016:5238   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5244:5863   */\n    tag_50:\n        /* \"#utility.yul\":5321:5327   */\n      0x00\n        /* \"#utility.yul\":5329:5335   */\n      dup1\n        /* \"#utility.yul\":5337:5343   */\n      0x00\n        /* \"#utility.yul\":5386:5388   */\n      0x60\n        /* \"#utility.yul\":5374:5383   */\n      dup5\n        /* \"#utility.yul\":5365:5372   */\n      dup7\n        /* \"#utility.yul\":5361:5384   */\n      sub\n        /* \"#utility.yul\":5357:5389   */\n      slt\n        /* \"#utility.yul\":5354:5473   */\n      iszero\n      tag_447\n      jumpi\n        /* \"#utility.yul\":5392:5471   */\n      tag_448\n      tag_337\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":5354:5473   */\n    tag_447:\n        /* \"#utility.yul\":5512:5513   */\n      0x00\n        /* \"#utility.yul\":5537:5590   */\n      tag_449\n        /* \"#utility.yul\":5582:5589   */\n      dup7\n        /* \"#utility.yul\":5573:5579   */\n      dup3\n        /* \"#utility.yul\":5562:5571   */\n      dup8\n        /* \"#utility.yul\":5558:5580   */\n      add\n        /* \"#utility.yul\":5537:5590   */\n      tag_356\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":5527:5590   */\n      swap4\n      pop\n        /* \"#utility.yul\":5483:5600   */\n      pop\n        /* \"#utility.yul\":5639:5641   */\n      0x20\n        /* \"#utility.yul\":5665:5718   */\n      tag_450\n        /* \"#utility.yul\":5710:5717   */\n      dup7\n        /* \"#utility.yul\":5701:5707   */\n      dup3\n        /* \"#utility.yul\":5690:5699   */\n      dup8\n        /* \"#utility.yul\":5686:5708   */\n      add\n        /* \"#utility.yul\":5665:5718   */\n      tag_356\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":5655:5718   */\n      swap3\n      pop\n        /* \"#utility.yul\":5610:5728   */\n      pop\n        /* \"#utility.yul\":5767:5769   */\n      0x40\n        /* \"#utility.yul\":5793:5846   */\n      tag_451\n        /* \"#utility.yul\":5838:5845   */\n      dup7\n        /* \"#utility.yul\":5829:5835   */\n      dup3\n        /* \"#utility.yul\":5818:5827   */\n      dup8\n        /* \"#utility.yul\":5814:5836   */\n      add\n        /* \"#utility.yul\":5793:5846   */\n      tag_351\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":5783:5846   */\n      swap2\n      pop\n        /* \"#utility.yul\":5738:5856   */\n      pop\n        /* \"#utility.yul\":5244:5863   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5869:6198   */\n    tag_75:\n        /* \"#utility.yul\":5928:5934   */\n      0x00\n        /* \"#utility.yul\":5977:5979   */\n      0x20\n        /* \"#utility.yul\":5965:5974   */\n      dup3\n        /* \"#utility.yul\":5956:5963   */\n      dup5\n        /* \"#utility.yul\":5952:5975   */\n      sub\n        /* \"#utility.yul\":5948:5980   */\n      slt\n        /* \"#utility.yul\":5945:6064   */\n      iszero\n      tag_453\n      jumpi\n        /* \"#utility.yul\":5983:6062   */\n      tag_454\n      tag_337\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":5945:6064   */\n    tag_453:\n        /* \"#utility.yul\":6103:6104   */\n      0x00\n        /* \"#utility.yul\":6128:6181   */\n      tag_455\n        /* \"#utility.yul\":6173:6180   */\n      dup5\n        /* \"#utility.yul\":6164:6170   */\n      dup3\n        /* \"#utility.yul\":6153:6162   */\n      dup6\n        /* \"#utility.yul\":6149:6171   */\n      add\n        /* \"#utility.yul\":6128:6181   */\n      tag_356\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":6118:6181   */\n      swap2\n      pop\n        /* \"#utility.yul\":6074:6191   */\n      pop\n        /* \"#utility.yul\":5869:6198   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6204:6320   */\n    tag_358:\n        /* \"#utility.yul\":6274:6295   */\n      tag_457\n        /* \"#utility.yul\":6289:6294   */\n      dup2\n        /* \"#utility.yul\":6274:6295   */\n      tag_342\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":6267:6272   */\n      dup2\n        /* \"#utility.yul\":6264:6296   */\n      eq\n        /* \"#utility.yul\":6254:6314   */\n      tag_458\n      jumpi\n        /* \"#utility.yul\":6310:6311   */\n      0x00\n        /* \"#utility.yul\":6307:6308   */\n      dup1\n        /* \"#utility.yul\":6300:6312   */\n      revert\n        /* \"#utility.yul\":6254:6314   */\n    tag_458:\n        /* \"#utility.yul\":6204:6320   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6326:6459   */\n    tag_359:\n        /* \"#utility.yul\":6369:6374   */\n      0x00\n        /* \"#utility.yul\":6407:6413   */\n      dup2\n        /* \"#utility.yul\":6394:6414   */\n      calldataload\n        /* \"#utility.yul\":6385:6414   */\n      swap1\n      pop\n        /* \"#utility.yul\":6423:6453   */\n      tag_460\n        /* \"#utility.yul\":6447:6452   */\n      dup2\n        /* \"#utility.yul\":6423:6453   */\n      tag_358\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":6326:6459   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6465:6933   */\n    tag_83:\n        /* \"#utility.yul\":6530:6536   */\n      0x00\n        /* \"#utility.yul\":6538:6544   */\n      dup1\n        /* \"#utility.yul\":6587:6589   */\n      0x40\n        /* \"#utility.yul\":6575:6584   */\n      dup4\n        /* \"#utility.yul\":6566:6573   */\n      dup6\n        /* \"#utility.yul\":6562:6585   */\n      sub\n        /* \"#utility.yul\":6558:6590   */\n      slt\n        /* \"#utility.yul\":6555:6674   */\n      iszero\n      tag_462\n      jumpi\n        /* \"#utility.yul\":6593:6672   */\n      tag_463\n      tag_337\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":6555:6674   */\n    tag_462:\n        /* \"#utility.yul\":6713:6714   */\n      0x00\n        /* \"#utility.yul\":6738:6791   */\n      tag_464\n        /* \"#utility.yul\":6783:6790   */\n      dup6\n        /* \"#utility.yul\":6774:6780   */\n      dup3\n        /* \"#utility.yul\":6763:6772   */\n      dup7\n        /* \"#utility.yul\":6759:6781   */\n      add\n        /* \"#utility.yul\":6738:6791   */\n      tag_356\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":6728:6791   */\n      swap3\n      pop\n        /* \"#utility.yul\":6684:6801   */\n      pop\n        /* \"#utility.yul\":6840:6842   */\n      0x20\n        /* \"#utility.yul\":6866:6916   */\n      tag_465\n        /* \"#utility.yul\":6908:6915   */\n      dup6\n        /* \"#utility.yul\":6899:6905   */\n      dup3\n        /* \"#utility.yul\":6888:6897   */\n      dup7\n        /* \"#utility.yul\":6884:6906   */\n      add\n        /* \"#utility.yul\":6866:6916   */\n      tag_359\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":6856:6916   */\n      swap2\n      pop\n        /* \"#utility.yul\":6811:6926   */\n      pop\n        /* \"#utility.yul\":6465:6933   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6939:7056   */\n    tag_360:\n        /* \"#utility.yul\":7048:7049   */\n      0x00\n        /* \"#utility.yul\":7045:7046   */\n      dup1\n        /* \"#utility.yul\":7038:7050   */\n      revert\n        /* \"#utility.yul\":7062:7179   */\n    tag_361:\n        /* \"#utility.yul\":7171:7172   */\n      0x00\n        /* \"#utility.yul\":7168:7169   */\n      dup1\n        /* \"#utility.yul\":7161:7173   */\n      revert\n        /* \"#utility.yul\":7185:7365   */\n    tag_253:\n        /* \"#utility.yul\":7233:7310   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7230:7231   */\n      0x00\n        /* \"#utility.yul\":7223:7311   */\n      mstore\n        /* \"#utility.yul\":7330:7334   */\n      0x41\n        /* \"#utility.yul\":7327:7328   */\n      0x04\n        /* \"#utility.yul\":7320:7335   */\n      mstore\n        /* \"#utility.yul\":7354:7358   */\n      0x24\n        /* \"#utility.yul\":7351:7352   */\n      0x00\n        /* \"#utility.yul\":7344:7359   */\n      revert\n        /* \"#utility.yul\":7371:7652   */\n    tag_362:\n        /* \"#utility.yul\":7454:7481   */\n      tag_470\n        /* \"#utility.yul\":7476:7480   */\n      dup3\n        /* \"#utility.yul\":7454:7481   */\n      tag_347\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":7446:7452   */\n      dup2\n        /* \"#utility.yul\":7442:7482   */\n      add\n        /* \"#utility.yul\":7584:7590   */\n      dup2\n        /* \"#utility.yul\":7572:7582   */\n      dup2\n        /* \"#utility.yul\":7569:7591   */\n      lt\n        /* \"#utility.yul\":7548:7566   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7536:7546   */\n      dup3\n        /* \"#utility.yul\":7533:7567   */\n      gt\n        /* \"#utility.yul\":7530:7592   */\n      or\n        /* \"#utility.yul\":7527:7615   */\n      iszero\n      tag_471\n      jumpi\n        /* \"#utility.yul\":7595:7613   */\n      tag_472\n      tag_253\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":7527:7615   */\n    tag_471:\n        /* \"#utility.yul\":7635:7645   */\n      dup1\n        /* \"#utility.yul\":7631:7633   */\n      0x40\n        /* \"#utility.yul\":7624:7646   */\n      mstore\n        /* \"#utility.yul\":7414:7652   */\n      pop\n        /* \"#utility.yul\":7371:7652   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7658:7787   */\n    tag_363:\n        /* \"#utility.yul\":7692:7698   */\n      0x00\n        /* \"#utility.yul\":7719:7739   */\n      tag_474\n      tag_336\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":7709:7739   */\n      swap1\n      pop\n        /* \"#utility.yul\":7748:7781   */\n      tag_475\n        /* \"#utility.yul\":7776:7780   */\n      dup3\n        /* \"#utility.yul\":7768:7774   */\n      dup3\n        /* \"#utility.yul\":7748:7781   */\n      tag_362\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":7658:7787   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7793:8100   */\n    tag_364:\n        /* \"#utility.yul\":7854:7858   */\n      0x00\n        /* \"#utility.yul\":7944:7962   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7936:7942   */\n      dup3\n        /* \"#utility.yul\":7933:7963   */\n      gt\n        /* \"#utility.yul\":7930:7986   */\n      iszero\n      tag_477\n      jumpi\n        /* \"#utility.yul\":7966:7984   */\n      tag_478\n      tag_253\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":7930:7986   */\n    tag_477:\n        /* \"#utility.yul\":8004:8033   */\n      tag_479\n        /* \"#utility.yul\":8026:8032   */\n      dup3\n        /* \"#utility.yul\":8004:8033   */\n      tag_347\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":7996:8033   */\n      swap1\n      pop\n        /* \"#utility.yul\":8088:8092   */\n      0x20\n        /* \"#utility.yul\":8082:8086   */\n      dup2\n        /* \"#utility.yul\":8078:8093   */\n      add\n        /* \"#utility.yul\":8070:8093   */\n      swap1\n      pop\n        /* \"#utility.yul\":7793:8100   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8106:8254   */\n    tag_365:\n        /* \"#utility.yul\":8204:8210   */\n      dup3\n        /* \"#utility.yul\":8199:8202   */\n      dup2\n        /* \"#utility.yul\":8194:8197   */\n      dup4\n        /* \"#utility.yul\":8181:8211   */\n      calldatacopy\n        /* \"#utility.yul\":8245:8246   */\n      0x00\n        /* \"#utility.yul\":8236:8242   */\n      dup4\n        /* \"#utility.yul\":8231:8234   */\n      dup4\n        /* \"#utility.yul\":8227:8243   */\n      add\n        /* \"#utility.yul\":8220:8247   */\n      mstore\n        /* \"#utility.yul\":8106:8254   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8260:8683   */\n    tag_366:\n        /* \"#utility.yul\":8337:8342   */\n      0x00\n        /* \"#utility.yul\":8362:8427   */\n      tag_482\n        /* \"#utility.yul\":8378:8426   */\n      tag_483\n        /* \"#utility.yul\":8419:8425   */\n      dup5\n        /* \"#utility.yul\":8378:8426   */\n      tag_364\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":8362:8427   */\n      tag_363\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":8353:8427   */\n      swap1\n      pop\n        /* \"#utility.yul\":8450:8456   */\n      dup3\n        /* \"#utility.yul\":8443:8448   */\n      dup2\n        /* \"#utility.yul\":8436:8457   */\n      mstore\n        /* \"#utility.yul\":8488:8492   */\n      0x20\n        /* \"#utility.yul\":8481:8486   */\n      dup2\n        /* \"#utility.yul\":8477:8493   */\n      add\n        /* \"#utility.yul\":8526:8529   */\n      dup5\n        /* \"#utility.yul\":8517:8523   */\n      dup5\n        /* \"#utility.yul\":8512:8515   */\n      dup5\n        /* \"#utility.yul\":8508:8524   */\n      add\n        /* \"#utility.yul\":8505:8530   */\n      gt\n        /* \"#utility.yul\":8502:8614   */\n      iszero\n      tag_484\n      jumpi\n        /* \"#utility.yul\":8533:8612   */\n      tag_485\n      tag_361\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":8502:8614   */\n    tag_484:\n        /* \"#utility.yul\":8623:8677   */\n      tag_486\n        /* \"#utility.yul\":8670:8676   */\n      dup5\n        /* \"#utility.yul\":8665:8668   */\n      dup3\n        /* \"#utility.yul\":8660:8663   */\n      dup6\n        /* \"#utility.yul\":8623:8677   */\n      tag_365\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":8343:8683   */\n      pop\n        /* \"#utility.yul\":8260:8683   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8702:9040   */\n    tag_367:\n        /* \"#utility.yul\":8757:8762   */\n      0x00\n        /* \"#utility.yul\":8806:8809   */\n      dup3\n        /* \"#utility.yul\":8799:8803   */\n      0x1f\n        /* \"#utility.yul\":8791:8797   */\n      dup4\n        /* \"#utility.yul\":8787:8804   */\n      add\n        /* \"#utility.yul\":8783:8810   */\n      slt\n        /* \"#utility.yul\":8773:8895   */\n      tag_488\n      jumpi\n        /* \"#utility.yul\":8814:8893   */\n      tag_489\n      tag_360\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":8773:8895   */\n    tag_488:\n        /* \"#utility.yul\":8931:8937   */\n      dup2\n        /* \"#utility.yul\":8918:8938   */\n      calldataload\n        /* \"#utility.yul\":8956:9034   */\n      tag_490\n        /* \"#utility.yul\":9030:9033   */\n      dup5\n        /* \"#utility.yul\":9022:9028   */\n      dup3\n        /* \"#utility.yul\":9015:9019   */\n      0x20\n        /* \"#utility.yul\":9007:9013   */\n      dup7\n        /* \"#utility.yul\":9003:9020   */\n      add\n        /* \"#utility.yul\":8956:9034   */\n      tag_366\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":8947:9034   */\n      swap2\n      pop\n        /* \"#utility.yul\":8763:9040   */\n      pop\n        /* \"#utility.yul\":8702:9040   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9046:9989   */\n    tag_87:\n        /* \"#utility.yul\":9141:9147   */\n      0x00\n        /* \"#utility.yul\":9149:9155   */\n      dup1\n        /* \"#utility.yul\":9157:9163   */\n      0x00\n        /* \"#utility.yul\":9165:9171   */\n      dup1\n        /* \"#utility.yul\":9214:9217   */\n      0x80\n        /* \"#utility.yul\":9202:9211   */\n      dup6\n        /* \"#utility.yul\":9193:9200   */\n      dup8\n        /* \"#utility.yul\":9189:9212   */\n      sub\n        /* \"#utility.yul\":9185:9218   */\n      slt\n        /* \"#utility.yul\":9182:9302   */\n      iszero\n      tag_492\n      jumpi\n        /* \"#utility.yul\":9221:9300   */\n      tag_493\n      tag_337\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":9182:9302   */\n    tag_492:\n        /* \"#utility.yul\":9341:9342   */\n      0x00\n        /* \"#utility.yul\":9366:9419   */\n      tag_494\n        /* \"#utility.yul\":9411:9418   */\n      dup8\n        /* \"#utility.yul\":9402:9408   */\n      dup3\n        /* \"#utility.yul\":9391:9400   */\n      dup9\n        /* \"#utility.yul\":9387:9409   */\n      add\n        /* \"#utility.yul\":9366:9419   */\n      tag_356\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":9356:9419   */\n      swap5\n      pop\n        /* \"#utility.yul\":9312:9429   */\n      pop\n        /* \"#utility.yul\":9468:9470   */\n      0x20\n        /* \"#utility.yul\":9494:9547   */\n      tag_495\n        /* \"#utility.yul\":9539:9546   */\n      dup8\n        /* \"#utility.yul\":9530:9536   */\n      dup3\n        /* \"#utility.yul\":9519:9528   */\n      dup9\n        /* \"#utility.yul\":9515:9537   */\n      add\n        /* \"#utility.yul\":9494:9547   */\n      tag_356\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":9484:9547   */\n      swap4\n      pop\n        /* \"#utility.yul\":9439:9557   */\n      pop\n        /* \"#utility.yul\":9596:9598   */\n      0x40\n        /* \"#utility.yul\":9622:9675   */\n      tag_496\n        /* \"#utility.yul\":9667:9674   */\n      dup8\n        /* \"#utility.yul\":9658:9664   */\n      dup3\n        /* \"#utility.yul\":9647:9656   */\n      dup9\n        /* \"#utility.yul\":9643:9665   */\n      add\n        /* \"#utility.yul\":9622:9675   */\n      tag_351\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":9612:9675   */\n      swap3\n      pop\n        /* \"#utility.yul\":9567:9685   */\n      pop\n        /* \"#utility.yul\":9752:9754   */\n      0x60\n        /* \"#utility.yul\":9741:9750   */\n      dup6\n        /* \"#utility.yul\":9737:9755   */\n      add\n        /* \"#utility.yul\":9724:9756   */\n      calldataload\n        /* \"#utility.yul\":9783:9801   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9775:9781   */\n      dup2\n        /* \"#utility.yul\":9772:9802   */\n      gt\n        /* \"#utility.yul\":9769:9886   */\n      iszero\n      tag_497\n      jumpi\n        /* \"#utility.yul\":9805:9884   */\n      tag_498\n      tag_338\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":9769:9886   */\n    tag_497:\n        /* \"#utility.yul\":9910:9972   */\n      tag_499\n        /* \"#utility.yul\":9964:9971   */\n      dup8\n        /* \"#utility.yul\":9955:9961   */\n      dup3\n        /* \"#utility.yul\":9944:9953   */\n      dup9\n        /* \"#utility.yul\":9940:9962   */\n      add\n        /* \"#utility.yul\":9910:9972   */\n      tag_367\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":9900:9972   */\n      swap2\n      pop\n        /* \"#utility.yul\":9695:9982   */\n      pop\n        /* \"#utility.yul\":9046:9989   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9995:10469   */\n    tag_95:\n        /* \"#utility.yul\":10063:10069   */\n      0x00\n        /* \"#utility.yul\":10071:10077   */\n      dup1\n        /* \"#utility.yul\":10120:10122   */\n      0x40\n        /* \"#utility.yul\":10108:10117   */\n      dup4\n        /* \"#utility.yul\":10099:10106   */\n      dup6\n        /* \"#utility.yul\":10095:10118   */\n      sub\n        /* \"#utility.yul\":10091:10123   */\n      slt\n        /* \"#utility.yul\":10088:10207   */\n      iszero\n      tag_501\n      jumpi\n        /* \"#utility.yul\":10126:10205   */\n      tag_502\n      tag_337\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":10088:10207   */\n    tag_501:\n        /* \"#utility.yul\":10246:10247   */\n      0x00\n        /* \"#utility.yul\":10271:10324   */\n      tag_503\n        /* \"#utility.yul\":10316:10323   */\n      dup6\n        /* \"#utility.yul\":10307:10313   */\n      dup3\n        /* \"#utility.yul\":10296:10305   */\n      dup7\n        /* \"#utility.yul\":10292:10314   */\n      add\n        /* \"#utility.yul\":10271:10324   */\n      tag_356\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":10261:10324   */\n      swap3\n      pop\n        /* \"#utility.yul\":10217:10334   */\n      pop\n        /* \"#utility.yul\":10373:10375   */\n      0x20\n        /* \"#utility.yul\":10399:10452   */\n      tag_504\n        /* \"#utility.yul\":10444:10451   */\n      dup6\n        /* \"#utility.yul\":10435:10441   */\n      dup3\n        /* \"#utility.yul\":10424:10433   */\n      dup7\n        /* \"#utility.yul\":10420:10442   */\n      add\n        /* \"#utility.yul\":10399:10452   */\n      tag_356\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":10389:10452   */\n      swap2\n      pop\n        /* \"#utility.yul\":10344:10462   */\n      pop\n        /* \"#utility.yul\":9995:10469   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10475:10655   */\n    tag_368:\n        /* \"#utility.yul\":10523:10600   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10520:10521   */\n      0x00\n        /* \"#utility.yul\":10513:10601   */\n      mstore\n        /* \"#utility.yul\":10620:10624   */\n      0x22\n        /* \"#utility.yul\":10617:10618   */\n      0x04\n        /* \"#utility.yul\":10610:10625   */\n      mstore\n        /* \"#utility.yul\":10644:10648   */\n      0x24\n        /* \"#utility.yul\":10641:10642   */\n      0x00\n        /* \"#utility.yul\":10634:10649   */\n      revert\n        /* \"#utility.yul\":10661:10981   */\n    tag_104:\n        /* \"#utility.yul\":10705:10711   */\n      0x00\n        /* \"#utility.yul\":10742:10743   */\n      0x02\n        /* \"#utility.yul\":10736:10740   */\n      dup3\n        /* \"#utility.yul\":10732:10744   */\n      div\n        /* \"#utility.yul\":10722:10744   */\n      swap1\n      pop\n        /* \"#utility.yul\":10789:10790   */\n      0x01\n        /* \"#utility.yul\":10783:10787   */\n      dup3\n        /* \"#utility.yul\":10779:10791   */\n      and\n        /* \"#utility.yul\":10810:10828   */\n      dup1\n        /* \"#utility.yul\":10800:10881   */\n      tag_507\n      jumpi\n        /* \"#utility.yul\":10866:10870   */\n      0x7f\n        /* \"#utility.yul\":10858:10864   */\n      dup3\n        /* \"#utility.yul\":10854:10871   */\n      and\n        /* \"#utility.yul\":10844:10871   */\n      swap2\n      pop\n        /* \"#utility.yul\":10800:10881   */\n    tag_507:\n        /* \"#utility.yul\":10928:10930   */\n      0x20\n        /* \"#utility.yul\":10920:10926   */\n      dup3\n        /* \"#utility.yul\":10917:10931   */\n      lt\n        /* \"#utility.yul\":10897:10915   */\n      dup2\n        /* \"#utility.yul\":10894:10932   */\n      sub\n        /* \"#utility.yul\":10891:10975   */\n      tag_508\n      jumpi\n        /* \"#utility.yul\":10947:10965   */\n      tag_509\n      tag_368\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":10891:10975   */\n    tag_508:\n        /* \"#utility.yul\":10712:10981   */\n      pop\n        /* \"#utility.yul\":10661:10981   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10987:11429   */\n    tag_128:\n        /* \"#utility.yul\":11136:11140   */\n      0x00\n        /* \"#utility.yul\":11174:11176   */\n      0x60\n        /* \"#utility.yul\":11163:11172   */\n      dup3\n        /* \"#utility.yul\":11159:11177   */\n      add\n        /* \"#utility.yul\":11151:11177   */\n      swap1\n      pop\n        /* \"#utility.yul\":11187:11258   */\n      tag_511\n        /* \"#utility.yul\":11255:11256   */\n      0x00\n        /* \"#utility.yul\":11244:11253   */\n      dup4\n        /* \"#utility.yul\":11240:11257   */\n      add\n        /* \"#utility.yul\":11231:11237   */\n      dup7\n        /* \"#utility.yul\":11187:11258   */\n      tag_354\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":11268:11340   */\n      tag_512\n        /* \"#utility.yul\":11336:11338   */\n      0x20\n        /* \"#utility.yul\":11325:11334   */\n      dup4\n        /* \"#utility.yul\":11321:11339   */\n      add\n        /* \"#utility.yul\":11312:11318   */\n      dup6\n        /* \"#utility.yul\":11268:11340   */\n      tag_357\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":11350:11422   */\n      tag_513\n        /* \"#utility.yul\":11418:11420   */\n      0x40\n        /* \"#utility.yul\":11407:11416   */\n      dup4\n        /* \"#utility.yul\":11403:11421   */\n      add\n        /* \"#utility.yul\":11394:11400   */\n      dup5\n        /* \"#utility.yul\":11350:11422   */\n      tag_354\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":10987:11429   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11435:11767   */\n    tag_133:\n        /* \"#utility.yul\":11556:11560   */\n      0x00\n        /* \"#utility.yul\":11594:11596   */\n      0x40\n        /* \"#utility.yul\":11583:11592   */\n      dup3\n        /* \"#utility.yul\":11579:11597   */\n      add\n        /* \"#utility.yul\":11571:11597   */\n      swap1\n      pop\n        /* \"#utility.yul\":11607:11678   */\n      tag_515\n        /* \"#utility.yul\":11675:11676   */\n      0x00\n        /* \"#utility.yul\":11664:11673   */\n      dup4\n        /* \"#utility.yul\":11660:11677   */\n      add\n        /* \"#utility.yul\":11651:11657   */\n      dup6\n        /* \"#utility.yul\":11607:11678   */\n      tag_354\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":11688:11760   */\n      tag_516\n        /* \"#utility.yul\":11756:11758   */\n      0x20\n        /* \"#utility.yul\":11745:11754   */\n      dup4\n        /* \"#utility.yul\":11741:11759   */\n      add\n        /* \"#utility.yul\":11732:11738   */\n      dup5\n        /* \"#utility.yul\":11688:11760   */\n      tag_357\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":11435:11767   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11773:11953   */\n    tag_142:\n        /* \"#utility.yul\":11821:11898   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11818:11819   */\n      0x00\n        /* \"#utility.yul\":11811:11899   */\n      mstore\n        /* \"#utility.yul\":11918:11922   */\n      0x32\n        /* \"#utility.yul\":11915:11916   */\n      0x04\n        /* \"#utility.yul\":11908:11923   */\n      mstore\n        /* \"#utility.yul\":11942:11946   */\n      0x24\n        /* \"#utility.yul\":11939:11940   */\n      0x00\n        /* \"#utility.yul\":11932:11947   */\n      revert\n        /* \"#utility.yul\":11959:12139   */\n    tag_369:\n        /* \"#utility.yul\":12007:12084   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12004:12005   */\n      0x00\n        /* \"#utility.yul\":11997:12085   */\n      mstore\n        /* \"#utility.yul\":12104:12108   */\n      0x11\n        /* \"#utility.yul\":12101:12102   */\n      0x04\n        /* \"#utility.yul\":12094:12109   */\n      mstore\n        /* \"#utility.yul\":12128:12132   */\n      0x24\n        /* \"#utility.yul\":12125:12126   */\n      0x00\n        /* \"#utility.yul\":12118:12133   */\n      revert\n        /* \"#utility.yul\":12145:12336   */\n    tag_147:\n        /* \"#utility.yul\":12185:12188   */\n      0x00\n        /* \"#utility.yul\":12204:12224   */\n      tag_520\n        /* \"#utility.yul\":12222:12223   */\n      dup3\n        /* \"#utility.yul\":12204:12224   */\n      tag_349\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":12199:12224   */\n      swap2\n      pop\n        /* \"#utility.yul\":12238:12258   */\n      tag_521\n        /* \"#utility.yul\":12256:12257   */\n      dup4\n        /* \"#utility.yul\":12238:12258   */\n      tag_349\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":12233:12258   */\n      swap3\n      pop\n        /* \"#utility.yul\":12281:12282   */\n      dup3\n        /* \"#utility.yul\":12278:12279   */\n      dup3\n        /* \"#utility.yul\":12274:12283   */\n      add\n        /* \"#utility.yul\":12267:12283   */\n      swap1\n      pop\n        /* \"#utility.yul\":12302:12305   */\n      dup1\n        /* \"#utility.yul\":12299:12300   */\n      dup3\n        /* \"#utility.yul\":12296:12306   */\n      gt\n        /* \"#utility.yul\":12293:12329   */\n      iszero\n      tag_522\n      jumpi\n        /* \"#utility.yul\":12309:12327   */\n      tag_523\n      tag_369\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":12293:12329   */\n    tag_522:\n        /* \"#utility.yul\":12145:12336   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12342:12421   */\n    tag_370:\n        /* \"#utility.yul\":12381:12388   */\n      0x00\n        /* \"#utility.yul\":12410:12415   */\n      dup2\n        /* \"#utility.yul\":12399:12415   */\n      swap1\n      pop\n        /* \"#utility.yul\":12342:12421   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12427:12584   */\n    tag_371:\n        /* \"#utility.yul\":12532:12577   */\n      tag_526\n        /* \"#utility.yul\":12552:12576   */\n      tag_527\n        /* \"#utility.yul\":12570:12575   */\n      dup3\n        /* \"#utility.yul\":12552:12576   */\n      tag_349\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":12532:12577   */\n      tag_370\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":12527:12530   */\n      dup3\n        /* \"#utility.yul\":12520:12578   */\n      mstore\n        /* \"#utility.yul\":12427:12584   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12590:12684   */\n    tag_372:\n        /* \"#utility.yul\":12623:12631   */\n      0x00\n        /* \"#utility.yul\":12671:12676   */\n      dup2\n        /* \"#utility.yul\":12667:12669   */\n      0x60\n        /* \"#utility.yul\":12663:12677   */\n      shl\n        /* \"#utility.yul\":12642:12677   */\n      swap1\n      pop\n        /* \"#utility.yul\":12590:12684   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12690:12784   */\n    tag_373:\n        /* \"#utility.yul\":12729:12736   */\n      0x00\n        /* \"#utility.yul\":12758:12778   */\n      tag_530\n        /* \"#utility.yul\":12772:12777   */\n      dup3\n        /* \"#utility.yul\":12758:12778   */\n      tag_372\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":12747:12778   */\n      swap1\n      pop\n        /* \"#utility.yul\":12690:12784   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12790:12890   */\n    tag_374:\n        /* \"#utility.yul\":12829:12836   */\n      0x00\n        /* \"#utility.yul\":12858:12884   */\n      tag_532\n        /* \"#utility.yul\":12878:12883   */\n      dup3\n        /* \"#utility.yul\":12858:12884   */\n      tag_373\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":12847:12884   */\n      swap1\n      pop\n        /* \"#utility.yul\":12790:12890   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12896:13053   */\n    tag_375:\n        /* \"#utility.yul\":13001:13046   */\n      tag_534\n        /* \"#utility.yul\":13021:13045   */\n      tag_535\n        /* \"#utility.yul\":13039:13044   */\n      dup3\n        /* \"#utility.yul\":13021:13045   */\n      tag_353\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":13001:13046   */\n      tag_374\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":12996:12999   */\n      dup3\n        /* \"#utility.yul\":12989:13047   */\n      mstore\n        /* \"#utility.yul\":12896:13053   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13059:13597   */\n    tag_149:\n        /* \"#utility.yul\":13227:13230   */\n      0x00\n        /* \"#utility.yul\":13242:13317   */\n      tag_537\n        /* \"#utility.yul\":13313:13316   */\n      dup3\n        /* \"#utility.yul\":13304:13310   */\n      dup7\n        /* \"#utility.yul\":13242:13317   */\n      tag_371\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":13342:13344   */\n      0x20\n        /* \"#utility.yul\":13337:13340   */\n      dup3\n        /* \"#utility.yul\":13333:13345   */\n      add\n        /* \"#utility.yul\":13326:13345   */\n      swap2\n      pop\n        /* \"#utility.yul\":13355:13430   */\n      tag_538\n        /* \"#utility.yul\":13426:13429   */\n      dup3\n        /* \"#utility.yul\":13417:13423   */\n      dup6\n        /* \"#utility.yul\":13355:13430   */\n      tag_375\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":13455:13457   */\n      0x14\n        /* \"#utility.yul\":13450:13453   */\n      dup3\n        /* \"#utility.yul\":13446:13458   */\n      add\n        /* \"#utility.yul\":13439:13458   */\n      swap2\n      pop\n        /* \"#utility.yul\":13468:13543   */\n      tag_539\n        /* \"#utility.yul\":13539:13542   */\n      dup3\n        /* \"#utility.yul\":13530:13536   */\n      dup5\n        /* \"#utility.yul\":13468:13543   */\n      tag_371\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":13568:13570   */\n      0x20\n        /* \"#utility.yul\":13563:13566   */\n      dup3\n        /* \"#utility.yul\":13559:13571   */\n      add\n        /* \"#utility.yul\":13552:13571   */\n      swap2\n      pop\n        /* \"#utility.yul\":13588:13591   */\n      dup2\n        /* \"#utility.yul\":13581:13591   */\n      swap1\n      pop\n        /* \"#utility.yul\":13059:13597   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13603:13783   */\n    tag_259:\n        /* \"#utility.yul\":13651:13728   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13648:13649   */\n      0x00\n        /* \"#utility.yul\":13641:13729   */\n      mstore\n        /* \"#utility.yul\":13748:13752   */\n      0x12\n        /* \"#utility.yul\":13745:13746   */\n      0x04\n        /* \"#utility.yul\":13738:13753   */\n      mstore\n        /* \"#utility.yul\":13772:13776   */\n      0x24\n        /* \"#utility.yul\":13769:13770   */\n      0x00\n        /* \"#utility.yul\":13762:13777   */\n      revert\n        /* \"#utility.yul\":13789:13965   */\n    tag_151:\n        /* \"#utility.yul\":13821:13822   */\n      0x00\n        /* \"#utility.yul\":13838:13858   */\n      tag_542\n        /* \"#utility.yul\":13856:13857   */\n      dup3\n        /* \"#utility.yul\":13838:13858   */\n      tag_349\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":13833:13858   */\n      swap2\n      pop\n        /* \"#utility.yul\":13872:13892   */\n      tag_543\n        /* \"#utility.yul\":13890:13891   */\n      dup4\n        /* \"#utility.yul\":13872:13892   */\n      tag_349\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":13867:13892   */\n      swap3\n      pop\n        /* \"#utility.yul\":13911:13912   */\n      dup3\n        /* \"#utility.yul\":13901:13936   */\n      tag_544\n      jumpi\n        /* \"#utility.yul\":13916:13934   */\n      tag_545\n      tag_259\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":13901:13936   */\n    tag_544:\n        /* \"#utility.yul\":13957:13958   */\n      dup3\n        /* \"#utility.yul\":13954:13955   */\n      dup3\n        /* \"#utility.yul\":13950:13959   */\n      mod\n        /* \"#utility.yul\":13945:13959   */\n      swap1\n      pop\n        /* \"#utility.yul\":13789:13965   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13971:14119   */\n    tag_376:\n        /* \"#utility.yul\":14073:14084   */\n      0x00\n        /* \"#utility.yul\":14110:14113   */\n      dup2\n        /* \"#utility.yul\":14095:14113   */\n      swap1\n      pop\n        /* \"#utility.yul\":13971:14119   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14125:14515   */\n    tag_377:\n        /* \"#utility.yul\":14231:14234   */\n      0x00\n        /* \"#utility.yul\":14259:14298   */\n      tag_548\n        /* \"#utility.yul\":14292:14297   */\n      dup3\n        /* \"#utility.yul\":14259:14298   */\n      tag_344\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":14314:14403   */\n      tag_549\n        /* \"#utility.yul\":14396:14402   */\n      dup2\n        /* \"#utility.yul\":14391:14394   */\n      dup6\n        /* \"#utility.yul\":14314:14403   */\n      tag_376\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":14307:14403   */\n      swap4\n      pop\n        /* \"#utility.yul\":14412:14477   */\n      tag_550\n        /* \"#utility.yul\":14470:14476   */\n      dup2\n        /* \"#utility.yul\":14465:14468   */\n      dup6\n        /* \"#utility.yul\":14458:14462   */\n      0x20\n        /* \"#utility.yul\":14451:14456   */\n      dup7\n        /* \"#utility.yul\":14447:14463   */\n      add\n        /* \"#utility.yul\":14412:14477   */\n      tag_346\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":14502:14508   */\n      dup1\n        /* \"#utility.yul\":14497:14500   */\n      dup5\n        /* \"#utility.yul\":14493:14509   */\n      add\n        /* \"#utility.yul\":14486:14509   */\n      swap2\n      pop\n        /* \"#utility.yul\":14235:14515   */\n      pop\n        /* \"#utility.yul\":14125:14515   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14521:14956   */\n    tag_183:\n        /* \"#utility.yul\":14701:14704   */\n      0x00\n        /* \"#utility.yul\":14723:14818   */\n      tag_552\n        /* \"#utility.yul\":14814:14817   */\n      dup3\n        /* \"#utility.yul\":14805:14811   */\n      dup6\n        /* \"#utility.yul\":14723:14818   */\n      tag_377\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":14716:14818   */\n      swap2\n      pop\n        /* \"#utility.yul\":14835:14930   */\n      tag_553\n        /* \"#utility.yul\":14926:14929   */\n      dup3\n        /* \"#utility.yul\":14917:14923   */\n      dup5\n        /* \"#utility.yul\":14835:14930   */\n      tag_377\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":14828:14930   */\n      swap2\n      pop\n        /* \"#utility.yul\":14947:14950   */\n      dup2\n        /* \"#utility.yul\":14940:14950   */\n      swap1\n      pop\n        /* \"#utility.yul\":14521:14956   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14962:15060   */\n    tag_378:\n        /* \"#utility.yul\":15013:15019   */\n      0x00\n        /* \"#utility.yul\":15047:15052   */\n      dup2\n        /* \"#utility.yul\":15041:15053   */\n      mload\n        /* \"#utility.yul\":15031:15053   */\n      swap1\n      pop\n        /* \"#utility.yul\":14962:15060   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15066:15234   */\n    tag_379:\n        /* \"#utility.yul\":15149:15160   */\n      0x00\n        /* \"#utility.yul\":15183:15189   */\n      dup3\n        /* \"#utility.yul\":15178:15181   */\n      dup3\n        /* \"#utility.yul\":15171:15190   */\n      mstore\n        /* \"#utility.yul\":15223:15227   */\n      0x20\n        /* \"#utility.yul\":15218:15221   */\n      dup3\n        /* \"#utility.yul\":15214:15228   */\n      add\n        /* \"#utility.yul\":15199:15228   */\n      swap1\n      pop\n        /* \"#utility.yul\":15066:15234   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15240:15613   */\n    tag_380:\n        /* \"#utility.yul\":15326:15329   */\n      0x00\n        /* \"#utility.yul\":15354:15392   */\n      tag_557\n        /* \"#utility.yul\":15386:15391   */\n      dup3\n        /* \"#utility.yul\":15354:15392   */\n      tag_378\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":15408:15478   */\n      tag_558\n        /* \"#utility.yul\":15471:15477   */\n      dup2\n        /* \"#utility.yul\":15466:15469   */\n      dup6\n        /* \"#utility.yul\":15408:15478   */\n      tag_379\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":15401:15478   */\n      swap4\n      pop\n        /* \"#utility.yul\":15487:15552   */\n      tag_559\n        /* \"#utility.yul\":15545:15551   */\n      dup2\n        /* \"#utility.yul\":15540:15543   */\n      dup6\n        /* \"#utility.yul\":15533:15537   */\n      0x20\n        /* \"#utility.yul\":15526:15531   */\n      dup7\n        /* \"#utility.yul\":15522:15538   */\n      add\n        /* \"#utility.yul\":15487:15552   */\n      tag_346\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":15577:15606   */\n      tag_560\n        /* \"#utility.yul\":15599:15605   */\n      dup2\n        /* \"#utility.yul\":15577:15606   */\n      tag_347\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":15572:15575   */\n      dup5\n        /* \"#utility.yul\":15568:15607   */\n      add\n        /* \"#utility.yul\":15561:15607   */\n      swap2\n      pop\n        /* \"#utility.yul\":15330:15613   */\n      pop\n        /* \"#utility.yul\":15240:15613   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15619:16259   */\n    tag_231:\n        /* \"#utility.yul\":15814:15818   */\n      0x00\n        /* \"#utility.yul\":15852:15855   */\n      0x80\n        /* \"#utility.yul\":15841:15850   */\n      dup3\n        /* \"#utility.yul\":15837:15856   */\n      add\n        /* \"#utility.yul\":15829:15856   */\n      swap1\n      pop\n        /* \"#utility.yul\":15866:15937   */\n      tag_562\n        /* \"#utility.yul\":15934:15935   */\n      0x00\n        /* \"#utility.yul\":15923:15932   */\n      dup4\n        /* \"#utility.yul\":15919:15936   */\n      add\n        /* \"#utility.yul\":15910:15916   */\n      dup8\n        /* \"#utility.yul\":15866:15937   */\n      tag_354\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":15947:16019   */\n      tag_563\n        /* \"#utility.yul\":16015:16017   */\n      0x20\n        /* \"#utility.yul\":16004:16013   */\n      dup4\n        /* \"#utility.yul\":16000:16018   */\n      add\n        /* \"#utility.yul\":15991:15997   */\n      dup7\n        /* \"#utility.yul\":15947:16019   */\n      tag_354\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":16029:16101   */\n      tag_564\n        /* \"#utility.yul\":16097:16099   */\n      0x40\n        /* \"#utility.yul\":16086:16095   */\n      dup4\n        /* \"#utility.yul\":16082:16100   */\n      add\n        /* \"#utility.yul\":16073:16079   */\n      dup6\n        /* \"#utility.yul\":16029:16101   */\n      tag_357\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":16148:16157   */\n      dup2\n        /* \"#utility.yul\":16142:16146   */\n      dup2\n        /* \"#utility.yul\":16138:16158   */\n      sub\n        /* \"#utility.yul\":16133:16135   */\n      0x60\n        /* \"#utility.yul\":16122:16131   */\n      dup4\n        /* \"#utility.yul\":16118:16136   */\n      add\n        /* \"#utility.yul\":16111:16159   */\n      mstore\n        /* \"#utility.yul\":16176:16252   */\n      tag_565\n        /* \"#utility.yul\":16247:16251   */\n      dup2\n        /* \"#utility.yul\":16238:16244   */\n      dup5\n        /* \"#utility.yul\":16176:16252   */\n      tag_380\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":16168:16252   */\n      swap1\n      pop\n        /* \"#utility.yul\":15619:16259   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16265:16406   */\n    tag_381:\n        /* \"#utility.yul\":16321:16326   */\n      0x00\n        /* \"#utility.yul\":16352:16358   */\n      dup2\n        /* \"#utility.yul\":16346:16359   */\n      mload\n        /* \"#utility.yul\":16337:16359   */\n      swap1\n      pop\n        /* \"#utility.yul\":16368:16400   */\n      tag_567\n        /* \"#utility.yul\":16394:16399   */\n      dup2\n        /* \"#utility.yul\":16368:16400   */\n      tag_340\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":16265:16406   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16412:16761   */\n    tag_234:\n        /* \"#utility.yul\":16481:16487   */\n      0x00\n        /* \"#utility.yul\":16530:16532   */\n      0x20\n        /* \"#utility.yul\":16518:16527   */\n      dup3\n        /* \"#utility.yul\":16509:16516   */\n      dup5\n        /* \"#utility.yul\":16505:16528   */\n      sub\n        /* \"#utility.yul\":16501:16533   */\n      slt\n        /* \"#utility.yul\":16498:16617   */\n      iszero\n      tag_569\n      jumpi\n        /* \"#utility.yul\":16536:16615   */\n      tag_570\n      tag_337\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":16498:16617   */\n    tag_569:\n        /* \"#utility.yul\":16656:16657   */\n      0x00\n        /* \"#utility.yul\":16681:16744   */\n      tag_571\n        /* \"#utility.yul\":16736:16743   */\n      dup5\n        /* \"#utility.yul\":16727:16733   */\n      dup3\n        /* \"#utility.yul\":16716:16725   */\n      dup6\n        /* \"#utility.yul\":16712:16734   */\n      add\n        /* \"#utility.yul\":16681:16744   */\n      tag_381\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":16671:16744   */\n      swap2\n      pop\n        /* \"#utility.yul\":16627:16754   */\n      pop\n        /* \"#utility.yul\":16412:16761   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16767:16961   */\n    tag_288:\n        /* \"#utility.yul\":16807:16811   */\n      0x00\n        /* \"#utility.yul\":16827:16847   */\n      tag_573\n        /* \"#utility.yul\":16845:16846   */\n      dup3\n        /* \"#utility.yul\":16827:16847   */\n      tag_349\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":16822:16847   */\n      swap2\n      pop\n        /* \"#utility.yul\":16861:16881   */\n      tag_574\n        /* \"#utility.yul\":16879:16880   */\n      dup4\n        /* \"#utility.yul\":16861:16881   */\n      tag_349\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":16856:16881   */\n      swap3\n      pop\n        /* \"#utility.yul\":16905:16906   */\n      dup3\n        /* \"#utility.yul\":16902:16903   */\n      dup3\n        /* \"#utility.yul\":16898:16907   */\n      sub\n        /* \"#utility.yul\":16890:16907   */\n      swap1\n      pop\n        /* \"#utility.yul\":16929:16930   */\n      dup2\n        /* \"#utility.yul\":16923:16927   */\n      dup2\n        /* \"#utility.yul\":16920:16931   */\n      gt\n        /* \"#utility.yul\":16917:16954   */\n      iszero\n      tag_575\n      jumpi\n        /* \"#utility.yul\":16934:16952   */\n      tag_576\n      tag_369\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":16917:16954   */\n    tag_575:\n        /* \"#utility.yul\":16767:16961   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16967:17147   */\n    tag_297:\n        /* \"#utility.yul\":17015:17092   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17012:17013   */\n      0x00\n        /* \"#utility.yul\":17005:17093   */\n      mstore\n        /* \"#utility.yul\":17112:17116   */\n      0x31\n        /* \"#utility.yul\":17109:17110   */\n      0x04\n        /* \"#utility.yul\":17102:17117   */\n      mstore\n        /* \"#utility.yul\":17136:17140   */\n      0x24\n        /* \"#utility.yul\":17133:17134   */\n      0x00\n        /* \"#utility.yul\":17126:17141   */\n      revert\n\n    auxdata: 0xa264697066735822122035e7c45e186f98e758d55c0a8928f07d9061e557d09c0f1eb394754be880b32564736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_206": {
									"entryPoint": null,
									"id": 206,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_3217": {
									"entryPoint": null,
									"id": 3217,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 318,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 164,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 615,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 450,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 470,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 339,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 269,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 728,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 698,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 222,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 175,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 504,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 355,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 685,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 556,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 368,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 514,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 551,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5231:15",
										"nodeType": "YulBlock",
										"src": "0:5231:15",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:15",
													"nodeType": "YulBlock",
													"src": "66:40:15",
													"statements": [
														{
															"nativeSrc": "77:22:15",
															"nodeType": "YulAssignment",
															"src": "77:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:15"
																},
																"nativeSrc": "87:12:15",
																"nodeType": "YulFunctionCall",
																"src": "87:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:15",
														"nodeType": "YulTypedName",
														"src": "49:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:15",
														"nodeType": "YulTypedName",
														"src": "59:6:15",
														"type": ""
													}
												],
												"src": "7:99:15"
											},
											{
												"body": {
													"nativeSrc": "140:152:15",
													"nodeType": "YulBlock",
													"src": "140:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:15",
																		"nodeType": "YulLiteral",
																		"src": "157:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:15",
																		"nodeType": "YulLiteral",
																		"src": "160:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:15"
																},
																"nativeSrc": "150:88:15",
																"nodeType": "YulFunctionCall",
																"src": "150:88:15"
															},
															"nativeSrc": "150:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:15",
																		"nodeType": "YulLiteral",
																		"src": "254:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:15",
																		"nodeType": "YulLiteral",
																		"src": "257:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:15"
																},
																"nativeSrc": "247:15:15",
																"nodeType": "YulFunctionCall",
																"src": "247:15:15"
															},
															"nativeSrc": "247:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:15",
																		"nodeType": "YulLiteral",
																		"src": "278:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:15",
																		"nodeType": "YulLiteral",
																		"src": "281:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:15"
																},
																"nativeSrc": "271:15:15",
																"nodeType": "YulFunctionCall",
																"src": "271:15:15"
															},
															"nativeSrc": "271:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:15"
											},
											{
												"body": {
													"nativeSrc": "326:152:15",
													"nodeType": "YulBlock",
													"src": "326:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:15",
																		"nodeType": "YulLiteral",
																		"src": "343:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:15",
																		"nodeType": "YulLiteral",
																		"src": "346:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:15"
																},
																"nativeSrc": "336:88:15",
																"nodeType": "YulFunctionCall",
																"src": "336:88:15"
															},
															"nativeSrc": "336:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:15",
																		"nodeType": "YulLiteral",
																		"src": "440:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:15",
																		"nodeType": "YulLiteral",
																		"src": "443:4:15",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:15"
																},
																"nativeSrc": "433:15:15",
																"nodeType": "YulFunctionCall",
																"src": "433:15:15"
															},
															"nativeSrc": "433:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:15",
																		"nodeType": "YulLiteral",
																		"src": "464:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:15",
																		"nodeType": "YulLiteral",
																		"src": "467:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:15"
																},
																"nativeSrc": "457:15:15",
																"nodeType": "YulFunctionCall",
																"src": "457:15:15"
															},
															"nativeSrc": "457:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:15"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:15"
											},
											{
												"body": {
													"nativeSrc": "535:269:15",
													"nodeType": "YulBlock",
													"src": "535:269:15",
													"statements": [
														{
															"nativeSrc": "545:22:15",
															"nodeType": "YulAssignment",
															"src": "545:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:15",
																		"nodeType": "YulLiteral",
																		"src": "565:1:15",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:15"
																},
																"nativeSrc": "555:12:15",
																"nodeType": "YulFunctionCall",
																"src": "555:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:15"
																}
															]
														},
														{
															"nativeSrc": "576:38:15",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:15",
																		"nodeType": "YulLiteral",
																		"src": "612:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:15"
																},
																"nativeSrc": "602:12:15",
																"nodeType": "YulFunctionCall",
																"src": "602:12:15"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:15",
																	"nodeType": "YulTypedName",
																	"src": "580:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:15",
																"nodeType": "YulBlock",
																"src": "653:51:15",
																"statements": [
																	{
																		"nativeSrc": "667:27:15",
																		"nodeType": "YulAssignment",
																		"src": "667:27:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:15",
																					"nodeType": "YulLiteral",
																					"src": "689:4:15",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:15"
																			},
																			"nativeSrc": "677:17:15",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:15"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:15"
																},
																"nativeSrc": "626:26:15",
																"nodeType": "YulFunctionCall",
																"src": "626:26:15"
															},
															"nativeSrc": "623:81:15",
															"nodeType": "YulIf",
															"src": "623:81:15"
														},
														{
															"body": {
																"nativeSrc": "756:42:15",
																"nodeType": "YulBlock",
																"src": "756:42:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:15"
																			},
																			"nativeSrc": "770:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:15"
																		},
																		"nativeSrc": "770:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:15",
																				"nodeType": "YulLiteral",
																				"src": "751:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:15"
																		},
																		"nativeSrc": "740:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:15"
																},
																"nativeSrc": "717:38:15",
																"nodeType": "YulFunctionCall",
																"src": "717:38:15"
															},
															"nativeSrc": "714:84:15",
															"nodeType": "YulIf",
															"src": "714:84:15"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:15",
														"nodeType": "YulTypedName",
														"src": "519:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:15",
														"nodeType": "YulTypedName",
														"src": "528:6:15",
														"type": ""
													}
												],
												"src": "484:320:15"
											},
											{
												"body": {
													"nativeSrc": "864:87:15",
													"nodeType": "YulBlock",
													"src": "864:87:15",
													"statements": [
														{
															"nativeSrc": "874:11:15",
															"nodeType": "YulAssignment",
															"src": "874:11:15",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:15",
																"nodeType": "YulIdentifier",
																"src": "882:3:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:15",
																		"nodeType": "YulLiteral",
																		"src": "902:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:15"
																},
																"nativeSrc": "895:14:15",
																"nodeType": "YulFunctionCall",
																"src": "895:14:15"
															},
															"nativeSrc": "895:14:15",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:15"
														},
														{
															"nativeSrc": "918:26:15",
															"nodeType": "YulAssignment",
															"src": "918:26:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:15",
																		"nodeType": "YulLiteral",
																		"src": "936:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:15",
																		"nodeType": "YulLiteral",
																		"src": "939:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:15"
																},
																"nativeSrc": "926:18:15",
																"nodeType": "YulFunctionCall",
																"src": "926:18:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:15"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:15",
														"nodeType": "YulTypedName",
														"src": "851:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:15",
														"nodeType": "YulTypedName",
														"src": "859:4:15",
														"type": ""
													}
												],
												"src": "810:141:15"
											},
											{
												"body": {
													"nativeSrc": "1001:49:15",
													"nodeType": "YulBlock",
													"src": "1001:49:15",
													"statements": [
														{
															"nativeSrc": "1011:33:15",
															"nodeType": "YulAssignment",
															"src": "1011:33:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:15",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:15"
																		},
																		"nativeSrc": "1025:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:15"
																},
																"nativeSrc": "1021:23:15",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:15"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:15",
														"nodeType": "YulTypedName",
														"src": "984:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:15",
														"nodeType": "YulTypedName",
														"src": "994:6:15",
														"type": ""
													}
												],
												"src": "957:93:15"
											},
											{
												"body": {
													"nativeSrc": "1109:54:15",
													"nodeType": "YulBlock",
													"src": "1109:54:15",
													"statements": [
														{
															"nativeSrc": "1119:37:15",
															"nodeType": "YulAssignment",
															"src": "1119:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:15"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:15"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:15"
																},
																"nativeSrc": "1140:16:15",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:15"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:15",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:15"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:15",
														"nodeType": "YulTypedName",
														"src": "1084:4:15",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:15",
														"nodeType": "YulTypedName",
														"src": "1090:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:15",
														"nodeType": "YulTypedName",
														"src": "1100:8:15",
														"type": ""
													}
												],
												"src": "1056:107:15"
											},
											{
												"body": {
													"nativeSrc": "1245:317:15",
													"nodeType": "YulBlock",
													"src": "1245:317:15",
													"statements": [
														{
															"nativeSrc": "1255:35:15",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:15",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:15",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:15"
																},
																"nativeSrc": "1272:18:15",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:15"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:15",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:15",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:15",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:15",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:15"
																},
																"nativeSrc": "1311:97:15",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:15"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:15",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:15",
															"nodeType": "YulAssignment",
															"src": "1417:51:15",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:15"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:15",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:15"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:15"
																},
																"nativeSrc": "1429:39:15",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:15"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:15",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:15"
																}
															]
														},
														{
															"nativeSrc": "1477:30:15",
															"nodeType": "YulAssignment",
															"src": "1477:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:15"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:15"
																		},
																		"nativeSrc": "1497:9:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:15"
																},
																"nativeSrc": "1486:21:15",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:15"
																}
															]
														},
														{
															"nativeSrc": "1516:40:15",
															"nodeType": "YulAssignment",
															"src": "1516:40:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:15",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:15"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:15"
																		},
																		"nativeSrc": "1536:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:15"
																},
																"nativeSrc": "1526:30:15",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:15"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:15",
														"nodeType": "YulTypedName",
														"src": "1206:5:15",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:15",
														"nodeType": "YulTypedName",
														"src": "1213:10:15",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:15",
														"nodeType": "YulTypedName",
														"src": "1225:8:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:15",
														"nodeType": "YulTypedName",
														"src": "1238:6:15",
														"type": ""
													}
												],
												"src": "1169:393:15"
											},
											{
												"body": {
													"nativeSrc": "1613:32:15",
													"nodeType": "YulBlock",
													"src": "1613:32:15",
													"statements": [
														{
															"nativeSrc": "1623:16:15",
															"nodeType": "YulAssignment",
															"src": "1623:16:15",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:15",
																"nodeType": "YulIdentifier",
																"src": "1634:5:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:15",
														"nodeType": "YulTypedName",
														"src": "1595:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:15",
														"nodeType": "YulTypedName",
														"src": "1605:7:15",
														"type": ""
													}
												],
												"src": "1568:77:15"
											},
											{
												"body": {
													"nativeSrc": "1683:28:15",
													"nodeType": "YulBlock",
													"src": "1683:28:15",
													"statements": [
														{
															"nativeSrc": "1693:12:15",
															"nodeType": "YulAssignment",
															"src": "1693:12:15",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:15",
																"nodeType": "YulIdentifier",
																"src": "1700:5:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:15"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:15",
														"nodeType": "YulTypedName",
														"src": "1669:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:15",
														"nodeType": "YulTypedName",
														"src": "1679:3:15",
														"type": ""
													}
												],
												"src": "1651:60:15"
											},
											{
												"body": {
													"nativeSrc": "1777:82:15",
													"nodeType": "YulBlock",
													"src": "1777:82:15",
													"statements": [
														{
															"nativeSrc": "1787:66:15",
															"nodeType": "YulAssignment",
															"src": "1787:66:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:15"
																				},
																				"nativeSrc": "1827:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:15"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:15",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:15"
																		},
																		"nativeSrc": "1818:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:15"
																},
																"nativeSrc": "1800:53:15",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:15"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:15"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:15",
														"nodeType": "YulTypedName",
														"src": "1757:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:15",
														"nodeType": "YulTypedName",
														"src": "1767:9:15",
														"type": ""
													}
												],
												"src": "1717:142:15"
											},
											{
												"body": {
													"nativeSrc": "1912:28:15",
													"nodeType": "YulBlock",
													"src": "1912:28:15",
													"statements": [
														{
															"nativeSrc": "1922:12:15",
															"nodeType": "YulAssignment",
															"src": "1922:12:15",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:15",
																"nodeType": "YulIdentifier",
																"src": "1929:5:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:15"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:15",
														"nodeType": "YulTypedName",
														"src": "1898:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:15",
														"nodeType": "YulTypedName",
														"src": "1908:3:15",
														"type": ""
													}
												],
												"src": "1865:75:15"
											},
											{
												"body": {
													"nativeSrc": "2022:193:15",
													"nodeType": "YulBlock",
													"src": "2022:193:15",
													"statements": [
														{
															"nativeSrc": "2032:63:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:15",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:15"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:15",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:15"
																},
																"nativeSrc": "2056:39:15",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:15"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:15",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:15"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:15"
																				},
																				"nativeSrc": "2145:11:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:15"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:15",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:15"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:15",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:15"
																				},
																				"nativeSrc": "2166:41:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:15"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:15",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:15"
																		},
																		"nativeSrc": "2117:91:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:15"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:15"
																},
																"nativeSrc": "2104:105:15",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:15"
															},
															"nativeSrc": "2104:105:15",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:15"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:15",
														"nodeType": "YulTypedName",
														"src": "1999:4:15",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:15",
														"nodeType": "YulTypedName",
														"src": "2005:6:15",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:15",
														"nodeType": "YulTypedName",
														"src": "2013:7:15",
														"type": ""
													}
												],
												"src": "1946:269:15"
											},
											{
												"body": {
													"nativeSrc": "2270:24:15",
													"nodeType": "YulBlock",
													"src": "2270:24:15",
													"statements": [
														{
															"nativeSrc": "2280:8:15",
															"nodeType": "YulAssignment",
															"src": "2280:8:15",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:15",
																"nodeType": "YulLiteral",
																"src": "2287:1:15",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:15"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:15",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:15",
														"nodeType": "YulTypedName",
														"src": "2266:3:15",
														"type": ""
													}
												],
												"src": "2221:73:15"
											},
											{
												"body": {
													"nativeSrc": "2353:136:15",
													"nodeType": "YulBlock",
													"src": "2353:136:15",
													"statements": [
														{
															"nativeSrc": "2363:46:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:15",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:15",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:15"
																},
																"nativeSrc": "2377:32:15",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:15"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:15",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:15"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:15"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:15"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:15"
																},
																"nativeSrc": "2418:65:15",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:15"
															},
															"nativeSrc": "2418:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:15"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:15",
														"nodeType": "YulTypedName",
														"src": "2339:4:15",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:15",
														"nodeType": "YulTypedName",
														"src": "2345:6:15",
														"type": ""
													}
												],
												"src": "2300:189:15"
											},
											{
												"body": {
													"nativeSrc": "2545:136:15",
													"nodeType": "YulBlock",
													"src": "2545:136:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:15",
																"nodeType": "YulBlock",
																"src": "2612:63:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:15",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:15"
																			},
																			"nativeSrc": "2626:39:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:15"
																		},
																		"nativeSrc": "2626:39:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:15"
																},
																"nativeSrc": "2562:14:15",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:15"
															},
															"nativeSrc": "2555:120:15",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:15",
																"nodeType": "YulBlock",
																"src": "2577:26:15",
																"statements": [
																	{
																		"nativeSrc": "2579:22:15",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:15",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:15"
																			},
																			"nativeSrc": "2588:13:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:15"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:15",
																"nodeType": "YulBlock",
																"src": "2559:2:15",
																"statements": []
															},
															"src": "2555:120:15"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:15",
														"nodeType": "YulTypedName",
														"src": "2533:5:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:15",
														"nodeType": "YulTypedName",
														"src": "2540:3:15",
														"type": ""
													}
												],
												"src": "2495:186:15"
											},
											{
												"body": {
													"nativeSrc": "2766:464:15",
													"nodeType": "YulBlock",
													"src": "2766:464:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:15",
																"nodeType": "YulBlock",
																"src": "2792:431:15",
																"statements": [
																	{
																		"nativeSrc": "2806:54:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:15"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:15",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:15"
																			},
																			"nativeSrc": "2822:38:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:15"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:15",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:15",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:15",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:15"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:15",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:15"
																					},
																					"nativeSrc": "2906:29:15",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:15"
																			},
																			"nativeSrc": "2892:44:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:15"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:15",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:15",
																			"nodeType": "YulBlock",
																			"src": "3093:27:15",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:15",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:15",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:15",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:15"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:15",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:15"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:15",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:15",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:15",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:15"
																			},
																			"nativeSrc": "3074:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:15"
																		},
																		"nativeSrc": "3071:49:15",
																		"nodeType": "YulIf",
																		"src": "3071:49:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:15",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:15",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:15"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:15"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:15",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:15"
																							},
																							"nativeSrc": "3189:22:15",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:15"
																					},
																					"nativeSrc": "3175:37:15",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:15"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:15",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:15"
																			},
																			"nativeSrc": "3133:80:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:15"
																		},
																		"nativeSrc": "3133:80:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:15"
																},
																"nativeSrc": "2780:11:15",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:15"
															},
															"nativeSrc": "2777:446:15",
															"nodeType": "YulIf",
															"src": "2777:446:15"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:15",
														"nodeType": "YulTypedName",
														"src": "2742:5:15",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:15",
														"nodeType": "YulTypedName",
														"src": "2749:3:15",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:15",
														"nodeType": "YulTypedName",
														"src": "2754:10:15",
														"type": ""
													}
												],
												"src": "2687:543:15"
											},
											{
												"body": {
													"nativeSrc": "3299:54:15",
													"nodeType": "YulBlock",
													"src": "3299:54:15",
													"statements": [
														{
															"nativeSrc": "3309:37:15",
															"nodeType": "YulAssignment",
															"src": "3309:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:15"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:15"
																},
																"nativeSrc": "3330:16:15",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:15"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:15",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:15"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:15",
														"nodeType": "YulTypedName",
														"src": "3274:4:15",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:15",
														"nodeType": "YulTypedName",
														"src": "3280:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:15",
														"nodeType": "YulTypedName",
														"src": "3290:8:15",
														"type": ""
													}
												],
												"src": "3236:117:15"
											},
											{
												"body": {
													"nativeSrc": "3410:118:15",
													"nodeType": "YulBlock",
													"src": "3410:118:15",
													"statements": [
														{
															"nativeSrc": "3420:68:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:15",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:15",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:15"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:15"
																				},
																				"nativeSrc": "3465:13:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:15",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:15",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:15"
																				},
																				"nativeSrc": "3480:6:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:15"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:15",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:15"
																		},
																		"nativeSrc": "3436:51:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:15"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:15"
																},
																"nativeSrc": "3432:56:15",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:15"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:15",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:15",
															"nodeType": "YulAssignment",
															"src": "3497:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:15"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:15"
																},
																"nativeSrc": "3507:15:15",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:15"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:15",
														"nodeType": "YulTypedName",
														"src": "3387:4:15",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:15",
														"nodeType": "YulTypedName",
														"src": "3393:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:15",
														"nodeType": "YulTypedName",
														"src": "3403:6:15",
														"type": ""
													}
												],
												"src": "3359:169:15"
											},
											{
												"body": {
													"nativeSrc": "3614:214:15",
													"nodeType": "YulBlock",
													"src": "3614:214:15",
													"statements": [
														{
															"nativeSrc": "3747:37:15",
															"nodeType": "YulAssignment",
															"src": "3747:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:15"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:15"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:15"
																},
																"nativeSrc": "3755:29:15",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:15"
																}
															]
														},
														{
															"nativeSrc": "3793:29:15",
															"nodeType": "YulAssignment",
															"src": "3793:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:15",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:15",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:15"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:15"
																		},
																		"nativeSrc": "3810:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:15"
																},
																"nativeSrc": "3801:21:15",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:15"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:15"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:15",
														"nodeType": "YulTypedName",
														"src": "3595:4:15",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:15",
														"nodeType": "YulTypedName",
														"src": "3601:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:15",
														"nodeType": "YulTypedName",
														"src": "3609:4:15",
														"type": ""
													}
												],
												"src": "3533:295:15"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:15",
													"nodeType": "YulBlock",
													"src": "3925:1303:15",
													"statements": [
														{
															"nativeSrc": "3936:51:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:15",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:15",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:15"
																},
																"nativeSrc": "3950:37:15",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:15"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:15",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:15",
																"nodeType": "YulBlock",
																"src": "4072:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:15"
																			},
																			"nativeSrc": "4074:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:15"
																		},
																		"nativeSrc": "4074:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:15",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:15"
																},
																"nativeSrc": "4041:30:15",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:15"
															},
															"nativeSrc": "4038:56:15",
															"nodeType": "YulIf",
															"src": "4038:56:15"
														},
														{
															"nativeSrc": "4104:52:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:15"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:15"
																		},
																		"nativeSrc": "4144:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:15"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:15",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:15"
																},
																"nativeSrc": "4118:38:15",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:15"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:15",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:15"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:15"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:15"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:15",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:15"
																},
																"nativeSrc": "4203:67:15",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:15"
															},
															"nativeSrc": "4203:67:15",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:15"
														},
														{
															"nativeSrc": "4280:18:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:15",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:15",
																"nodeType": "YulLiteral",
																"src": "4297:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:15",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:15",
															"nodeType": "YulAssignment",
															"src": "4308:17:15",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:15",
																"nodeType": "YulLiteral",
																"src": "4321:4:15",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:15"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:15",
																		"nodeType": "YulBlock",
																		"src": "4372:611:15",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:15"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:15",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:15",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:15"
																							},
																							"nativeSrc": "4413:9:15",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:15"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:15"
																					},
																					"nativeSrc": "4401:22:15",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:15"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:15",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:15"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:15",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:15"
																					},
																					"nativeSrc": "4451:37:15",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:15"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:15",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:15",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:15",
																					"nodeType": "YulBlock",
																					"src": "4569:163:15",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:15"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:15",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:15"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:15",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:15"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:15",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:15"
																												},
																												"nativeSrc": "4608:19:15",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:15"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:15",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:15"
																										},
																										"nativeSrc": "4602:26:15",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:15"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:15"
																								},
																								"nativeSrc": "4587:42:15",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:15"
																							},
																							"nativeSrc": "4587:42:15",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:15"
																						},
																						{
																							"nativeSrc": "4646:24:15",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:15",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:15"
																								},
																								"nativeSrc": "4656:14:15",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:15"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:15"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:15",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:15",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:15",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:15",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:15"
																								},
																								"nativeSrc": "4700:18:15",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:15"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:15",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:15",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:15"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:15",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:15"
																					},
																					"nativeSrc": "4532:14:15",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:15"
																				},
																				"nativeSrc": "4524:208:15",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:15",
																					"nodeType": "YulBlock",
																					"src": "4547:21:15",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:15",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:15",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:15",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:15",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:15"
																								},
																								"nativeSrc": "4554:12:15",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:15"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:15",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:15"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:15",
																					"nodeType": "YulBlock",
																					"src": "4528:3:15",
																					"statements": []
																				},
																				"src": "4524:208:15"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:15",
																					"nodeType": "YulBlock",
																					"src": "4768:156:15",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:15",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:15",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:15",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:15"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:15",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:15"
																										},
																										"nativeSrc": "4809:19:15",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:15"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:15"
																								},
																								"nativeSrc": "4803:26:15",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:15"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:15",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:15",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:15"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:15"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:15",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:15"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:15",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:15",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:15",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:15"
																												},
																												"nativeSrc": "4891:17:15",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:15"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:15",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:15"
																										},
																										"nativeSrc": "4861:48:15",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:15"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:15"
																								},
																								"nativeSrc": "4846:64:15",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:15"
																							},
																							"nativeSrc": "4846:64:15",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:15"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:15",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:15"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:15"
																					},
																					"nativeSrc": "4748:19:15",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:15"
																				},
																				"nativeSrc": "4745:179:15",
																				"nodeType": "YulIf",
																				"src": "4745:179:15"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:15"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:15",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:15"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:15",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:15",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:15",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:15"
																									},
																									"nativeSrc": "4954:14:15",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:15"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:15",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:15",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:15"
																							},
																							"nativeSrc": "4950:22:15",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:15"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:15"
																					},
																					"nativeSrc": "4937:36:15",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:15"
																				},
																				"nativeSrc": "4937:36:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:15"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:15",
																	"nodeType": "YulCase",
																	"src": "4365:618:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:15",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:15",
																		"nodeType": "YulBlock",
																		"src": "5000:222:15",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:15",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:15",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:15",
																					"nodeType": "YulBlock",
																					"src": "5051:67:15",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:15",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:15",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:15",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:15"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:15",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:15"
																										},
																										"nativeSrc": "5084:19:15",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:15"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:15"
																								},
																								"nativeSrc": "5078:26:15",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:15"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:15"
																				},
																				"nativeSrc": "5041:77:15",
																				"nodeType": "YulIf",
																				"src": "5041:77:15"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:15"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:15"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:15"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:15",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:15"
																							},
																							"nativeSrc": "5144:67:15",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:15"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:15"
																					},
																					"nativeSrc": "5131:81:15",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:15"
																				},
																				"nativeSrc": "5131:81:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:15"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:15",
																	"nodeType": "YulCase",
																	"src": "4992:230:15",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:15"
																},
																"nativeSrc": "4342:14:15",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:15"
															},
															"nativeSrc": "4335:887:15",
															"nodeType": "YulSwitch",
															"src": "4335:887:15"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:15",
														"nodeType": "YulTypedName",
														"src": "3914:4:15",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:15",
														"nodeType": "YulTypedName",
														"src": "3920:3:15",
														"type": ""
													}
												],
												"src": "3833:1395:15"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x626F757267656F6973416E696D616C7300000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4241530000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH2 0x8C SWAP2 SWAP1 PUSH2 0x2F4 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH2 0x9C SWAP2 SWAP1 PUSH2 0x2F4 JUMP JUMPDEST POP POP POP PUSH2 0x3C6 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x125 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x138 JUMPI PUSH2 0x137 PUSH2 0xDE JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x1A0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x163 JUMP JUMPDEST PUSH2 0x1AA DUP7 DUP4 PUSH2 0x163 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F1 PUSH2 0x1EC PUSH2 0x1E7 DUP5 PUSH2 0x1C2 JUMP JUMPDEST PUSH2 0x1CC JUMP JUMPDEST PUSH2 0x1C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20B DUP4 PUSH2 0x1D6 JUMP JUMPDEST PUSH2 0x21F PUSH2 0x217 DUP3 PUSH2 0x1F8 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x170 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x234 PUSH2 0x227 JUMP JUMPDEST PUSH2 0x23F DUP2 DUP5 DUP5 PUSH2 0x202 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x263 JUMPI PUSH2 0x258 PUSH1 0x0 DUP3 PUSH2 0x22C JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x245 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2A8 JUMPI PUSH2 0x279 DUP2 PUSH2 0x13E JUMP JUMPDEST PUSH2 0x282 DUP5 PUSH2 0x153 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x291 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2A5 PUSH2 0x29D DUP6 PUSH2 0x153 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x244 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CB PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2AD JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E4 DUP4 DUP4 PUSH2 0x2BA JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2FD DUP3 PUSH2 0xA4 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x316 JUMPI PUSH2 0x315 PUSH2 0xAF JUMP JUMPDEST JUMPDEST PUSH2 0x320 DUP3 SLOAD PUSH2 0x10D JUMP JUMPDEST PUSH2 0x32B DUP3 DUP3 DUP6 PUSH2 0x267 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x35E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x34C JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x356 DUP6 DUP3 PUSH2 0x2D8 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3BE JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x36C DUP7 PUSH2 0x13E JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x394 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x36F JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x3B1 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x3AD PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2BA JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x26A9 DUP1 PUSH2 0x3D5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4F6CCCE7 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x38B JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x62B4C27F EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2D5 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x4E7FE41E EQ PUSH2 0x23B JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x199 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x135 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x1D27 JUMP JUMPDEST PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x1D6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x153 PUSH2 0x435 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x1E1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x1E72 JUMP JUMPDEST PUSH2 0x4C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x1EE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x1F27 JUMP JUMPDEST PUSH2 0x4E3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BD PUSH2 0x4F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x1F91 JUMP JUMPDEST PUSH2 0x506 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x1F27 JUMP JUMPDEST PUSH2 0x608 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x239 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x1F91 JUMP JUMPDEST PUSH2 0x6B1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x255 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x1E72 JUMP JUMPDEST PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x285 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x1E72 JUMP JUMPDEST PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x292 SWAP2 SWAP1 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A3 PUSH2 0x75F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x1E72 JUMP JUMPDEST PUSH2 0x7E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x1EE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x1FE4 JUMP JUMPDEST PUSH2 0x7F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30D PUSH2 0x8B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31A SWAP2 SWAP1 PUSH2 0x1E1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x338 SWAP2 SWAP1 PUSH2 0x203D JUMP JUMPDEST PUSH2 0x945 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x359 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x21B2 JUMP JUMPDEST PUSH2 0x95B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x375 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x370 SWAP2 SWAP1 PUSH2 0x1E72 JUMP JUMPDEST PUSH2 0x978 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x382 SWAP2 SWAP1 PUSH2 0x1E1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A0 SWAP2 SWAP1 PUSH2 0x2235 JUMP JUMPDEST PUSH2 0x9E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x1D6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x780E9D6300000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x42E JUMPI POP PUSH2 0x42D DUP3 PUSH2 0xA75 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x444 SWAP1 PUSH2 0x22A4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x470 SWAP1 PUSH2 0x22A4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4BD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x492 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4BD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4A0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D2 DUP3 PUSH2 0xB57 JUMP JUMPDEST POP PUSH2 0x4DC DUP3 PUSH2 0xBDF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4F5 DUP3 DUP3 PUSH2 0x4F0 PUSH2 0xC1C JUMP JUMPDEST PUSH2 0xC24 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x578 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x56F SWAP2 SWAP1 PUSH2 0x1EE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x58C DUP4 DUP4 PUSH2 0x587 PUSH2 0xC1C JUMP JUMPDEST PUSH2 0xC36 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x602 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x613 DUP4 PUSH2 0x7F9 JUMP JUMPDEST DUP3 LT PUSH2 0x658 JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0xA57D13DC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP3 SWAP2 SWAP1 PUSH2 0x230C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6CC DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x95B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F3 PUSH2 0x4F9 JUMP JUMPDEST DUP3 LT PUSH2 0x739 JUMPI PUSH1 0x0 DUP3 PUSH1 0x40 MLOAD PUSH32 0xA57D13DC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x730 SWAP3 SWAP2 SWAP1 PUSH2 0x230C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x74D JUMPI PUSH2 0x74C PUSH2 0x2335 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x76B PUSH2 0x4F9 JUMP JUMPDEST PUSH2 0x775 SWAP2 SWAP1 PUSH2 0x2393 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x5 TIMESTAMP CALLER DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x792 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0x7B5 SWAP2 SWAP1 PUSH2 0x249C JUMP JUMPDEST PUSH2 0x7BF SWAP2 SWAP1 PUSH2 0x2393 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xA PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x7E3 CALLER DUP4 PUSH2 0xD53 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F2 DUP3 PUSH2 0xB57 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x863 SWAP2 SWAP1 PUSH2 0x1EE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x8C2 SWAP1 PUSH2 0x22A4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8EE SWAP1 PUSH2 0x22A4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x93B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x910 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x93B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x91E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x957 PUSH2 0x950 PUSH2 0xC1C JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE4C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x966 DUP5 DUP5 DUP5 PUSH2 0x506 JUMP JUMPDEST PUSH2 0x972 DUP5 DUP5 DUP5 DUP5 PUSH2 0xFBB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x983 DUP3 PUSH2 0xB57 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x98E PUSH2 0x1172 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x9AE JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x9D9 JUMP JUMPDEST DUP1 PUSH2 0x9B8 DUP5 PUSH2 0x1189 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9C9 SWAP3 SWAP2 SWAP1 PUSH2 0x2509 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xB40 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0xB50 JUMPI POP PUSH2 0xB4F DUP3 PUSH2 0x1257 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB63 DUP4 PUSH2 0x12C1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBD6 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCD SWAP2 SWAP1 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC31 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x12FE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC44 DUP6 DUP6 DUP6 PUSH2 0x14C3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC88 JUMPI PUSH2 0xC83 DUP5 PUSH2 0x16DD JUMP JUMPDEST PUSH2 0xCC7 JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC6 JUMPI PUSH2 0xCC5 DUP2 DUP6 PUSH2 0x1726 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD09 JUMPI PUSH2 0xD04 DUP5 PUSH2 0x1887 JUMP JUMPDEST PUSH2 0xD48 JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD47 JUMPI PUSH2 0xD46 DUP6 DUP6 PUSH2 0x1958 JUMP JUMPDEST JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDC5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBC SWAP2 SWAP1 PUSH2 0x1EE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDD3 DUP4 DUP4 PUSH1 0x0 PUSH2 0xC36 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE47 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE3E SWAP2 SWAP1 PUSH2 0x1EE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEBD JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEB4 SWAP2 SWAP1 PUSH2 0x1EE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFAE SWAP2 SWAP1 PUSH2 0x1D6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x116C JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0xFFF PUSH2 0xC1C JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1021 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2582 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x105D JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x105A SWAP2 SWAP1 PUSH2 0x25E3 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x10E1 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x108D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1092 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x10D9 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D0 SWAP2 SWAP1 PUSH2 0x1EE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x116A JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1161 SWAP2 SWAP1 PUSH2 0x1EE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1198 DUP5 PUSH2 0x19E3 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11B7 JUMPI PUSH2 0x11B6 PUSH2 0x2087 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x11E9 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x124C JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1240 JUMPI PUSH2 0x123F PUSH2 0x246D JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x11F7 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1337 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x146B JUMPI PUSH1 0x0 PUSH2 0x1347 DUP5 PUSH2 0xB57 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x13B2 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x13C5 JUMPI POP PUSH2 0x13C3 DUP2 DUP5 PUSH2 0x9E1 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1407 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13FE SWAP2 SWAP1 PUSH2 0x1EE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1469 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x14CF DUP5 PUSH2 0x12C1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1511 JUMPI PUSH2 0x1510 DUP2 DUP5 DUP7 PUSH2 0x1B36 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x15A2 JUMPI PUSH2 0x1553 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x12FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1625 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD SWAP1 POP PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1731 DUP4 PUSH2 0x7F9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 EQ PUSH2 0x1816 JUMPI PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP1 PUSH1 0x6 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x8 DUP1 SLOAD SWAP1 POP PUSH2 0x189B SWAP2 SWAP1 PUSH2 0x2610 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x18CB JUMPI PUSH2 0x18CA PUSH2 0x2335 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x18ED JUMPI PUSH2 0x18EC PUSH2 0x2335 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x9 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x193C JUMPI PUSH2 0x193B PUSH2 0x2644 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x1965 DUP5 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x196F SWAP2 SWAP1 PUSH2 0x2610 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1A41 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1A37 JUMPI PUSH2 0x1A36 PUSH2 0x246D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1A7E JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1A74 JUMPI PUSH2 0x1A73 PUSH2 0x246D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1AAD JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1AA3 JUMPI PUSH2 0x1AA2 PUSH2 0x246D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1AD6 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1ACC JUMPI PUSH2 0x1ACB PUSH2 0x246D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1AFB JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1AF1 JUMPI PUSH2 0x1AF0 PUSH2 0x246D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1B1E JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1B14 JUMPI PUSH2 0x1B13 PUSH2 0x246D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1B2D JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B41 DUP4 DUP4 DUP4 PUSH2 0x1BFA JUMP JUMPDEST PUSH2 0x1BF5 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1BB6 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BAD SWAP2 SWAP1 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BEC SWAP3 SWAP2 SWAP1 PUSH2 0x230C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1CB2 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1C73 JUMPI POP PUSH2 0x1C72 DUP5 DUP5 PUSH2 0x9E1 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1CB1 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1C99 DUP4 PUSH2 0xBDF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D04 DUP2 PUSH2 0x1CCF JUMP JUMPDEST DUP2 EQ PUSH2 0x1D0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D21 DUP2 PUSH2 0x1CFB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D3D JUMPI PUSH2 0x1D3C PUSH2 0x1CC5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D4B DUP5 DUP3 DUP6 ADD PUSH2 0x1D12 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D69 DUP2 PUSH2 0x1D54 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D84 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D60 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DC4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1DA9 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DEC DUP3 PUSH2 0x1D8A JUMP JUMPDEST PUSH2 0x1DF6 DUP2 DUP6 PUSH2 0x1D95 JUMP JUMPDEST SWAP4 POP PUSH2 0x1E06 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1DA6 JUMP JUMPDEST PUSH2 0x1E0F DUP2 PUSH2 0x1DD0 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E34 DUP2 DUP5 PUSH2 0x1DE1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E4F DUP2 PUSH2 0x1E3C JUMP JUMPDEST DUP2 EQ PUSH2 0x1E5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E6C DUP2 PUSH2 0x1E46 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E88 JUMPI PUSH2 0x1E87 PUSH2 0x1CC5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E96 DUP5 DUP3 DUP6 ADD PUSH2 0x1E5D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ECA DUP3 PUSH2 0x1E9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EDA DUP2 PUSH2 0x1EBF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EF5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1ED1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F04 DUP2 PUSH2 0x1EBF JUMP JUMPDEST DUP2 EQ PUSH2 0x1F0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F21 DUP2 PUSH2 0x1EFB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F3E JUMPI PUSH2 0x1F3D PUSH2 0x1CC5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F4C DUP6 DUP3 DUP7 ADD PUSH2 0x1F12 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F5D DUP6 DUP3 DUP7 ADD PUSH2 0x1E5D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F70 DUP2 PUSH2 0x1E3C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F8B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F67 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1FAA JUMPI PUSH2 0x1FA9 PUSH2 0x1CC5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FB8 DUP7 DUP3 DUP8 ADD PUSH2 0x1F12 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1FC9 DUP7 DUP3 DUP8 ADD PUSH2 0x1F12 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1FDA DUP7 DUP3 DUP8 ADD PUSH2 0x1E5D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FFA JUMPI PUSH2 0x1FF9 PUSH2 0x1CC5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2008 DUP5 DUP3 DUP6 ADD PUSH2 0x1F12 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x201A DUP2 PUSH2 0x1D54 JUMP JUMPDEST DUP2 EQ PUSH2 0x2025 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2037 DUP2 PUSH2 0x2011 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2054 JUMPI PUSH2 0x2053 PUSH2 0x1CC5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2062 DUP6 DUP3 DUP7 ADD PUSH2 0x1F12 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2073 DUP6 DUP3 DUP7 ADD PUSH2 0x2028 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x20BF DUP3 PUSH2 0x1DD0 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x20DE JUMPI PUSH2 0x20DD PUSH2 0x2087 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20F1 PUSH2 0x1CBB JUMP JUMPDEST SWAP1 POP PUSH2 0x20FD DUP3 DUP3 PUSH2 0x20B6 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x211D JUMPI PUSH2 0x211C PUSH2 0x2087 JUMP JUMPDEST JUMPDEST PUSH2 0x2126 DUP3 PUSH2 0x1DD0 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2155 PUSH2 0x2150 DUP5 PUSH2 0x2102 JUMP JUMPDEST PUSH2 0x20E7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2171 JUMPI PUSH2 0x2170 PUSH2 0x2082 JUMP JUMPDEST JUMPDEST PUSH2 0x217C DUP5 DUP3 DUP6 PUSH2 0x2133 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2199 JUMPI PUSH2 0x2198 PUSH2 0x207D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x21A9 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2142 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x21CC JUMPI PUSH2 0x21CB PUSH2 0x1CC5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21DA DUP8 DUP3 DUP9 ADD PUSH2 0x1F12 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x21EB DUP8 DUP3 DUP9 ADD PUSH2 0x1F12 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x21FC DUP8 DUP3 DUP9 ADD PUSH2 0x1E5D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x221D JUMPI PUSH2 0x221C PUSH2 0x1CCA JUMP JUMPDEST JUMPDEST PUSH2 0x2229 DUP8 DUP3 DUP9 ADD PUSH2 0x2184 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x224C JUMPI PUSH2 0x224B PUSH2 0x1CC5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x225A DUP6 DUP3 DUP7 ADD PUSH2 0x1F12 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x226B DUP6 DUP3 DUP7 ADD PUSH2 0x1F12 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x22BC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x22CF JUMPI PUSH2 0x22CE PUSH2 0x2275 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x22EA PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1ED1 JUMP JUMPDEST PUSH2 0x22F7 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1F67 JUMP JUMPDEST PUSH2 0x2304 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1ED1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2321 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1ED1 JUMP JUMPDEST PUSH2 0x232E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F67 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x239E DUP3 PUSH2 0x1E3C JUMP JUMPDEST SWAP2 POP PUSH2 0x23A9 DUP4 PUSH2 0x1E3C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x23C1 JUMPI PUSH2 0x23C0 PUSH2 0x2364 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23E2 PUSH2 0x23DD DUP3 PUSH2 0x1E3C JUMP JUMPDEST PUSH2 0x23C7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2400 DUP3 PUSH2 0x23E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2412 DUP3 PUSH2 0x23F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x242A PUSH2 0x2425 DUP3 PUSH2 0x1EBF JUMP JUMPDEST PUSH2 0x2407 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x243C DUP3 DUP7 PUSH2 0x23D1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x244C DUP3 DUP6 PUSH2 0x2419 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x245C DUP3 DUP5 PUSH2 0x23D1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x24A7 DUP3 PUSH2 0x1E3C JUMP JUMPDEST SWAP2 POP PUSH2 0x24B2 DUP4 PUSH2 0x1E3C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x24C2 JUMPI PUSH2 0x24C1 PUSH2 0x246D JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24E3 DUP3 PUSH2 0x1D8A JUMP JUMPDEST PUSH2 0x24ED DUP2 DUP6 PUSH2 0x24CD JUMP JUMPDEST SWAP4 POP PUSH2 0x24FD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1DA6 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2515 DUP3 DUP6 PUSH2 0x24D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2521 DUP3 DUP5 PUSH2 0x24D8 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2554 DUP3 PUSH2 0x252D JUMP JUMPDEST PUSH2 0x255E DUP2 DUP6 PUSH2 0x2538 JUMP JUMPDEST SWAP4 POP PUSH2 0x256E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1DA6 JUMP JUMPDEST PUSH2 0x2577 DUP2 PUSH2 0x1DD0 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2597 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1ED1 JUMP JUMPDEST PUSH2 0x25A4 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1ED1 JUMP JUMPDEST PUSH2 0x25B1 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1F67 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x25C3 DUP2 DUP5 PUSH2 0x2549 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x25DD DUP2 PUSH2 0x1CFB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25F9 JUMPI PUSH2 0x25F8 PUSH2 0x1CC5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2607 DUP5 DUP3 DUP6 ADD PUSH2 0x25CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x261B DUP3 PUSH2 0x1E3C JUMP JUMPDEST SWAP2 POP PUSH2 0x2626 DUP4 PUSH2 0x1E3C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x263E JUMPI PUSH2 0x263D PUSH2 0x2364 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD 0xE7 0xC4 MCOPY XOR PUSH16 0x98E758D55C0A8928F07D9061E557D09C 0xF 0x1E 0xB3 SWAP5 PUSH22 0x4BE880B32564736F6C634300081A0033000000000000 ",
							"sourceMap": "146:480:13:-:0;;;198:49;;;;;;;;;;1381:113:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1455:5;1447;:13;;;;;;:::i;:::-;;1480:7;1470;:17;;;;;;:::i;:::-;;1381:113;;146:480:13;;7:99:15;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;146:480:13:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_addTokenToAllTokensEnumeration_1530": {
									"entryPoint": 5853,
									"id": 1530,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_addTokenToOwnerEnumeration_1510": {
									"entryPoint": 6488,
									"id": 1510,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_approve_1014": {
									"entryPoint": 4862,
									"id": 1014,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_948": {
									"entryPoint": 3108,
									"id": 948,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_baseURI_341": {
									"entryPoint": 4466,
									"id": 341,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_596": {
									"entryPoint": 6966,
									"id": 596,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1144": {
									"entryPoint": 4027,
									"id": 1144,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_getApproved_523": {
									"entryPoint": 3039,
									"id": 523,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_559": {
									"entryPoint": 7162,
									"id": 559,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_752": {
									"entryPoint": 3411,
									"id": 752,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1736": {
									"entryPoint": 3100,
									"id": 1736,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_510": {
									"entryPoint": 4801,
									"id": 510,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_removeTokenFromAllTokensEnumeration_1638": {
									"entryPoint": 6279,
									"id": 1638,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_removeTokenFromOwnerEnumeration_1590": {
									"entryPoint": 5926,
									"id": 1590,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_requireOwned_1080": {
									"entryPoint": 2903,
									"id": 1080,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_setApprovalForAll_1051": {
									"entryPoint": 3660,
									"id": 1051,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_1479": {
									"entryPoint": 3126,
									"id": 1479,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_update_702": {
									"entryPoint": 5315,
									"id": 702,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@animalTypes_3221": {
									"entryPoint": 1745,
									"id": 3221,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@approve_357": {
									"entryPoint": 1251,
									"id": 357,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_265": {
									"entryPoint": 2041,
									"id": 265,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_374": {
									"entryPoint": 1223,
									"id": 374,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_407": {
									"entryPoint": 2529,
									"id": 407,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_2919": {
									"entryPoint": 6627,
									"id": 2919,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mintAnimalToken_3264": {
									"entryPoint": 1887,
									"id": 3264,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_287": {
									"entryPoint": 1077,
									"id": 287,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_278": {
									"entryPoint": 2023,
									"id": 278,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_471": {
									"entryPoint": 1713,
									"id": 471,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_497": {
									"entryPoint": 2395,
									"id": 497,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_390": {
									"entryPoint": 2373,
									"id": 390,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1344": {
									"entryPoint": 955,
									"id": 1344,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_2032": {
									"entryPoint": 4695,
									"id": 2032,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_237": {
									"entryPoint": 2677,
									"id": 237,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_296": {
									"entryPoint": 2227,
									"id": 296,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1822": {
									"entryPoint": 4489,
									"id": 1822,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenByIndex_1410": {
									"entryPoint": 1769,
									"id": 1410,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenOfOwnerByIndex_1373": {
									"entryPoint": 1544,
									"id": 1373,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@tokenURI_332": {
									"entryPoint": 2424,
									"id": 332,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_1383": {
									"entryPoint": 1273,
									"id": 1383,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_453": {
									"entryPoint": 1286,
									"id": 453,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 8514,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 7954,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 8232,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 7442,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 9678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 8580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7773,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8164,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8757,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 8081,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 8626,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 8253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7975,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 7463,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 9699,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7794,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack": {
									"entryPoint": 9241,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7520,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9545,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7649,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9432,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8039,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack": {
									"entryPoint": 9169,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 9481,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 9264,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7904,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 9602,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8972,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 8917,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7535,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8054,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 8423,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 7355,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 8450,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 9517,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7562,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9528,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7573,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9107,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9744,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7871,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7508,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 7375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7839,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7740,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 8499,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7590,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 8868,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 8374,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"leftAlign_t_address": {
									"entryPoint": 9223,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint160": {
									"entryPoint": 9205,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint256": {
									"entryPoint": 9159,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 9372,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9060,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 9325,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8821,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 9796,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 9013,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8327,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 8317,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 8322,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 7370,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7365,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7632,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_96": {
									"entryPoint": 9192,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 7931,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8209,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 7419,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7750,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:17150:15",
										"nodeType": "YulBlock",
										"src": "0:17150:15",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:15",
													"nodeType": "YulBlock",
													"src": "47:35:15",
													"statements": [
														{
															"nativeSrc": "57:19:15",
															"nodeType": "YulAssignment",
															"src": "57:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:15",
																		"nodeType": "YulLiteral",
																		"src": "73:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:15"
																},
																"nativeSrc": "67:9:15",
																"nodeType": "YulFunctionCall",
																"src": "67:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:15"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:15",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:15",
														"nodeType": "YulTypedName",
														"src": "40:6:15",
														"type": ""
													}
												],
												"src": "7:75:15"
											},
											{
												"body": {
													"nativeSrc": "177:28:15",
													"nodeType": "YulBlock",
													"src": "177:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:15",
																		"nodeType": "YulLiteral",
																		"src": "194:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:15",
																		"nodeType": "YulLiteral",
																		"src": "197:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:15"
																},
																"nativeSrc": "187:12:15",
																"nodeType": "YulFunctionCall",
																"src": "187:12:15"
															},
															"nativeSrc": "187:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:15"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:15"
											},
											{
												"body": {
													"nativeSrc": "300:28:15",
													"nodeType": "YulBlock",
													"src": "300:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:15",
																		"nodeType": "YulLiteral",
																		"src": "317:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:15",
																		"nodeType": "YulLiteral",
																		"src": "320:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:15"
																},
																"nativeSrc": "310:12:15",
																"nodeType": "YulFunctionCall",
																"src": "310:12:15"
															},
															"nativeSrc": "310:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:15"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:15"
											},
											{
												"body": {
													"nativeSrc": "378:105:15",
													"nodeType": "YulBlock",
													"src": "378:105:15",
													"statements": [
														{
															"nativeSrc": "388:89:15",
															"nodeType": "YulAssignment",
															"src": "388:89:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:15",
																		"nodeType": "YulLiteral",
																		"src": "410:66:15",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:15"
																},
																"nativeSrc": "399:78:15",
																"nodeType": "YulFunctionCall",
																"src": "399:78:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:15",
														"nodeType": "YulTypedName",
														"src": "360:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:15",
														"nodeType": "YulTypedName",
														"src": "370:7:15",
														"type": ""
													}
												],
												"src": "334:149:15"
											},
											{
												"body": {
													"nativeSrc": "531:78:15",
													"nodeType": "YulBlock",
													"src": "531:78:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:15",
																"nodeType": "YulBlock",
																"src": "587:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:15",
																					"nodeType": "YulLiteral",
																					"src": "596:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:15",
																					"nodeType": "YulLiteral",
																					"src": "599:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:15"
																			},
																			"nativeSrc": "589:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:15"
																		},
																		"nativeSrc": "589:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:15",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:15"
																				},
																				"nativeSrc": "561:23:15",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:15"
																		},
																		"nativeSrc": "551:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:15"
																},
																"nativeSrc": "544:42:15",
																"nodeType": "YulFunctionCall",
																"src": "544:42:15"
															},
															"nativeSrc": "541:62:15",
															"nodeType": "YulIf",
															"src": "541:62:15"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:15",
														"nodeType": "YulTypedName",
														"src": "524:5:15",
														"type": ""
													}
												],
												"src": "489:120:15"
											},
											{
												"body": {
													"nativeSrc": "666:86:15",
													"nodeType": "YulBlock",
													"src": "666:86:15",
													"statements": [
														{
															"nativeSrc": "676:29:15",
															"nodeType": "YulAssignment",
															"src": "676:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:15"
																},
																"nativeSrc": "685:20:15",
																"nodeType": "YulFunctionCall",
																"src": "685:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:15",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:15"
																},
																"nativeSrc": "714:32:15",
																"nodeType": "YulFunctionCall",
																"src": "714:32:15"
															},
															"nativeSrc": "714:32:15",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:15"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:15",
														"nodeType": "YulTypedName",
														"src": "644:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:15",
														"nodeType": "YulTypedName",
														"src": "652:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:15",
														"nodeType": "YulTypedName",
														"src": "660:5:15",
														"type": ""
													}
												],
												"src": "615:137:15"
											},
											{
												"body": {
													"nativeSrc": "823:262:15",
													"nodeType": "YulBlock",
													"src": "823:262:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:15",
																"nodeType": "YulBlock",
																"src": "869:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:15"
																			},
																			"nativeSrc": "871:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:15"
																		},
																		"nativeSrc": "871:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:15"
																		},
																		"nativeSrc": "840:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:15",
																		"nodeType": "YulLiteral",
																		"src": "865:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:15"
																},
																"nativeSrc": "836:32:15",
																"nodeType": "YulFunctionCall",
																"src": "836:32:15"
															},
															"nativeSrc": "833:119:15",
															"nodeType": "YulIf",
															"src": "833:119:15"
														},
														{
															"nativeSrc": "962:116:15",
															"nodeType": "YulBlock",
															"src": "962:116:15",
															"statements": [
																{
																	"nativeSrc": "977:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:15",
																		"nodeType": "YulLiteral",
																		"src": "991:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:15",
																			"nodeType": "YulTypedName",
																			"src": "981:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:15",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:15"
																				},
																				"nativeSrc": "1036:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:15",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:15"
																		},
																		"nativeSrc": "1016:52:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:15",
														"nodeType": "YulTypedName",
														"src": "793:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:15",
														"nodeType": "YulTypedName",
														"src": "804:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:15",
														"nodeType": "YulTypedName",
														"src": "816:6:15",
														"type": ""
													}
												],
												"src": "758:327:15"
											},
											{
												"body": {
													"nativeSrc": "1133:48:15",
													"nodeType": "YulBlock",
													"src": "1133:48:15",
													"statements": [
														{
															"nativeSrc": "1143:32:15",
															"nodeType": "YulAssignment",
															"src": "1143:32:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:15"
																		},
																		"nativeSrc": "1161:13:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:15"
																},
																"nativeSrc": "1154:21:15",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:15",
														"nodeType": "YulTypedName",
														"src": "1115:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:15",
														"nodeType": "YulTypedName",
														"src": "1125:7:15",
														"type": ""
													}
												],
												"src": "1091:90:15"
											},
											{
												"body": {
													"nativeSrc": "1246:50:15",
													"nodeType": "YulBlock",
													"src": "1246:50:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:15",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:15"
																		},
																		"nativeSrc": "1268:21:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:15"
																},
																"nativeSrc": "1256:34:15",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:15"
															},
															"nativeSrc": "1256:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:15"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:15",
														"nodeType": "YulTypedName",
														"src": "1234:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:15",
														"nodeType": "YulTypedName",
														"src": "1241:3:15",
														"type": ""
													}
												],
												"src": "1187:109:15"
											},
											{
												"body": {
													"nativeSrc": "1394:118:15",
													"nodeType": "YulBlock",
													"src": "1394:118:15",
													"statements": [
														{
															"nativeSrc": "1404:26:15",
															"nodeType": "YulAssignment",
															"src": "1404:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:15"
																},
																"nativeSrc": "1412:18:15",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:15",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:15"
																		},
																		"nativeSrc": "1487:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:15",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:15"
																},
																"nativeSrc": "1440:65:15",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:15"
															},
															"nativeSrc": "1440:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:15",
														"nodeType": "YulTypedName",
														"src": "1366:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:15",
														"nodeType": "YulTypedName",
														"src": "1378:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:15",
														"nodeType": "YulTypedName",
														"src": "1389:4:15",
														"type": ""
													}
												],
												"src": "1302:210:15"
											},
											{
												"body": {
													"nativeSrc": "1577:40:15",
													"nodeType": "YulBlock",
													"src": "1577:40:15",
													"statements": [
														{
															"nativeSrc": "1588:22:15",
															"nodeType": "YulAssignment",
															"src": "1588:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:15"
																},
																"nativeSrc": "1598:12:15",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:15",
														"nodeType": "YulTypedName",
														"src": "1560:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:15",
														"nodeType": "YulTypedName",
														"src": "1570:6:15",
														"type": ""
													}
												],
												"src": "1518:99:15"
											},
											{
												"body": {
													"nativeSrc": "1719:73:15",
													"nodeType": "YulBlock",
													"src": "1719:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:15"
																},
																"nativeSrc": "1729:19:15",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:15"
															},
															"nativeSrc": "1729:19:15",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:15"
														},
														{
															"nativeSrc": "1757:29:15",
															"nodeType": "YulAssignment",
															"src": "1757:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:15",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:15"
																},
																"nativeSrc": "1772:14:15",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:15",
														"nodeType": "YulTypedName",
														"src": "1691:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:15",
														"nodeType": "YulTypedName",
														"src": "1696:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:15",
														"nodeType": "YulTypedName",
														"src": "1707:11:15",
														"type": ""
													}
												],
												"src": "1623:169:15"
											},
											{
												"body": {
													"nativeSrc": "1860:186:15",
													"nodeType": "YulBlock",
													"src": "1860:186:15",
													"statements": [
														{
															"nativeSrc": "1871:10:15",
															"nodeType": "YulVariableDeclaration",
															"src": "1871:10:15",
															"value": {
																"kind": "number",
																"nativeSrc": "1880:1:15",
																"nodeType": "YulLiteral",
																"src": "1880:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1875:1:15",
																	"nodeType": "YulTypedName",
																	"src": "1875:1:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1940:63:15",
																"nodeType": "YulBlock",
																"src": "1940:63:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1965:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "1965:3:15"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1970:1:15",
																							"nodeType": "YulIdentifier",
																							"src": "1970:1:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1961:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "1961:3:15"
																					},
																					"nativeSrc": "1961:11:15",
																					"nodeType": "YulFunctionCall",
																					"src": "1961:11:15"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1984:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "1984:3:15"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1989:1:15",
																									"nodeType": "YulIdentifier",
																									"src": "1989:1:15"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1980:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "1980:3:15"
																							},
																							"nativeSrc": "1980:11:15",
																							"nodeType": "YulFunctionCall",
																							"src": "1980:11:15"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1974:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "1974:5:15"
																					},
																					"nativeSrc": "1974:18:15",
																					"nodeType": "YulFunctionCall",
																					"src": "1974:18:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1954:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1954:6:15"
																			},
																			"nativeSrc": "1954:39:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1954:39:15"
																		},
																		"nativeSrc": "1954:39:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1954:39:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1901:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "1901:1:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1904:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1904:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1898:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "1898:2:15"
																},
																"nativeSrc": "1898:13:15",
																"nodeType": "YulFunctionCall",
																"src": "1898:13:15"
															},
															"nativeSrc": "1890:113:15",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1912:19:15",
																"nodeType": "YulBlock",
																"src": "1912:19:15",
																"statements": [
																	{
																		"nativeSrc": "1914:15:15",
																		"nodeType": "YulAssignment",
																		"src": "1914:15:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1923:1:15",
																					"nodeType": "YulIdentifier",
																					"src": "1923:1:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1926:2:15",
																					"nodeType": "YulLiteral",
																					"src": "1926:2:15",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1919:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "1919:3:15"
																			},
																			"nativeSrc": "1919:10:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1919:10:15"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1914:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "1914:1:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1894:3:15",
																"nodeType": "YulBlock",
																"src": "1894:3:15",
																"statements": []
															},
															"src": "1890:113:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2023:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "2023:3:15"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2028:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2028:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2019:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2019:3:15"
																		},
																		"nativeSrc": "2019:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2019:16:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2037:1:15",
																		"nodeType": "YulLiteral",
																		"src": "2037:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2012:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2012:6:15"
																},
																"nativeSrc": "2012:27:15",
																"nodeType": "YulFunctionCall",
																"src": "2012:27:15"
															},
															"nativeSrc": "2012:27:15",
															"nodeType": "YulExpressionStatement",
															"src": "2012:27:15"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:248:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:15",
														"nodeType": "YulTypedName",
														"src": "1842:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:15",
														"nodeType": "YulTypedName",
														"src": "1847:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:15",
														"nodeType": "YulTypedName",
														"src": "1852:6:15",
														"type": ""
													}
												],
												"src": "1798:248:15"
											},
											{
												"body": {
													"nativeSrc": "2100:54:15",
													"nodeType": "YulBlock",
													"src": "2100:54:15",
													"statements": [
														{
															"nativeSrc": "2110:38:15",
															"nodeType": "YulAssignment",
															"src": "2110:38:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2128:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "2128:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2135:2:15",
																				"nodeType": "YulLiteral",
																				"src": "2135:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2124:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2124:3:15"
																		},
																		"nativeSrc": "2124:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2124:14:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2144:2:15",
																				"nodeType": "YulLiteral",
																				"src": "2144:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2140:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2140:3:15"
																		},
																		"nativeSrc": "2140:7:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2140:7:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2120:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2120:3:15"
																},
																"nativeSrc": "2120:28:15",
																"nodeType": "YulFunctionCall",
																"src": "2120:28:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2110:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2110:6:15"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2052:102:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2083:5:15",
														"nodeType": "YulTypedName",
														"src": "2083:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2093:6:15",
														"nodeType": "YulTypedName",
														"src": "2093:6:15",
														"type": ""
													}
												],
												"src": "2052:102:15"
											},
											{
												"body": {
													"nativeSrc": "2252:285:15",
													"nodeType": "YulBlock",
													"src": "2252:285:15",
													"statements": [
														{
															"nativeSrc": "2262:53:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2262:53:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2309:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "2309:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2276:32:15",
																	"nodeType": "YulIdentifier",
																	"src": "2276:32:15"
																},
																"nativeSrc": "2276:39:15",
																"nodeType": "YulFunctionCall",
																"src": "2276:39:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2266:6:15",
																	"nodeType": "YulTypedName",
																	"src": "2266:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2324:78:15",
															"nodeType": "YulAssignment",
															"src": "2324:78:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2390:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2390:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2395:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2395:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2331:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "2331:58:15"
																},
																"nativeSrc": "2331:71:15",
																"nodeType": "YulFunctionCall",
																"src": "2331:71:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2324:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2324:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2450:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "2450:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2457:4:15",
																				"nodeType": "YulLiteral",
																				"src": "2457:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2446:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2446:3:15"
																		},
																		"nativeSrc": "2446:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2446:16:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2464:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2464:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2469:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2469:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2411:34:15",
																	"nodeType": "YulIdentifier",
																	"src": "2411:34:15"
																},
																"nativeSrc": "2411:65:15",
																"nodeType": "YulFunctionCall",
																"src": "2411:65:15"
															},
															"nativeSrc": "2411:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "2411:65:15"
														},
														{
															"nativeSrc": "2485:46:15",
															"nodeType": "YulAssignment",
															"src": "2485:46:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2496:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2496:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2523:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2523:6:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2501:21:15",
																			"nodeType": "YulIdentifier",
																			"src": "2501:21:15"
																		},
																		"nativeSrc": "2501:29:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2501:29:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2492:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2492:3:15"
																},
																"nativeSrc": "2492:39:15",
																"nodeType": "YulFunctionCall",
																"src": "2492:39:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2485:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2485:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2160:377:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2233:5:15",
														"nodeType": "YulTypedName",
														"src": "2233:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2240:3:15",
														"nodeType": "YulTypedName",
														"src": "2240:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2248:3:15",
														"nodeType": "YulTypedName",
														"src": "2248:3:15",
														"type": ""
													}
												],
												"src": "2160:377:15"
											},
											{
												"body": {
													"nativeSrc": "2661:195:15",
													"nodeType": "YulBlock",
													"src": "2661:195:15",
													"statements": [
														{
															"nativeSrc": "2671:26:15",
															"nodeType": "YulAssignment",
															"src": "2671:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2683:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "2683:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2694:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2694:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2679:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2679:3:15"
																},
																"nativeSrc": "2679:18:15",
																"nodeType": "YulFunctionCall",
																"src": "2679:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2671:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "2671:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2718:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2718:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2729:1:15",
																				"nodeType": "YulLiteral",
																				"src": "2729:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2714:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2714:3:15"
																		},
																		"nativeSrc": "2714:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2714:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2737:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "2737:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2743:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2743:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2733:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2733:3:15"
																		},
																		"nativeSrc": "2733:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2733:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2707:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2707:6:15"
																},
																"nativeSrc": "2707:47:15",
																"nodeType": "YulFunctionCall",
																"src": "2707:47:15"
															},
															"nativeSrc": "2707:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "2707:47:15"
														},
														{
															"nativeSrc": "2763:86:15",
															"nodeType": "YulAssignment",
															"src": "2763:86:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2835:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2835:6:15"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2844:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "2844:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2771:63:15",
																	"nodeType": "YulIdentifier",
																	"src": "2771:63:15"
																},
																"nativeSrc": "2771:78:15",
																"nodeType": "YulFunctionCall",
																"src": "2771:78:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2763:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "2763:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2543:313:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2633:9:15",
														"nodeType": "YulTypedName",
														"src": "2633:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2645:6:15",
														"nodeType": "YulTypedName",
														"src": "2645:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2656:4:15",
														"nodeType": "YulTypedName",
														"src": "2656:4:15",
														"type": ""
													}
												],
												"src": "2543:313:15"
											},
											{
												"body": {
													"nativeSrc": "2907:32:15",
													"nodeType": "YulBlock",
													"src": "2907:32:15",
													"statements": [
														{
															"nativeSrc": "2917:16:15",
															"nodeType": "YulAssignment",
															"src": "2917:16:15",
															"value": {
																"name": "value",
																"nativeSrc": "2928:5:15",
																"nodeType": "YulIdentifier",
																"src": "2928:5:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2917:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "2917:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2862:77:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2889:5:15",
														"nodeType": "YulTypedName",
														"src": "2889:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2899:7:15",
														"nodeType": "YulTypedName",
														"src": "2899:7:15",
														"type": ""
													}
												],
												"src": "2862:77:15"
											},
											{
												"body": {
													"nativeSrc": "2988:79:15",
													"nodeType": "YulBlock",
													"src": "2988:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "3045:16:15",
																"nodeType": "YulBlock",
																"src": "3045:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3054:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3054:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3057:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3057:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3047:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3047:6:15"
																			},
																			"nativeSrc": "3047:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3047:12:15"
																		},
																		"nativeSrc": "3047:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3047:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3011:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "3011:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3036:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "3036:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3018:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "3018:17:15"
																				},
																				"nativeSrc": "3018:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3018:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3008:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "3008:2:15"
																		},
																		"nativeSrc": "3008:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3008:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3001:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3001:6:15"
																},
																"nativeSrc": "3001:43:15",
																"nodeType": "YulFunctionCall",
																"src": "3001:43:15"
															},
															"nativeSrc": "2998:63:15",
															"nodeType": "YulIf",
															"src": "2998:63:15"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2945:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2981:5:15",
														"nodeType": "YulTypedName",
														"src": "2981:5:15",
														"type": ""
													}
												],
												"src": "2945:122:15"
											},
											{
												"body": {
													"nativeSrc": "3125:87:15",
													"nodeType": "YulBlock",
													"src": "3125:87:15",
													"statements": [
														{
															"nativeSrc": "3135:29:15",
															"nodeType": "YulAssignment",
															"src": "3135:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3157:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3157:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3144:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "3144:12:15"
																},
																"nativeSrc": "3144:20:15",
																"nodeType": "YulFunctionCall",
																"src": "3144:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3135:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "3135:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3200:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "3200:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3173:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "3173:26:15"
																},
																"nativeSrc": "3173:33:15",
																"nodeType": "YulFunctionCall",
																"src": "3173:33:15"
															},
															"nativeSrc": "3173:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "3173:33:15"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3073:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3103:6:15",
														"nodeType": "YulTypedName",
														"src": "3103:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3111:3:15",
														"nodeType": "YulTypedName",
														"src": "3111:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3119:5:15",
														"nodeType": "YulTypedName",
														"src": "3119:5:15",
														"type": ""
													}
												],
												"src": "3073:139:15"
											},
											{
												"body": {
													"nativeSrc": "3284:263:15",
													"nodeType": "YulBlock",
													"src": "3284:263:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "3330:83:15",
																"nodeType": "YulBlock",
																"src": "3330:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3332:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "3332:77:15"
																			},
																			"nativeSrc": "3332:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3332:79:15"
																		},
																		"nativeSrc": "3332:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3332:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3305:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "3305:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3314:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3314:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3301:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3301:3:15"
																		},
																		"nativeSrc": "3301:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3301:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3326:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3326:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3297:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3297:3:15"
																},
																"nativeSrc": "3297:32:15",
																"nodeType": "YulFunctionCall",
																"src": "3297:32:15"
															},
															"nativeSrc": "3294:119:15",
															"nodeType": "YulIf",
															"src": "3294:119:15"
														},
														{
															"nativeSrc": "3423:117:15",
															"nodeType": "YulBlock",
															"src": "3423:117:15",
															"statements": [
																{
																	"nativeSrc": "3438:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3438:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3452:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3452:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3442:6:15",
																			"nodeType": "YulTypedName",
																			"src": "3442:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3467:63:15",
																	"nodeType": "YulAssignment",
																	"src": "3467:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3502:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "3502:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3513:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "3513:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3498:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3498:3:15"
																				},
																				"nativeSrc": "3498:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3498:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3522:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "3522:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3477:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "3477:20:15"
																		},
																		"nativeSrc": "3477:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3477:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3467:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "3467:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3218:329:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3254:9:15",
														"nodeType": "YulTypedName",
														"src": "3254:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3265:7:15",
														"nodeType": "YulTypedName",
														"src": "3265:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3277:6:15",
														"nodeType": "YulTypedName",
														"src": "3277:6:15",
														"type": ""
													}
												],
												"src": "3218:329:15"
											},
											{
												"body": {
													"nativeSrc": "3598:81:15",
													"nodeType": "YulBlock",
													"src": "3598:81:15",
													"statements": [
														{
															"nativeSrc": "3608:65:15",
															"nodeType": "YulAssignment",
															"src": "3608:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3623:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "3623:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3630:42:15",
																		"nodeType": "YulLiteral",
																		"src": "3630:42:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3619:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3619:3:15"
																},
																"nativeSrc": "3619:54:15",
																"nodeType": "YulFunctionCall",
																"src": "3619:54:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3608:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "3608:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3553:126:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3580:5:15",
														"nodeType": "YulTypedName",
														"src": "3580:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3590:7:15",
														"nodeType": "YulTypedName",
														"src": "3590:7:15",
														"type": ""
													}
												],
												"src": "3553:126:15"
											},
											{
												"body": {
													"nativeSrc": "3730:51:15",
													"nodeType": "YulBlock",
													"src": "3730:51:15",
													"statements": [
														{
															"nativeSrc": "3740:35:15",
															"nodeType": "YulAssignment",
															"src": "3740:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3769:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "3769:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3751:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "3751:17:15"
																},
																"nativeSrc": "3751:24:15",
																"nodeType": "YulFunctionCall",
																"src": "3751:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3740:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "3740:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3685:96:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3712:5:15",
														"nodeType": "YulTypedName",
														"src": "3712:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3722:7:15",
														"nodeType": "YulTypedName",
														"src": "3722:7:15",
														"type": ""
													}
												],
												"src": "3685:96:15"
											},
											{
												"body": {
													"nativeSrc": "3852:53:15",
													"nodeType": "YulBlock",
													"src": "3852:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3869:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3869:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3892:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "3892:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3874:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "3874:17:15"
																		},
																		"nativeSrc": "3874:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3874:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3862:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3862:6:15"
																},
																"nativeSrc": "3862:37:15",
																"nodeType": "YulFunctionCall",
																"src": "3862:37:15"
															},
															"nativeSrc": "3862:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "3862:37:15"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3787:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3840:5:15",
														"nodeType": "YulTypedName",
														"src": "3840:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3847:3:15",
														"nodeType": "YulTypedName",
														"src": "3847:3:15",
														"type": ""
													}
												],
												"src": "3787:118:15"
											},
											{
												"body": {
													"nativeSrc": "4009:124:15",
													"nodeType": "YulBlock",
													"src": "4009:124:15",
													"statements": [
														{
															"nativeSrc": "4019:26:15",
															"nodeType": "YulAssignment",
															"src": "4019:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4031:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "4031:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4042:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4042:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4027:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4027:3:15"
																},
																"nativeSrc": "4027:18:15",
																"nodeType": "YulFunctionCall",
																"src": "4027:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4019:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "4019:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4099:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4099:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4112:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4112:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4123:1:15",
																				"nodeType": "YulLiteral",
																				"src": "4123:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4108:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4108:3:15"
																		},
																		"nativeSrc": "4108:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4108:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4055:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "4055:43:15"
																},
																"nativeSrc": "4055:71:15",
																"nodeType": "YulFunctionCall",
																"src": "4055:71:15"
															},
															"nativeSrc": "4055:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "4055:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3911:222:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3981:9:15",
														"nodeType": "YulTypedName",
														"src": "3981:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3993:6:15",
														"nodeType": "YulTypedName",
														"src": "3993:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4004:4:15",
														"nodeType": "YulTypedName",
														"src": "4004:4:15",
														"type": ""
													}
												],
												"src": "3911:222:15"
											},
											{
												"body": {
													"nativeSrc": "4182:79:15",
													"nodeType": "YulBlock",
													"src": "4182:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "4239:16:15",
																"nodeType": "YulBlock",
																"src": "4239:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4248:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4248:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4251:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4251:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4241:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4241:6:15"
																			},
																			"nativeSrc": "4241:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4241:12:15"
																		},
																		"nativeSrc": "4241:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4241:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4205:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "4205:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4230:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "4230:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4212:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "4212:17:15"
																				},
																				"nativeSrc": "4212:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4212:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4202:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "4202:2:15"
																		},
																		"nativeSrc": "4202:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4202:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4195:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4195:6:15"
																},
																"nativeSrc": "4195:43:15",
																"nodeType": "YulFunctionCall",
																"src": "4195:43:15"
															},
															"nativeSrc": "4192:63:15",
															"nodeType": "YulIf",
															"src": "4192:63:15"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4139:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4175:5:15",
														"nodeType": "YulTypedName",
														"src": "4175:5:15",
														"type": ""
													}
												],
												"src": "4139:122:15"
											},
											{
												"body": {
													"nativeSrc": "4319:87:15",
													"nodeType": "YulBlock",
													"src": "4319:87:15",
													"statements": [
														{
															"nativeSrc": "4329:29:15",
															"nodeType": "YulAssignment",
															"src": "4329:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4351:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4351:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4338:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "4338:12:15"
																},
																"nativeSrc": "4338:20:15",
																"nodeType": "YulFunctionCall",
																"src": "4338:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4329:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "4329:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4394:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "4394:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4367:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "4367:26:15"
																},
																"nativeSrc": "4367:33:15",
																"nodeType": "YulFunctionCall",
																"src": "4367:33:15"
															},
															"nativeSrc": "4367:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "4367:33:15"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4267:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4297:6:15",
														"nodeType": "YulTypedName",
														"src": "4297:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4305:3:15",
														"nodeType": "YulTypedName",
														"src": "4305:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4313:5:15",
														"nodeType": "YulTypedName",
														"src": "4313:5:15",
														"type": ""
													}
												],
												"src": "4267:139:15"
											},
											{
												"body": {
													"nativeSrc": "4495:391:15",
													"nodeType": "YulBlock",
													"src": "4495:391:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "4541:83:15",
																"nodeType": "YulBlock",
																"src": "4541:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4543:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "4543:77:15"
																			},
																			"nativeSrc": "4543:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4543:79:15"
																		},
																		"nativeSrc": "4543:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4543:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4516:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "4516:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4525:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4525:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4512:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4512:3:15"
																		},
																		"nativeSrc": "4512:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4512:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4537:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4537:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4508:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4508:3:15"
																},
																"nativeSrc": "4508:32:15",
																"nodeType": "YulFunctionCall",
																"src": "4508:32:15"
															},
															"nativeSrc": "4505:119:15",
															"nodeType": "YulIf",
															"src": "4505:119:15"
														},
														{
															"nativeSrc": "4634:117:15",
															"nodeType": "YulBlock",
															"src": "4634:117:15",
															"statements": [
																{
																	"nativeSrc": "4649:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4649:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4663:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4663:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4653:6:15",
																			"nodeType": "YulTypedName",
																			"src": "4653:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4678:63:15",
																	"nodeType": "YulAssignment",
																	"src": "4678:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4713:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "4713:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4724:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "4724:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4709:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4709:3:15"
																				},
																				"nativeSrc": "4709:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4709:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4733:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "4733:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4688:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "4688:20:15"
																		},
																		"nativeSrc": "4688:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4688:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4678:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "4678:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4761:118:15",
															"nodeType": "YulBlock",
															"src": "4761:118:15",
															"statements": [
																{
																	"nativeSrc": "4776:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4776:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4790:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4790:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4780:6:15",
																			"nodeType": "YulTypedName",
																			"src": "4780:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4806:63:15",
																	"nodeType": "YulAssignment",
																	"src": "4806:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4841:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "4841:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4852:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "4852:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4837:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4837:3:15"
																				},
																				"nativeSrc": "4837:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4837:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4861:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "4861:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4816:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "4816:20:15"
																		},
																		"nativeSrc": "4816:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4816:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4806:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "4806:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4412:474:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4457:9:15",
														"nodeType": "YulTypedName",
														"src": "4457:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4468:7:15",
														"nodeType": "YulTypedName",
														"src": "4468:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4480:6:15",
														"nodeType": "YulTypedName",
														"src": "4480:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4488:6:15",
														"nodeType": "YulTypedName",
														"src": "4488:6:15",
														"type": ""
													}
												],
												"src": "4412:474:15"
											},
											{
												"body": {
													"nativeSrc": "4957:53:15",
													"nodeType": "YulBlock",
													"src": "4957:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4974:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "4974:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4997:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "4997:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4979:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "4979:17:15"
																		},
																		"nativeSrc": "4979:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4979:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4967:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4967:6:15"
																},
																"nativeSrc": "4967:37:15",
																"nodeType": "YulFunctionCall",
																"src": "4967:37:15"
															},
															"nativeSrc": "4967:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "4967:37:15"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4892:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4945:5:15",
														"nodeType": "YulTypedName",
														"src": "4945:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4952:3:15",
														"nodeType": "YulTypedName",
														"src": "4952:3:15",
														"type": ""
													}
												],
												"src": "4892:118:15"
											},
											{
												"body": {
													"nativeSrc": "5114:124:15",
													"nodeType": "YulBlock",
													"src": "5114:124:15",
													"statements": [
														{
															"nativeSrc": "5124:26:15",
															"nodeType": "YulAssignment",
															"src": "5124:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5136:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "5136:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5147:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5147:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5132:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5132:3:15"
																},
																"nativeSrc": "5132:18:15",
																"nodeType": "YulFunctionCall",
																"src": "5132:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5124:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "5124:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5204:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5204:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5217:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5217:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5228:1:15",
																				"nodeType": "YulLiteral",
																				"src": "5228:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5213:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5213:3:15"
																		},
																		"nativeSrc": "5213:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5213:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5160:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "5160:43:15"
																},
																"nativeSrc": "5160:71:15",
																"nodeType": "YulFunctionCall",
																"src": "5160:71:15"
															},
															"nativeSrc": "5160:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "5160:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5016:222:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5086:9:15",
														"nodeType": "YulTypedName",
														"src": "5086:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5098:6:15",
														"nodeType": "YulTypedName",
														"src": "5098:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5109:4:15",
														"nodeType": "YulTypedName",
														"src": "5109:4:15",
														"type": ""
													}
												],
												"src": "5016:222:15"
											},
											{
												"body": {
													"nativeSrc": "5344:519:15",
													"nodeType": "YulBlock",
													"src": "5344:519:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "5390:83:15",
																"nodeType": "YulBlock",
																"src": "5390:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5392:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "5392:77:15"
																			},
																			"nativeSrc": "5392:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5392:79:15"
																		},
																		"nativeSrc": "5392:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "5392:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5365:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "5365:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5374:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5374:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5361:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5361:3:15"
																		},
																		"nativeSrc": "5361:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5361:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5386:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5386:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5357:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5357:3:15"
																},
																"nativeSrc": "5357:32:15",
																"nodeType": "YulFunctionCall",
																"src": "5357:32:15"
															},
															"nativeSrc": "5354:119:15",
															"nodeType": "YulIf",
															"src": "5354:119:15"
														},
														{
															"nativeSrc": "5483:117:15",
															"nodeType": "YulBlock",
															"src": "5483:117:15",
															"statements": [
																{
																	"nativeSrc": "5498:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5498:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5512:1:15",
																		"nodeType": "YulLiteral",
																		"src": "5512:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5502:6:15",
																			"nodeType": "YulTypedName",
																			"src": "5502:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5527:63:15",
																	"nodeType": "YulAssignment",
																	"src": "5527:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5562:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "5562:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5573:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "5573:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5558:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5558:3:15"
																				},
																				"nativeSrc": "5558:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5558:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5582:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "5582:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5537:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "5537:20:15"
																		},
																		"nativeSrc": "5537:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5537:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5527:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "5527:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5610:118:15",
															"nodeType": "YulBlock",
															"src": "5610:118:15",
															"statements": [
																{
																	"nativeSrc": "5625:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5625:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5639:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5639:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5629:6:15",
																			"nodeType": "YulTypedName",
																			"src": "5629:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5655:63:15",
																	"nodeType": "YulAssignment",
																	"src": "5655:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5690:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "5690:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5701:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "5701:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5686:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5686:3:15"
																				},
																				"nativeSrc": "5686:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5686:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5710:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "5710:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5665:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "5665:20:15"
																		},
																		"nativeSrc": "5665:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5665:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5655:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "5655:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5738:118:15",
															"nodeType": "YulBlock",
															"src": "5738:118:15",
															"statements": [
																{
																	"nativeSrc": "5753:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5753:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5767:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5767:2:15",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5757:6:15",
																			"nodeType": "YulTypedName",
																			"src": "5757:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5783:63:15",
																	"nodeType": "YulAssignment",
																	"src": "5783:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5818:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "5818:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5829:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "5829:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5814:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5814:3:15"
																				},
																				"nativeSrc": "5814:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5814:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5838:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "5838:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5793:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "5793:20:15"
																		},
																		"nativeSrc": "5793:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5793:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5783:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "5783:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "5244:619:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5298:9:15",
														"nodeType": "YulTypedName",
														"src": "5298:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5309:7:15",
														"nodeType": "YulTypedName",
														"src": "5309:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5321:6:15",
														"nodeType": "YulTypedName",
														"src": "5321:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5329:6:15",
														"nodeType": "YulTypedName",
														"src": "5329:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5337:6:15",
														"nodeType": "YulTypedName",
														"src": "5337:6:15",
														"type": ""
													}
												],
												"src": "5244:619:15"
											},
											{
												"body": {
													"nativeSrc": "5935:263:15",
													"nodeType": "YulBlock",
													"src": "5935:263:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "5981:83:15",
																"nodeType": "YulBlock",
																"src": "5981:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5983:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "5983:77:15"
																			},
																			"nativeSrc": "5983:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5983:79:15"
																		},
																		"nativeSrc": "5983:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "5983:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5956:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "5956:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5965:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5965:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5952:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5952:3:15"
																		},
																		"nativeSrc": "5952:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5952:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5977:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5977:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5948:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5948:3:15"
																},
																"nativeSrc": "5948:32:15",
																"nodeType": "YulFunctionCall",
																"src": "5948:32:15"
															},
															"nativeSrc": "5945:119:15",
															"nodeType": "YulIf",
															"src": "5945:119:15"
														},
														{
															"nativeSrc": "6074:117:15",
															"nodeType": "YulBlock",
															"src": "6074:117:15",
															"statements": [
																{
																	"nativeSrc": "6089:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6089:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6103:1:15",
																		"nodeType": "YulLiteral",
																		"src": "6103:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6093:6:15",
																			"nodeType": "YulTypedName",
																			"src": "6093:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6118:63:15",
																	"nodeType": "YulAssignment",
																	"src": "6118:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6153:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "6153:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6164:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "6164:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6149:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "6149:3:15"
																				},
																				"nativeSrc": "6149:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "6149:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6173:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "6173:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6128:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "6128:20:15"
																		},
																		"nativeSrc": "6128:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6128:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6118:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "6118:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5869:329:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5905:9:15",
														"nodeType": "YulTypedName",
														"src": "5905:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5916:7:15",
														"nodeType": "YulTypedName",
														"src": "5916:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5928:6:15",
														"nodeType": "YulTypedName",
														"src": "5928:6:15",
														"type": ""
													}
												],
												"src": "5869:329:15"
											},
											{
												"body": {
													"nativeSrc": "6244:76:15",
													"nodeType": "YulBlock",
													"src": "6244:76:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "6298:16:15",
																"nodeType": "YulBlock",
																"src": "6298:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6307:1:15",
																					"nodeType": "YulLiteral",
																					"src": "6307:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6310:1:15",
																					"nodeType": "YulLiteral",
																					"src": "6310:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6300:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6300:6:15"
																			},
																			"nativeSrc": "6300:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6300:12:15"
																		},
																		"nativeSrc": "6300:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "6300:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6267:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "6267:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6289:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "6289:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "6274:14:15",
																					"nodeType": "YulIdentifier",
																					"src": "6274:14:15"
																				},
																				"nativeSrc": "6274:21:15",
																				"nodeType": "YulFunctionCall",
																				"src": "6274:21:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6264:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "6264:2:15"
																		},
																		"nativeSrc": "6264:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6264:32:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6257:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6257:6:15"
																},
																"nativeSrc": "6257:40:15",
																"nodeType": "YulFunctionCall",
																"src": "6257:40:15"
															},
															"nativeSrc": "6254:60:15",
															"nodeType": "YulIf",
															"src": "6254:60:15"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "6204:116:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6237:5:15",
														"nodeType": "YulTypedName",
														"src": "6237:5:15",
														"type": ""
													}
												],
												"src": "6204:116:15"
											},
											{
												"body": {
													"nativeSrc": "6375:84:15",
													"nodeType": "YulBlock",
													"src": "6375:84:15",
													"statements": [
														{
															"nativeSrc": "6385:29:15",
															"nodeType": "YulAssignment",
															"src": "6385:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6407:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6407:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6394:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "6394:12:15"
																},
																"nativeSrc": "6394:20:15",
																"nodeType": "YulFunctionCall",
																"src": "6394:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6385:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "6385:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6447:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "6447:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "6423:23:15",
																	"nodeType": "YulIdentifier",
																	"src": "6423:23:15"
																},
																"nativeSrc": "6423:30:15",
																"nodeType": "YulFunctionCall",
																"src": "6423:30:15"
															},
															"nativeSrc": "6423:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "6423:30:15"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "6326:133:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6353:6:15",
														"nodeType": "YulTypedName",
														"src": "6353:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6361:3:15",
														"nodeType": "YulTypedName",
														"src": "6361:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6369:5:15",
														"nodeType": "YulTypedName",
														"src": "6369:5:15",
														"type": ""
													}
												],
												"src": "6326:133:15"
											},
											{
												"body": {
													"nativeSrc": "6545:388:15",
													"nodeType": "YulBlock",
													"src": "6545:388:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "6591:83:15",
																"nodeType": "YulBlock",
																"src": "6591:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6593:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "6593:77:15"
																			},
																			"nativeSrc": "6593:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6593:79:15"
																		},
																		"nativeSrc": "6593:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "6593:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6566:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "6566:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6575:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6575:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6562:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6562:3:15"
																		},
																		"nativeSrc": "6562:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6562:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6587:2:15",
																		"nodeType": "YulLiteral",
																		"src": "6587:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6558:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6558:3:15"
																},
																"nativeSrc": "6558:32:15",
																"nodeType": "YulFunctionCall",
																"src": "6558:32:15"
															},
															"nativeSrc": "6555:119:15",
															"nodeType": "YulIf",
															"src": "6555:119:15"
														},
														{
															"nativeSrc": "6684:117:15",
															"nodeType": "YulBlock",
															"src": "6684:117:15",
															"statements": [
																{
																	"nativeSrc": "6699:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6699:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6713:1:15",
																		"nodeType": "YulLiteral",
																		"src": "6713:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6703:6:15",
																			"nodeType": "YulTypedName",
																			"src": "6703:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6728:63:15",
																	"nodeType": "YulAssignment",
																	"src": "6728:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6763:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "6763:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6774:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "6774:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6759:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "6759:3:15"
																				},
																				"nativeSrc": "6759:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "6759:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6783:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "6783:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6738:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "6738:20:15"
																		},
																		"nativeSrc": "6738:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6738:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6728:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "6728:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6811:115:15",
															"nodeType": "YulBlock",
															"src": "6811:115:15",
															"statements": [
																{
																	"nativeSrc": "6826:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6826:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6840:2:15",
																		"nodeType": "YulLiteral",
																		"src": "6840:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6830:6:15",
																			"nodeType": "YulTypedName",
																			"src": "6830:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6856:60:15",
																	"nodeType": "YulAssignment",
																	"src": "6856:60:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6888:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "6888:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6899:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "6899:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6884:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "6884:3:15"
																				},
																				"nativeSrc": "6884:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "6884:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6908:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "6908:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "6866:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "6866:17:15"
																		},
																		"nativeSrc": "6866:50:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6866:50:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6856:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "6856:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "6465:468:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6507:9:15",
														"nodeType": "YulTypedName",
														"src": "6507:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6518:7:15",
														"nodeType": "YulTypedName",
														"src": "6518:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6530:6:15",
														"nodeType": "YulTypedName",
														"src": "6530:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6538:6:15",
														"nodeType": "YulTypedName",
														"src": "6538:6:15",
														"type": ""
													}
												],
												"src": "6465:468:15"
											},
											{
												"body": {
													"nativeSrc": "7028:28:15",
													"nodeType": "YulBlock",
													"src": "7028:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7045:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7045:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7048:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7048:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7038:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7038:6:15"
																},
																"nativeSrc": "7038:12:15",
																"nodeType": "YulFunctionCall",
																"src": "7038:12:15"
															},
															"nativeSrc": "7038:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "7038:12:15"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "6939:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "6939:117:15"
											},
											{
												"body": {
													"nativeSrc": "7151:28:15",
													"nodeType": "YulBlock",
													"src": "7151:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7168:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7168:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7171:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7171:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7161:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7161:6:15"
																},
																"nativeSrc": "7161:12:15",
																"nodeType": "YulFunctionCall",
																"src": "7161:12:15"
															},
															"nativeSrc": "7161:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "7161:12:15"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "7062:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "7062:117:15"
											},
											{
												"body": {
													"nativeSrc": "7213:152:15",
													"nodeType": "YulBlock",
													"src": "7213:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7230:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7230:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7233:77:15",
																		"nodeType": "YulLiteral",
																		"src": "7233:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7223:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7223:6:15"
																},
																"nativeSrc": "7223:88:15",
																"nodeType": "YulFunctionCall",
																"src": "7223:88:15"
															},
															"nativeSrc": "7223:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "7223:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7327:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7327:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7330:4:15",
																		"nodeType": "YulLiteral",
																		"src": "7330:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7320:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7320:6:15"
																},
																"nativeSrc": "7320:15:15",
																"nodeType": "YulFunctionCall",
																"src": "7320:15:15"
															},
															"nativeSrc": "7320:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "7320:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7351:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7351:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7354:4:15",
																		"nodeType": "YulLiteral",
																		"src": "7354:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7344:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7344:6:15"
																},
																"nativeSrc": "7344:15:15",
																"nodeType": "YulFunctionCall",
																"src": "7344:15:15"
															},
															"nativeSrc": "7344:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "7344:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "7185:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "7185:180:15"
											},
											{
												"body": {
													"nativeSrc": "7414:238:15",
													"nodeType": "YulBlock",
													"src": "7414:238:15",
													"statements": [
														{
															"nativeSrc": "7424:58:15",
															"nodeType": "YulVariableDeclaration",
															"src": "7424:58:15",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7446:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7446:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "7476:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "7476:4:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "7454:21:15",
																			"nodeType": "YulIdentifier",
																			"src": "7454:21:15"
																		},
																		"nativeSrc": "7454:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7454:27:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7442:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7442:3:15"
																},
																"nativeSrc": "7442:40:15",
																"nodeType": "YulFunctionCall",
																"src": "7442:40:15"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "7428:10:15",
																	"nodeType": "YulTypedName",
																	"src": "7428:10:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7593:22:15",
																"nodeType": "YulBlock",
																"src": "7593:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7595:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "7595:16:15"
																			},
																			"nativeSrc": "7595:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7595:18:15"
																		},
																		"nativeSrc": "7595:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "7595:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7536:10:15",
																				"nodeType": "YulIdentifier",
																				"src": "7536:10:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7548:18:15",
																				"nodeType": "YulLiteral",
																				"src": "7548:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7533:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "7533:2:15"
																		},
																		"nativeSrc": "7533:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7533:34:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7572:10:15",
																				"nodeType": "YulIdentifier",
																				"src": "7572:10:15"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "7584:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "7584:6:15"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7569:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "7569:2:15"
																		},
																		"nativeSrc": "7569:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7569:22:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7530:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "7530:2:15"
																},
																"nativeSrc": "7530:62:15",
																"nodeType": "YulFunctionCall",
																"src": "7530:62:15"
															},
															"nativeSrc": "7527:88:15",
															"nodeType": "YulIf",
															"src": "7527:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7631:2:15",
																		"nodeType": "YulLiteral",
																		"src": "7631:2:15",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "7635:10:15",
																		"nodeType": "YulIdentifier",
																		"src": "7635:10:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7624:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7624:6:15"
																},
																"nativeSrc": "7624:22:15",
																"nodeType": "YulFunctionCall",
																"src": "7624:22:15"
															},
															"nativeSrc": "7624:22:15",
															"nodeType": "YulExpressionStatement",
															"src": "7624:22:15"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "7371:281:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7400:6:15",
														"nodeType": "YulTypedName",
														"src": "7400:6:15",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "7408:4:15",
														"nodeType": "YulTypedName",
														"src": "7408:4:15",
														"type": ""
													}
												],
												"src": "7371:281:15"
											},
											{
												"body": {
													"nativeSrc": "7699:88:15",
													"nodeType": "YulBlock",
													"src": "7699:88:15",
													"statements": [
														{
															"nativeSrc": "7709:30:15",
															"nodeType": "YulAssignment",
															"src": "7709:30:15",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "7719:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "7719:18:15"
																},
																"nativeSrc": "7719:20:15",
																"nodeType": "YulFunctionCall",
																"src": "7719:20:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "7709:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7709:6:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7768:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7768:6:15"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "7776:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "7776:4:15"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "7748:19:15",
																	"nodeType": "YulIdentifier",
																	"src": "7748:19:15"
																},
																"nativeSrc": "7748:33:15",
																"nodeType": "YulFunctionCall",
																"src": "7748:33:15"
															},
															"nativeSrc": "7748:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "7748:33:15"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "7658:129:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "7683:4:15",
														"nodeType": "YulTypedName",
														"src": "7683:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "7692:6:15",
														"nodeType": "YulTypedName",
														"src": "7692:6:15",
														"type": ""
													}
												],
												"src": "7658:129:15"
											},
											{
												"body": {
													"nativeSrc": "7859:241:15",
													"nodeType": "YulBlock",
													"src": "7859:241:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "7964:22:15",
																"nodeType": "YulBlock",
																"src": "7964:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7966:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "7966:16:15"
																			},
																			"nativeSrc": "7966:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7966:18:15"
																		},
																		"nativeSrc": "7966:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "7966:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7936:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7936:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7944:18:15",
																		"nodeType": "YulLiteral",
																		"src": "7944:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7933:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "7933:2:15"
																},
																"nativeSrc": "7933:30:15",
																"nodeType": "YulFunctionCall",
																"src": "7933:30:15"
															},
															"nativeSrc": "7930:56:15",
															"nodeType": "YulIf",
															"src": "7930:56:15"
														},
														{
															"nativeSrc": "7996:37:15",
															"nodeType": "YulAssignment",
															"src": "7996:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8026:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8026:6:15"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "8004:21:15",
																	"nodeType": "YulIdentifier",
																	"src": "8004:21:15"
																},
																"nativeSrc": "8004:29:15",
																"nodeType": "YulFunctionCall",
																"src": "8004:29:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7996:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "7996:4:15"
																}
															]
														},
														{
															"nativeSrc": "8070:23:15",
															"nodeType": "YulAssignment",
															"src": "8070:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "8082:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "8082:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8088:4:15",
																		"nodeType": "YulLiteral",
																		"src": "8088:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8078:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8078:3:15"
																},
																"nativeSrc": "8078:15:15",
																"nodeType": "YulFunctionCall",
																"src": "8078:15:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8070:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "8070:4:15"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "7793:307:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "7843:6:15",
														"nodeType": "YulTypedName",
														"src": "7843:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "7854:4:15",
														"nodeType": "YulTypedName",
														"src": "7854:4:15",
														"type": ""
													}
												],
												"src": "7793:307:15"
											},
											{
												"body": {
													"nativeSrc": "8170:84:15",
													"nodeType": "YulBlock",
													"src": "8170:84:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "8194:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "8194:3:15"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "8199:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "8199:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8204:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8204:6:15"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "8181:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "8181:12:15"
																},
																"nativeSrc": "8181:30:15",
																"nodeType": "YulFunctionCall",
																"src": "8181:30:15"
															},
															"nativeSrc": "8181:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "8181:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "8231:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "8231:3:15"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8236:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "8236:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8227:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8227:3:15"
																		},
																		"nativeSrc": "8227:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8227:16:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8245:1:15",
																		"nodeType": "YulLiteral",
																		"src": "8245:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8220:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8220:6:15"
																},
																"nativeSrc": "8220:27:15",
																"nodeType": "YulFunctionCall",
																"src": "8220:27:15"
															},
															"nativeSrc": "8220:27:15",
															"nodeType": "YulExpressionStatement",
															"src": "8220:27:15"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "8106:148:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8152:3:15",
														"nodeType": "YulTypedName",
														"src": "8152:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "8157:3:15",
														"nodeType": "YulTypedName",
														"src": "8157:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8162:6:15",
														"nodeType": "YulTypedName",
														"src": "8162:6:15",
														"type": ""
													}
												],
												"src": "8106:148:15"
											},
											{
												"body": {
													"nativeSrc": "8343:340:15",
													"nodeType": "YulBlock",
													"src": "8343:340:15",
													"statements": [
														{
															"nativeSrc": "8353:74:15",
															"nodeType": "YulAssignment",
															"src": "8353:74:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8419:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "8419:6:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "8378:40:15",
																			"nodeType": "YulIdentifier",
																			"src": "8378:40:15"
																		},
																		"nativeSrc": "8378:48:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8378:48:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "8362:15:15",
																	"nodeType": "YulIdentifier",
																	"src": "8362:15:15"
																},
																"nativeSrc": "8362:65:15",
																"nodeType": "YulFunctionCall",
																"src": "8362:65:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8353:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "8353:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8443:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "8443:5:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8450:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8450:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8436:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8436:6:15"
																},
																"nativeSrc": "8436:21:15",
																"nodeType": "YulFunctionCall",
																"src": "8436:21:15"
															},
															"nativeSrc": "8436:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "8436:21:15"
														},
														{
															"nativeSrc": "8466:27:15",
															"nodeType": "YulVariableDeclaration",
															"src": "8466:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8481:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "8481:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8488:4:15",
																		"nodeType": "YulLiteral",
																		"src": "8488:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8477:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8477:3:15"
																},
																"nativeSrc": "8477:16:15",
																"nodeType": "YulFunctionCall",
																"src": "8477:16:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "8470:3:15",
																	"nodeType": "YulTypedName",
																	"src": "8470:3:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8531:83:15",
																"nodeType": "YulBlock",
																"src": "8531:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "8533:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "8533:77:15"
																			},
																			"nativeSrc": "8533:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "8533:79:15"
																		},
																		"nativeSrc": "8533:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "8533:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "8512:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "8512:3:15"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8517:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "8517:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8508:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8508:3:15"
																		},
																		"nativeSrc": "8508:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8508:16:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8526:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "8526:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8505:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "8505:2:15"
																},
																"nativeSrc": "8505:25:15",
																"nodeType": "YulFunctionCall",
																"src": "8505:25:15"
															},
															"nativeSrc": "8502:112:15",
															"nodeType": "YulIf",
															"src": "8502:112:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8660:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "8660:3:15"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "8665:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "8665:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8670:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8670:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "8623:36:15",
																	"nodeType": "YulIdentifier",
																	"src": "8623:36:15"
																},
																"nativeSrc": "8623:54:15",
																"nodeType": "YulFunctionCall",
																"src": "8623:54:15"
															},
															"nativeSrc": "8623:54:15",
															"nodeType": "YulExpressionStatement",
															"src": "8623:54:15"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "8260:423:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8316:3:15",
														"nodeType": "YulTypedName",
														"src": "8316:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8321:6:15",
														"nodeType": "YulTypedName",
														"src": "8321:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8329:3:15",
														"nodeType": "YulTypedName",
														"src": "8329:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8337:5:15",
														"nodeType": "YulTypedName",
														"src": "8337:5:15",
														"type": ""
													}
												],
												"src": "8260:423:15"
											},
											{
												"body": {
													"nativeSrc": "8763:277:15",
													"nodeType": "YulBlock",
													"src": "8763:277:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "8812:83:15",
																"nodeType": "YulBlock",
																"src": "8812:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "8814:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "8814:77:15"
																			},
																			"nativeSrc": "8814:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "8814:79:15"
																		},
																		"nativeSrc": "8814:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "8814:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8791:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "8791:6:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8799:4:15",
																						"nodeType": "YulLiteral",
																						"src": "8799:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8787:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "8787:3:15"
																				},
																				"nativeSrc": "8787:17:15",
																				"nodeType": "YulFunctionCall",
																				"src": "8787:17:15"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "8806:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "8806:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8783:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8783:3:15"
																		},
																		"nativeSrc": "8783:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8783:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8776:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8776:6:15"
																},
																"nativeSrc": "8776:35:15",
																"nodeType": "YulFunctionCall",
																"src": "8776:35:15"
															},
															"nativeSrc": "8773:122:15",
															"nodeType": "YulIf",
															"src": "8773:122:15"
														},
														{
															"nativeSrc": "8904:34:15",
															"nodeType": "YulVariableDeclaration",
															"src": "8904:34:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8931:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8931:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8918:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "8918:12:15"
																},
																"nativeSrc": "8918:20:15",
																"nodeType": "YulFunctionCall",
																"src": "8918:20:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8908:6:15",
																	"nodeType": "YulTypedName",
																	"src": "8908:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8947:87:15",
															"nodeType": "YulAssignment",
															"src": "8947:87:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9007:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "9007:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9015:4:15",
																				"nodeType": "YulLiteral",
																				"src": "9015:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9003:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9003:3:15"
																		},
																		"nativeSrc": "9003:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9003:17:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9022:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "9022:6:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9030:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "9030:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "8956:46:15",
																	"nodeType": "YulIdentifier",
																	"src": "8956:46:15"
																},
																"nativeSrc": "8956:78:15",
																"nodeType": "YulFunctionCall",
																"src": "8956:78:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8947:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "8947:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "8702:338:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8741:6:15",
														"nodeType": "YulTypedName",
														"src": "8741:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8749:3:15",
														"nodeType": "YulTypedName",
														"src": "8749:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8757:5:15",
														"nodeType": "YulTypedName",
														"src": "8757:5:15",
														"type": ""
													}
												],
												"src": "8702:338:15"
											},
											{
												"body": {
													"nativeSrc": "9172:817:15",
													"nodeType": "YulBlock",
													"src": "9172:817:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "9219:83:15",
																"nodeType": "YulBlock",
																"src": "9219:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9221:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "9221:77:15"
																			},
																			"nativeSrc": "9221:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "9221:79:15"
																		},
																		"nativeSrc": "9221:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "9221:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9193:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "9193:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9202:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9202:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9189:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9189:3:15"
																		},
																		"nativeSrc": "9189:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9189:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9214:3:15",
																		"nodeType": "YulLiteral",
																		"src": "9214:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9185:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9185:3:15"
																},
																"nativeSrc": "9185:33:15",
																"nodeType": "YulFunctionCall",
																"src": "9185:33:15"
															},
															"nativeSrc": "9182:120:15",
															"nodeType": "YulIf",
															"src": "9182:120:15"
														},
														{
															"nativeSrc": "9312:117:15",
															"nodeType": "YulBlock",
															"src": "9312:117:15",
															"statements": [
																{
																	"nativeSrc": "9327:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9327:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9341:1:15",
																		"nodeType": "YulLiteral",
																		"src": "9341:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9331:6:15",
																			"nodeType": "YulTypedName",
																			"src": "9331:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9356:63:15",
																	"nodeType": "YulAssignment",
																	"src": "9356:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9391:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "9391:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9402:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "9402:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9387:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "9387:3:15"
																				},
																				"nativeSrc": "9387:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "9387:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9411:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "9411:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9366:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "9366:20:15"
																		},
																		"nativeSrc": "9366:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9366:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9356:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "9356:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9439:118:15",
															"nodeType": "YulBlock",
															"src": "9439:118:15",
															"statements": [
																{
																	"nativeSrc": "9454:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9454:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9468:2:15",
																		"nodeType": "YulLiteral",
																		"src": "9468:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9458:6:15",
																			"nodeType": "YulTypedName",
																			"src": "9458:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9484:63:15",
																	"nodeType": "YulAssignment",
																	"src": "9484:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9519:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "9519:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9530:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "9530:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9515:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "9515:3:15"
																				},
																				"nativeSrc": "9515:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "9515:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9539:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "9539:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9494:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "9494:20:15"
																		},
																		"nativeSrc": "9494:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9494:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9484:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "9484:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9567:118:15",
															"nodeType": "YulBlock",
															"src": "9567:118:15",
															"statements": [
																{
																	"nativeSrc": "9582:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9582:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9596:2:15",
																		"nodeType": "YulLiteral",
																		"src": "9596:2:15",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9586:6:15",
																			"nodeType": "YulTypedName",
																			"src": "9586:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9612:63:15",
																	"nodeType": "YulAssignment",
																	"src": "9612:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9647:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "9647:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9658:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "9658:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9643:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "9643:3:15"
																				},
																				"nativeSrc": "9643:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "9643:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9667:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "9667:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9622:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "9622:20:15"
																		},
																		"nativeSrc": "9622:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9622:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "9612:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "9612:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9695:287:15",
															"nodeType": "YulBlock",
															"src": "9695:287:15",
															"statements": [
																{
																	"nativeSrc": "9710:46:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9710:46:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9741:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "9741:9:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9752:2:15",
																						"nodeType": "YulLiteral",
																						"src": "9752:2:15",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9737:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "9737:3:15"
																				},
																				"nativeSrc": "9737:18:15",
																				"nodeType": "YulFunctionCall",
																				"src": "9737:18:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9724:12:15",
																			"nodeType": "YulIdentifier",
																			"src": "9724:12:15"
																		},
																		"nativeSrc": "9724:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9724:32:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9714:6:15",
																			"nodeType": "YulTypedName",
																			"src": "9714:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9803:83:15",
																		"nodeType": "YulBlock",
																		"src": "9803:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9805:77:15",
																						"nodeType": "YulIdentifier",
																						"src": "9805:77:15"
																					},
																					"nativeSrc": "9805:79:15",
																					"nodeType": "YulFunctionCall",
																					"src": "9805:79:15"
																				},
																				"nativeSrc": "9805:79:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "9805:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9775:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "9775:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9783:18:15",
																				"nodeType": "YulLiteral",
																				"src": "9783:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9772:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "9772:2:15"
																		},
																		"nativeSrc": "9772:30:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9772:30:15"
																	},
																	"nativeSrc": "9769:117:15",
																	"nodeType": "YulIf",
																	"src": "9769:117:15"
																},
																{
																	"nativeSrc": "9900:72:15",
																	"nodeType": "YulAssignment",
																	"src": "9900:72:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9944:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "9944:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9955:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "9955:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9940:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "9940:3:15"
																				},
																				"nativeSrc": "9940:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "9940:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9964:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "9964:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "9910:29:15",
																			"nodeType": "YulIdentifier",
																			"src": "9910:29:15"
																		},
																		"nativeSrc": "9910:62:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9910:62:15"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "9900:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "9900:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "9046:943:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9118:9:15",
														"nodeType": "YulTypedName",
														"src": "9118:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9129:7:15",
														"nodeType": "YulTypedName",
														"src": "9129:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9141:6:15",
														"nodeType": "YulTypedName",
														"src": "9141:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9149:6:15",
														"nodeType": "YulTypedName",
														"src": "9149:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9157:6:15",
														"nodeType": "YulTypedName",
														"src": "9157:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9165:6:15",
														"nodeType": "YulTypedName",
														"src": "9165:6:15",
														"type": ""
													}
												],
												"src": "9046:943:15"
											},
											{
												"body": {
													"nativeSrc": "10078:391:15",
													"nodeType": "YulBlock",
													"src": "10078:391:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "10124:83:15",
																"nodeType": "YulBlock",
																"src": "10124:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10126:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "10126:77:15"
																			},
																			"nativeSrc": "10126:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "10126:79:15"
																		},
																		"nativeSrc": "10126:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "10126:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10099:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "10099:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10108:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "10108:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10095:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10095:3:15"
																		},
																		"nativeSrc": "10095:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10095:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10120:2:15",
																		"nodeType": "YulLiteral",
																		"src": "10120:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10091:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10091:3:15"
																},
																"nativeSrc": "10091:32:15",
																"nodeType": "YulFunctionCall",
																"src": "10091:32:15"
															},
															"nativeSrc": "10088:119:15",
															"nodeType": "YulIf",
															"src": "10088:119:15"
														},
														{
															"nativeSrc": "10217:117:15",
															"nodeType": "YulBlock",
															"src": "10217:117:15",
															"statements": [
																{
																	"nativeSrc": "10232:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10232:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10246:1:15",
																		"nodeType": "YulLiteral",
																		"src": "10246:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10236:6:15",
																			"nodeType": "YulTypedName",
																			"src": "10236:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10261:63:15",
																	"nodeType": "YulAssignment",
																	"src": "10261:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10296:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "10296:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10307:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "10307:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10292:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "10292:3:15"
																				},
																				"nativeSrc": "10292:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10292:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10316:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "10316:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10271:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "10271:20:15"
																		},
																		"nativeSrc": "10271:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10271:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10261:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "10261:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10344:118:15",
															"nodeType": "YulBlock",
															"src": "10344:118:15",
															"statements": [
																{
																	"nativeSrc": "10359:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10359:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10373:2:15",
																		"nodeType": "YulLiteral",
																		"src": "10373:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10363:6:15",
																			"nodeType": "YulTypedName",
																			"src": "10363:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10389:63:15",
																	"nodeType": "YulAssignment",
																	"src": "10389:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10424:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "10424:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10435:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "10435:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10420:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "10420:3:15"
																				},
																				"nativeSrc": "10420:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10420:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10444:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "10444:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10399:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "10399:20:15"
																		},
																		"nativeSrc": "10399:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10399:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10389:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "10389:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "9995:474:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10040:9:15",
														"nodeType": "YulTypedName",
														"src": "10040:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10051:7:15",
														"nodeType": "YulTypedName",
														"src": "10051:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10063:6:15",
														"nodeType": "YulTypedName",
														"src": "10063:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10071:6:15",
														"nodeType": "YulTypedName",
														"src": "10071:6:15",
														"type": ""
													}
												],
												"src": "9995:474:15"
											},
											{
												"body": {
													"nativeSrc": "10503:152:15",
													"nodeType": "YulBlock",
													"src": "10503:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10520:1:15",
																		"nodeType": "YulLiteral",
																		"src": "10520:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10523:77:15",
																		"nodeType": "YulLiteral",
																		"src": "10523:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10513:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10513:6:15"
																},
																"nativeSrc": "10513:88:15",
																"nodeType": "YulFunctionCall",
																"src": "10513:88:15"
															},
															"nativeSrc": "10513:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "10513:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10617:1:15",
																		"nodeType": "YulLiteral",
																		"src": "10617:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10620:4:15",
																		"nodeType": "YulLiteral",
																		"src": "10620:4:15",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10610:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10610:6:15"
																},
																"nativeSrc": "10610:15:15",
																"nodeType": "YulFunctionCall",
																"src": "10610:15:15"
															},
															"nativeSrc": "10610:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "10610:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10641:1:15",
																		"nodeType": "YulLiteral",
																		"src": "10641:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10644:4:15",
																		"nodeType": "YulLiteral",
																		"src": "10644:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10634:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10634:6:15"
																},
																"nativeSrc": "10634:15:15",
																"nodeType": "YulFunctionCall",
																"src": "10634:15:15"
															},
															"nativeSrc": "10634:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "10634:15:15"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "10475:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "10475:180:15"
											},
											{
												"body": {
													"nativeSrc": "10712:269:15",
													"nodeType": "YulBlock",
													"src": "10712:269:15",
													"statements": [
														{
															"nativeSrc": "10722:22:15",
															"nodeType": "YulAssignment",
															"src": "10722:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10736:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "10736:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10742:1:15",
																		"nodeType": "YulLiteral",
																		"src": "10742:1:15",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10732:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10732:3:15"
																},
																"nativeSrc": "10732:12:15",
																"nodeType": "YulFunctionCall",
																"src": "10732:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "10722:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10722:6:15"
																}
															]
														},
														{
															"nativeSrc": "10753:38:15",
															"nodeType": "YulVariableDeclaration",
															"src": "10753:38:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10783:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "10783:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10789:1:15",
																		"nodeType": "YulLiteral",
																		"src": "10789:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10779:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10779:3:15"
																},
																"nativeSrc": "10779:12:15",
																"nodeType": "YulFunctionCall",
																"src": "10779:12:15"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "10757:18:15",
																	"nodeType": "YulTypedName",
																	"src": "10757:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10830:51:15",
																"nodeType": "YulBlock",
																"src": "10830:51:15",
																"statements": [
																	{
																		"nativeSrc": "10844:27:15",
																		"nodeType": "YulAssignment",
																		"src": "10844:27:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "10858:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "10858:6:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10866:4:15",
																					"nodeType": "YulLiteral",
																					"src": "10866:4:15",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "10854:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "10854:3:15"
																			},
																			"nativeSrc": "10854:17:15",
																			"nodeType": "YulFunctionCall",
																			"src": "10854:17:15"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "10844:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "10844:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10810:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "10810:18:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10803:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10803:6:15"
																},
																"nativeSrc": "10803:26:15",
																"nodeType": "YulFunctionCall",
																"src": "10803:26:15"
															},
															"nativeSrc": "10800:81:15",
															"nodeType": "YulIf",
															"src": "10800:81:15"
														},
														{
															"body": {
																"nativeSrc": "10933:42:15",
																"nodeType": "YulBlock",
																"src": "10933:42:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "10947:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "10947:16:15"
																			},
																			"nativeSrc": "10947:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "10947:18:15"
																		},
																		"nativeSrc": "10947:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "10947:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10897:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "10897:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10920:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "10920:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10928:2:15",
																				"nodeType": "YulLiteral",
																				"src": "10928:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "10917:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "10917:2:15"
																		},
																		"nativeSrc": "10917:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10917:14:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "10894:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "10894:2:15"
																},
																"nativeSrc": "10894:38:15",
																"nodeType": "YulFunctionCall",
																"src": "10894:38:15"
															},
															"nativeSrc": "10891:84:15",
															"nodeType": "YulIf",
															"src": "10891:84:15"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "10661:320:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "10696:4:15",
														"nodeType": "YulTypedName",
														"src": "10696:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "10705:6:15",
														"nodeType": "YulTypedName",
														"src": "10705:6:15",
														"type": ""
													}
												],
												"src": "10661:320:15"
											},
											{
												"body": {
													"nativeSrc": "11141:288:15",
													"nodeType": "YulBlock",
													"src": "11141:288:15",
													"statements": [
														{
															"nativeSrc": "11151:26:15",
															"nodeType": "YulAssignment",
															"src": "11151:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11163:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "11163:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11174:2:15",
																		"nodeType": "YulLiteral",
																		"src": "11174:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11159:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11159:3:15"
																},
																"nativeSrc": "11159:18:15",
																"nodeType": "YulFunctionCall",
																"src": "11159:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11151:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "11151:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11231:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "11231:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11244:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "11244:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11255:1:15",
																				"nodeType": "YulLiteral",
																				"src": "11255:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11240:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11240:3:15"
																		},
																		"nativeSrc": "11240:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11240:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11187:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "11187:43:15"
																},
																"nativeSrc": "11187:71:15",
																"nodeType": "YulFunctionCall",
																"src": "11187:71:15"
															},
															"nativeSrc": "11187:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "11187:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11312:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "11312:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11325:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "11325:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11336:2:15",
																				"nodeType": "YulLiteral",
																				"src": "11336:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11321:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11321:3:15"
																		},
																		"nativeSrc": "11321:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11321:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11268:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "11268:43:15"
																},
																"nativeSrc": "11268:72:15",
																"nodeType": "YulFunctionCall",
																"src": "11268:72:15"
															},
															"nativeSrc": "11268:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "11268:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11394:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "11394:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11407:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "11407:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11418:2:15",
																				"nodeType": "YulLiteral",
																				"src": "11418:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11403:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11403:3:15"
																		},
																		"nativeSrc": "11403:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11403:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11350:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "11350:43:15"
																},
																"nativeSrc": "11350:72:15",
																"nodeType": "YulFunctionCall",
																"src": "11350:72:15"
															},
															"nativeSrc": "11350:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "11350:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "10987:442:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11097:9:15",
														"nodeType": "YulTypedName",
														"src": "11097:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11109:6:15",
														"nodeType": "YulTypedName",
														"src": "11109:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11117:6:15",
														"nodeType": "YulTypedName",
														"src": "11117:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11125:6:15",
														"nodeType": "YulTypedName",
														"src": "11125:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11136:4:15",
														"nodeType": "YulTypedName",
														"src": "11136:4:15",
														"type": ""
													}
												],
												"src": "10987:442:15"
											},
											{
												"body": {
													"nativeSrc": "11561:206:15",
													"nodeType": "YulBlock",
													"src": "11561:206:15",
													"statements": [
														{
															"nativeSrc": "11571:26:15",
															"nodeType": "YulAssignment",
															"src": "11571:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11583:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "11583:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11594:2:15",
																		"nodeType": "YulLiteral",
																		"src": "11594:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11579:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11579:3:15"
																},
																"nativeSrc": "11579:18:15",
																"nodeType": "YulFunctionCall",
																"src": "11579:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11571:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "11571:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11651:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "11651:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11664:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "11664:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11675:1:15",
																				"nodeType": "YulLiteral",
																				"src": "11675:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11660:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11660:3:15"
																		},
																		"nativeSrc": "11660:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11660:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11607:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "11607:43:15"
																},
																"nativeSrc": "11607:71:15",
																"nodeType": "YulFunctionCall",
																"src": "11607:71:15"
															},
															"nativeSrc": "11607:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "11607:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11732:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "11732:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11745:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "11745:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11756:2:15",
																				"nodeType": "YulLiteral",
																				"src": "11756:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11741:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11741:3:15"
																		},
																		"nativeSrc": "11741:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11741:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11688:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "11688:43:15"
																},
																"nativeSrc": "11688:72:15",
																"nodeType": "YulFunctionCall",
																"src": "11688:72:15"
															},
															"nativeSrc": "11688:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "11688:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "11435:332:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11525:9:15",
														"nodeType": "YulTypedName",
														"src": "11525:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11537:6:15",
														"nodeType": "YulTypedName",
														"src": "11537:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11545:6:15",
														"nodeType": "YulTypedName",
														"src": "11545:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11556:4:15",
														"nodeType": "YulTypedName",
														"src": "11556:4:15",
														"type": ""
													}
												],
												"src": "11435:332:15"
											},
											{
												"body": {
													"nativeSrc": "11801:152:15",
													"nodeType": "YulBlock",
													"src": "11801:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11818:1:15",
																		"nodeType": "YulLiteral",
																		"src": "11818:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11821:77:15",
																		"nodeType": "YulLiteral",
																		"src": "11821:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11811:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11811:6:15"
																},
																"nativeSrc": "11811:88:15",
																"nodeType": "YulFunctionCall",
																"src": "11811:88:15"
															},
															"nativeSrc": "11811:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "11811:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11915:1:15",
																		"nodeType": "YulLiteral",
																		"src": "11915:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11918:4:15",
																		"nodeType": "YulLiteral",
																		"src": "11918:4:15",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11908:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11908:6:15"
																},
																"nativeSrc": "11908:15:15",
																"nodeType": "YulFunctionCall",
																"src": "11908:15:15"
															},
															"nativeSrc": "11908:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "11908:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11939:1:15",
																		"nodeType": "YulLiteral",
																		"src": "11939:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11942:4:15",
																		"nodeType": "YulLiteral",
																		"src": "11942:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11932:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11932:6:15"
																},
																"nativeSrc": "11932:15:15",
																"nodeType": "YulFunctionCall",
																"src": "11932:15:15"
															},
															"nativeSrc": "11932:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "11932:15:15"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "11773:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "11773:180:15"
											},
											{
												"body": {
													"nativeSrc": "11987:152:15",
													"nodeType": "YulBlock",
													"src": "11987:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12004:1:15",
																		"nodeType": "YulLiteral",
																		"src": "12004:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12007:77:15",
																		"nodeType": "YulLiteral",
																		"src": "12007:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11997:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11997:6:15"
																},
																"nativeSrc": "11997:88:15",
																"nodeType": "YulFunctionCall",
																"src": "11997:88:15"
															},
															"nativeSrc": "11997:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "11997:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12101:1:15",
																		"nodeType": "YulLiteral",
																		"src": "12101:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12104:4:15",
																		"nodeType": "YulLiteral",
																		"src": "12104:4:15",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12094:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12094:6:15"
																},
																"nativeSrc": "12094:15:15",
																"nodeType": "YulFunctionCall",
																"src": "12094:15:15"
															},
															"nativeSrc": "12094:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "12094:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12125:1:15",
																		"nodeType": "YulLiteral",
																		"src": "12125:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12128:4:15",
																		"nodeType": "YulLiteral",
																		"src": "12128:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12118:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12118:6:15"
																},
																"nativeSrc": "12118:15:15",
																"nodeType": "YulFunctionCall",
																"src": "12118:15:15"
															},
															"nativeSrc": "12118:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "12118:15:15"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "11959:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "11959:180:15"
											},
											{
												"body": {
													"nativeSrc": "12189:147:15",
													"nodeType": "YulBlock",
													"src": "12189:147:15",
													"statements": [
														{
															"nativeSrc": "12199:25:15",
															"nodeType": "YulAssignment",
															"src": "12199:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12222:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "12222:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12204:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "12204:17:15"
																},
																"nativeSrc": "12204:20:15",
																"nodeType": "YulFunctionCall",
																"src": "12204:20:15"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12199:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "12199:1:15"
																}
															]
														},
														{
															"nativeSrc": "12233:25:15",
															"nodeType": "YulAssignment",
															"src": "12233:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12256:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "12256:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12238:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "12238:17:15"
																},
																"nativeSrc": "12238:20:15",
																"nodeType": "YulFunctionCall",
																"src": "12238:20:15"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12233:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "12233:1:15"
																}
															]
														},
														{
															"nativeSrc": "12267:16:15",
															"nodeType": "YulAssignment",
															"src": "12267:16:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12278:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "12278:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12281:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "12281:1:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12274:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12274:3:15"
																},
																"nativeSrc": "12274:9:15",
																"nodeType": "YulFunctionCall",
																"src": "12274:9:15"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "12267:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12267:3:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12307:22:15",
																"nodeType": "YulBlock",
																"src": "12307:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12309:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "12309:16:15"
																			},
																			"nativeSrc": "12309:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "12309:18:15"
																		},
																		"nativeSrc": "12309:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "12309:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12299:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "12299:1:15"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "12302:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "12302:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12296:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "12296:2:15"
																},
																"nativeSrc": "12296:10:15",
																"nodeType": "YulFunctionCall",
																"src": "12296:10:15"
															},
															"nativeSrc": "12293:36:15",
															"nodeType": "YulIf",
															"src": "12293:36:15"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "12145:191:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12176:1:15",
														"nodeType": "YulTypedName",
														"src": "12176:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12179:1:15",
														"nodeType": "YulTypedName",
														"src": "12179:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "12185:3:15",
														"nodeType": "YulTypedName",
														"src": "12185:3:15",
														"type": ""
													}
												],
												"src": "12145:191:15"
											},
											{
												"body": {
													"nativeSrc": "12389:32:15",
													"nodeType": "YulBlock",
													"src": "12389:32:15",
													"statements": [
														{
															"nativeSrc": "12399:16:15",
															"nodeType": "YulAssignment",
															"src": "12399:16:15",
															"value": {
																"name": "value",
																"nativeSrc": "12410:5:15",
																"nodeType": "YulIdentifier",
																"src": "12410:5:15"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "12399:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "12399:7:15"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint256",
												"nativeSrc": "12342:79:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12371:5:15",
														"nodeType": "YulTypedName",
														"src": "12371:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "12381:7:15",
														"nodeType": "YulTypedName",
														"src": "12381:7:15",
														"type": ""
													}
												],
												"src": "12342:79:15"
											},
											{
												"body": {
													"nativeSrc": "12510:74:15",
													"nodeType": "YulBlock",
													"src": "12510:74:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12527:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "12527:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12570:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "12570:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "12552:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "12552:17:15"
																				},
																				"nativeSrc": "12552:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "12552:24:15"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_uint256",
																			"nativeSrc": "12532:19:15",
																			"nodeType": "YulIdentifier",
																			"src": "12532:19:15"
																		},
																		"nativeSrc": "12532:45:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12532:45:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12520:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12520:6:15"
																},
																"nativeSrc": "12520:58:15",
																"nodeType": "YulFunctionCall",
																"src": "12520:58:15"
															},
															"nativeSrc": "12520:58:15",
															"nodeType": "YulExpressionStatement",
															"src": "12520:58:15"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
												"nativeSrc": "12427:157:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12498:5:15",
														"nodeType": "YulTypedName",
														"src": "12498:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12505:3:15",
														"nodeType": "YulTypedName",
														"src": "12505:3:15",
														"type": ""
													}
												],
												"src": "12427:157:15"
											},
											{
												"body": {
													"nativeSrc": "12632:52:15",
													"nodeType": "YulBlock",
													"src": "12632:52:15",
													"statements": [
														{
															"nativeSrc": "12642:35:15",
															"nodeType": "YulAssignment",
															"src": "12642:35:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12667:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12667:2:15",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "12671:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "12671:5:15"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "12663:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12663:3:15"
																},
																"nativeSrc": "12663:14:15",
																"nodeType": "YulFunctionCall",
																"src": "12663:14:15"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "12642:8:15",
																	"nodeType": "YulIdentifier",
																	"src": "12642:8:15"
																}
															]
														}
													]
												},
												"name": "shift_left_96",
												"nativeSrc": "12590:94:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12613:5:15",
														"nodeType": "YulTypedName",
														"src": "12613:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "12623:8:15",
														"nodeType": "YulTypedName",
														"src": "12623:8:15",
														"type": ""
													}
												],
												"src": "12590:94:15"
											},
											{
												"body": {
													"nativeSrc": "12737:47:15",
													"nodeType": "YulBlock",
													"src": "12737:47:15",
													"statements": [
														{
															"nativeSrc": "12747:31:15",
															"nodeType": "YulAssignment",
															"src": "12747:31:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12772:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "12772:5:15"
																	}
																],
																"functionName": {
																	"name": "shift_left_96",
																	"nativeSrc": "12758:13:15",
																	"nodeType": "YulIdentifier",
																	"src": "12758:13:15"
																},
																"nativeSrc": "12758:20:15",
																"nodeType": "YulFunctionCall",
																"src": "12758:20:15"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "12747:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "12747:7:15"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint160",
												"nativeSrc": "12690:94:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12719:5:15",
														"nodeType": "YulTypedName",
														"src": "12719:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "12729:7:15",
														"nodeType": "YulTypedName",
														"src": "12729:7:15",
														"type": ""
													}
												],
												"src": "12690:94:15"
											},
											{
												"body": {
													"nativeSrc": "12837:53:15",
													"nodeType": "YulBlock",
													"src": "12837:53:15",
													"statements": [
														{
															"nativeSrc": "12847:37:15",
															"nodeType": "YulAssignment",
															"src": "12847:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12878:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "12878:5:15"
																	}
																],
																"functionName": {
																	"name": "leftAlign_t_uint160",
																	"nativeSrc": "12858:19:15",
																	"nodeType": "YulIdentifier",
																	"src": "12858:19:15"
																},
																"nativeSrc": "12858:26:15",
																"nodeType": "YulFunctionCall",
																"src": "12858:26:15"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "12847:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "12847:7:15"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_address",
												"nativeSrc": "12790:100:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12819:5:15",
														"nodeType": "YulTypedName",
														"src": "12819:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "12829:7:15",
														"nodeType": "YulTypedName",
														"src": "12829:7:15",
														"type": ""
													}
												],
												"src": "12790:100:15"
											},
											{
												"body": {
													"nativeSrc": "12979:74:15",
													"nodeType": "YulBlock",
													"src": "12979:74:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12996:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "12996:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13039:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "13039:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "13021:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "13021:17:15"
																				},
																				"nativeSrc": "13021:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "13021:24:15"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_address",
																			"nativeSrc": "13001:19:15",
																			"nodeType": "YulIdentifier",
																			"src": "13001:19:15"
																		},
																		"nativeSrc": "13001:45:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13001:45:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12989:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12989:6:15"
																},
																"nativeSrc": "12989:58:15",
																"nodeType": "YulFunctionCall",
																"src": "12989:58:15"
															},
															"nativeSrc": "12989:58:15",
															"nodeType": "YulExpressionStatement",
															"src": "12989:58:15"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
												"nativeSrc": "12896:157:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12967:5:15",
														"nodeType": "YulTypedName",
														"src": "12967:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12974:3:15",
														"nodeType": "YulTypedName",
														"src": "12974:3:15",
														"type": ""
													}
												],
												"src": "12896:157:15"
											},
											{
												"body": {
													"nativeSrc": "13231:366:15",
													"nodeType": "YulBlock",
													"src": "13231:366:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13304:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "13304:6:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "13313:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "13313:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
																	"nativeSrc": "13242:61:15",
																	"nodeType": "YulIdentifier",
																	"src": "13242:61:15"
																},
																"nativeSrc": "13242:75:15",
																"nodeType": "YulFunctionCall",
																"src": "13242:75:15"
															},
															"nativeSrc": "13242:75:15",
															"nodeType": "YulExpressionStatement",
															"src": "13242:75:15"
														},
														{
															"nativeSrc": "13326:19:15",
															"nodeType": "YulAssignment",
															"src": "13326:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13337:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "13337:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13342:2:15",
																		"nodeType": "YulLiteral",
																		"src": "13342:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13333:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13333:3:15"
																},
																"nativeSrc": "13333:12:15",
																"nodeType": "YulFunctionCall",
																"src": "13333:12:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13326:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13326:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13417:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "13417:6:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "13426:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "13426:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
																	"nativeSrc": "13355:61:15",
																	"nodeType": "YulIdentifier",
																	"src": "13355:61:15"
																},
																"nativeSrc": "13355:75:15",
																"nodeType": "YulFunctionCall",
																"src": "13355:75:15"
															},
															"nativeSrc": "13355:75:15",
															"nodeType": "YulExpressionStatement",
															"src": "13355:75:15"
														},
														{
															"nativeSrc": "13439:19:15",
															"nodeType": "YulAssignment",
															"src": "13439:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13450:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "13450:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13455:2:15",
																		"nodeType": "YulLiteral",
																		"src": "13455:2:15",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13446:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13446:3:15"
																},
																"nativeSrc": "13446:12:15",
																"nodeType": "YulFunctionCall",
																"src": "13446:12:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13439:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13439:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13530:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "13530:6:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "13539:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "13539:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
																	"nativeSrc": "13468:61:15",
																	"nodeType": "YulIdentifier",
																	"src": "13468:61:15"
																},
																"nativeSrc": "13468:75:15",
																"nodeType": "YulFunctionCall",
																"src": "13468:75:15"
															},
															"nativeSrc": "13468:75:15",
															"nodeType": "YulExpressionStatement",
															"src": "13468:75:15"
														},
														{
															"nativeSrc": "13552:19:15",
															"nodeType": "YulAssignment",
															"src": "13552:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13563:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "13563:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13568:2:15",
																		"nodeType": "YulLiteral",
																		"src": "13568:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13559:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13559:3:15"
																},
																"nativeSrc": "13559:12:15",
																"nodeType": "YulFunctionCall",
																"src": "13559:12:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13552:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13552:3:15"
																}
															]
														},
														{
															"nativeSrc": "13581:10:15",
															"nodeType": "YulAssignment",
															"src": "13581:10:15",
															"value": {
																"name": "pos",
																"nativeSrc": "13588:3:15",
																"nodeType": "YulIdentifier",
																"src": "13588:3:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13581:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13581:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "13059:538:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13194:3:15",
														"nodeType": "YulTypedName",
														"src": "13194:3:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13200:6:15",
														"nodeType": "YulTypedName",
														"src": "13200:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13208:6:15",
														"nodeType": "YulTypedName",
														"src": "13208:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13216:6:15",
														"nodeType": "YulTypedName",
														"src": "13216:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13227:3:15",
														"nodeType": "YulTypedName",
														"src": "13227:3:15",
														"type": ""
													}
												],
												"src": "13059:538:15"
											},
											{
												"body": {
													"nativeSrc": "13631:152:15",
													"nodeType": "YulBlock",
													"src": "13631:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13648:1:15",
																		"nodeType": "YulLiteral",
																		"src": "13648:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13651:77:15",
																		"nodeType": "YulLiteral",
																		"src": "13651:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13641:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13641:6:15"
																},
																"nativeSrc": "13641:88:15",
																"nodeType": "YulFunctionCall",
																"src": "13641:88:15"
															},
															"nativeSrc": "13641:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "13641:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13745:1:15",
																		"nodeType": "YulLiteral",
																		"src": "13745:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13748:4:15",
																		"nodeType": "YulLiteral",
																		"src": "13748:4:15",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13738:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13738:6:15"
																},
																"nativeSrc": "13738:15:15",
																"nodeType": "YulFunctionCall",
																"src": "13738:15:15"
															},
															"nativeSrc": "13738:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "13738:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13769:1:15",
																		"nodeType": "YulLiteral",
																		"src": "13769:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13772:4:15",
																		"nodeType": "YulLiteral",
																		"src": "13772:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13762:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13762:6:15"
																},
																"nativeSrc": "13762:15:15",
																"nodeType": "YulFunctionCall",
																"src": "13762:15:15"
															},
															"nativeSrc": "13762:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "13762:15:15"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "13603:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "13603:180:15"
											},
											{
												"body": {
													"nativeSrc": "13823:142:15",
													"nodeType": "YulBlock",
													"src": "13823:142:15",
													"statements": [
														{
															"nativeSrc": "13833:25:15",
															"nodeType": "YulAssignment",
															"src": "13833:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13856:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "13856:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13838:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "13838:17:15"
																},
																"nativeSrc": "13838:20:15",
																"nodeType": "YulFunctionCall",
																"src": "13838:20:15"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13833:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "13833:1:15"
																}
															]
														},
														{
															"nativeSrc": "13867:25:15",
															"nodeType": "YulAssignment",
															"src": "13867:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13890:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "13890:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13872:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "13872:17:15"
																},
																"nativeSrc": "13872:20:15",
																"nodeType": "YulFunctionCall",
																"src": "13872:20:15"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13867:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "13867:1:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13914:22:15",
																"nodeType": "YulBlock",
																"src": "13914:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "13916:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "13916:16:15"
																			},
																			"nativeSrc": "13916:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "13916:18:15"
																		},
																		"nativeSrc": "13916:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "13916:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13911:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "13911:1:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13904:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13904:6:15"
																},
																"nativeSrc": "13904:9:15",
																"nodeType": "YulFunctionCall",
																"src": "13904:9:15"
															},
															"nativeSrc": "13901:35:15",
															"nodeType": "YulIf",
															"src": "13901:35:15"
														},
														{
															"nativeSrc": "13945:14:15",
															"nodeType": "YulAssignment",
															"src": "13945:14:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13954:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "13954:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13957:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "13957:1:15"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nativeSrc": "13950:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13950:3:15"
																},
																"nativeSrc": "13950:9:15",
																"nodeType": "YulFunctionCall",
																"src": "13950:9:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "13945:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "13945:1:15"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nativeSrc": "13789:176:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13812:1:15",
														"nodeType": "YulTypedName",
														"src": "13812:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13815:1:15",
														"nodeType": "YulTypedName",
														"src": "13815:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "13821:1:15",
														"nodeType": "YulTypedName",
														"src": "13821:1:15",
														"type": ""
													}
												],
												"src": "13789:176:15"
											},
											{
												"body": {
													"nativeSrc": "14085:34:15",
													"nodeType": "YulBlock",
													"src": "14085:34:15",
													"statements": [
														{
															"nativeSrc": "14095:18:15",
															"nodeType": "YulAssignment",
															"src": "14095:18:15",
															"value": {
																"name": "pos",
																"nativeSrc": "14110:3:15",
																"nodeType": "YulIdentifier",
																"src": "14110:3:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "14095:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "14095:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "13971:148:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14057:3:15",
														"nodeType": "YulTypedName",
														"src": "14057:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "14062:6:15",
														"nodeType": "YulTypedName",
														"src": "14062:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "14073:11:15",
														"nodeType": "YulTypedName",
														"src": "14073:11:15",
														"type": ""
													}
												],
												"src": "13971:148:15"
											},
											{
												"body": {
													"nativeSrc": "14235:280:15",
													"nodeType": "YulBlock",
													"src": "14235:280:15",
													"statements": [
														{
															"nativeSrc": "14245:53:15",
															"nodeType": "YulVariableDeclaration",
															"src": "14245:53:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14292:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "14292:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "14259:32:15",
																	"nodeType": "YulIdentifier",
																	"src": "14259:32:15"
																},
																"nativeSrc": "14259:39:15",
																"nodeType": "YulFunctionCall",
																"src": "14259:39:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "14249:6:15",
																	"nodeType": "YulTypedName",
																	"src": "14249:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14307:96:15",
															"nodeType": "YulAssignment",
															"src": "14307:96:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14391:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "14391:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14396:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "14396:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "14314:76:15",
																	"nodeType": "YulIdentifier",
																	"src": "14314:76:15"
																},
																"nativeSrc": "14314:89:15",
																"nodeType": "YulFunctionCall",
																"src": "14314:89:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14307:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14307:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14451:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "14451:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14458:4:15",
																				"nodeType": "YulLiteral",
																				"src": "14458:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14447:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14447:3:15"
																		},
																		"nativeSrc": "14447:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14447:16:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "14465:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "14465:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14470:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "14470:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "14412:34:15",
																	"nodeType": "YulIdentifier",
																	"src": "14412:34:15"
																},
																"nativeSrc": "14412:65:15",
																"nodeType": "YulFunctionCall",
																"src": "14412:65:15"
															},
															"nativeSrc": "14412:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "14412:65:15"
														},
														{
															"nativeSrc": "14486:23:15",
															"nodeType": "YulAssignment",
															"src": "14486:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14497:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "14497:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14502:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "14502:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14493:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14493:3:15"
																},
																"nativeSrc": "14493:16:15",
																"nodeType": "YulFunctionCall",
																"src": "14493:16:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14486:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14486:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "14125:390:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14216:5:15",
														"nodeType": "YulTypedName",
														"src": "14216:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14223:3:15",
														"nodeType": "YulTypedName",
														"src": "14223:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14231:3:15",
														"nodeType": "YulTypedName",
														"src": "14231:3:15",
														"type": ""
													}
												],
												"src": "14125:390:15"
											},
											{
												"body": {
													"nativeSrc": "14705:251:15",
													"nodeType": "YulBlock",
													"src": "14705:251:15",
													"statements": [
														{
															"nativeSrc": "14716:102:15",
															"nodeType": "YulAssignment",
															"src": "14716:102:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14805:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "14805:6:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "14814:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "14814:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "14723:81:15",
																	"nodeType": "YulIdentifier",
																	"src": "14723:81:15"
																},
																"nativeSrc": "14723:95:15",
																"nodeType": "YulFunctionCall",
																"src": "14723:95:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14716:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14716:3:15"
																}
															]
														},
														{
															"nativeSrc": "14828:102:15",
															"nodeType": "YulAssignment",
															"src": "14828:102:15",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14917:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "14917:6:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "14926:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "14926:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "14835:81:15",
																	"nodeType": "YulIdentifier",
																	"src": "14835:81:15"
																},
																"nativeSrc": "14835:95:15",
																"nodeType": "YulFunctionCall",
																"src": "14835:95:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14828:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14828:3:15"
																}
															]
														},
														{
															"nativeSrc": "14940:10:15",
															"nodeType": "YulAssignment",
															"src": "14940:10:15",
															"value": {
																"name": "pos",
																"nativeSrc": "14947:3:15",
																"nodeType": "YulIdentifier",
																"src": "14947:3:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14940:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14940:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "14521:435:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14676:3:15",
														"nodeType": "YulTypedName",
														"src": "14676:3:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14682:6:15",
														"nodeType": "YulTypedName",
														"src": "14682:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14690:6:15",
														"nodeType": "YulTypedName",
														"src": "14690:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14701:3:15",
														"nodeType": "YulTypedName",
														"src": "14701:3:15",
														"type": ""
													}
												],
												"src": "14521:435:15"
											},
											{
												"body": {
													"nativeSrc": "15020:40:15",
													"nodeType": "YulBlock",
													"src": "15020:40:15",
													"statements": [
														{
															"nativeSrc": "15031:22:15",
															"nodeType": "YulAssignment",
															"src": "15031:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15047:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "15047:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15041:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "15041:5:15"
																},
																"nativeSrc": "15041:12:15",
																"nodeType": "YulFunctionCall",
																"src": "15041:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "15031:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15031:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "14962:98:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15003:5:15",
														"nodeType": "YulTypedName",
														"src": "15003:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "15013:6:15",
														"nodeType": "YulTypedName",
														"src": "15013:6:15",
														"type": ""
													}
												],
												"src": "14962:98:15"
											},
											{
												"body": {
													"nativeSrc": "15161:73:15",
													"nodeType": "YulBlock",
													"src": "15161:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15178:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "15178:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15183:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "15183:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15171:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15171:6:15"
																},
																"nativeSrc": "15171:19:15",
																"nodeType": "YulFunctionCall",
																"src": "15171:19:15"
															},
															"nativeSrc": "15171:19:15",
															"nodeType": "YulExpressionStatement",
															"src": "15171:19:15"
														},
														{
															"nativeSrc": "15199:29:15",
															"nodeType": "YulAssignment",
															"src": "15199:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15218:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "15218:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15223:4:15",
																		"nodeType": "YulLiteral",
																		"src": "15223:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15214:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15214:3:15"
																},
																"nativeSrc": "15214:14:15",
																"nodeType": "YulFunctionCall",
																"src": "15214:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "15199:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "15199:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "15066:168:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15133:3:15",
														"nodeType": "YulTypedName",
														"src": "15133:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "15138:6:15",
														"nodeType": "YulTypedName",
														"src": "15138:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "15149:11:15",
														"nodeType": "YulTypedName",
														"src": "15149:11:15",
														"type": ""
													}
												],
												"src": "15066:168:15"
											},
											{
												"body": {
													"nativeSrc": "15330:283:15",
													"nodeType": "YulBlock",
													"src": "15330:283:15",
													"statements": [
														{
															"nativeSrc": "15340:52:15",
															"nodeType": "YulVariableDeclaration",
															"src": "15340:52:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15386:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "15386:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "15354:31:15",
																	"nodeType": "YulIdentifier",
																	"src": "15354:31:15"
																},
																"nativeSrc": "15354:38:15",
																"nodeType": "YulFunctionCall",
																"src": "15354:38:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "15344:6:15",
																	"nodeType": "YulTypedName",
																	"src": "15344:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15401:77:15",
															"nodeType": "YulAssignment",
															"src": "15401:77:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15466:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "15466:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15471:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "15471:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "15408:57:15",
																	"nodeType": "YulIdentifier",
																	"src": "15408:57:15"
																},
																"nativeSrc": "15408:70:15",
																"nodeType": "YulFunctionCall",
																"src": "15408:70:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15401:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15401:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15526:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "15526:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15533:4:15",
																				"nodeType": "YulLiteral",
																				"src": "15533:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15522:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15522:3:15"
																		},
																		"nativeSrc": "15522:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15522:16:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "15540:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "15540:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15545:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "15545:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "15487:34:15",
																	"nodeType": "YulIdentifier",
																	"src": "15487:34:15"
																},
																"nativeSrc": "15487:65:15",
																"nodeType": "YulFunctionCall",
																"src": "15487:65:15"
															},
															"nativeSrc": "15487:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "15487:65:15"
														},
														{
															"nativeSrc": "15561:46:15",
															"nodeType": "YulAssignment",
															"src": "15561:46:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15572:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "15572:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "15599:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "15599:6:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "15577:21:15",
																			"nodeType": "YulIdentifier",
																			"src": "15577:21:15"
																		},
																		"nativeSrc": "15577:29:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15577:29:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15568:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15568:3:15"
																},
																"nativeSrc": "15568:39:15",
																"nodeType": "YulFunctionCall",
																"src": "15568:39:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15561:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15561:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "15240:373:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15311:5:15",
														"nodeType": "YulTypedName",
														"src": "15311:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "15318:3:15",
														"nodeType": "YulTypedName",
														"src": "15318:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15326:3:15",
														"nodeType": "YulTypedName",
														"src": "15326:3:15",
														"type": ""
													}
												],
												"src": "15240:373:15"
											},
											{
												"body": {
													"nativeSrc": "15819:440:15",
													"nodeType": "YulBlock",
													"src": "15819:440:15",
													"statements": [
														{
															"nativeSrc": "15829:27:15",
															"nodeType": "YulAssignment",
															"src": "15829:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15841:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "15841:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15852:3:15",
																		"nodeType": "YulLiteral",
																		"src": "15852:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15837:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15837:3:15"
																},
																"nativeSrc": "15837:19:15",
																"nodeType": "YulFunctionCall",
																"src": "15837:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15829:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "15829:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15910:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "15910:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15923:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "15923:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15934:1:15",
																				"nodeType": "YulLiteral",
																				"src": "15934:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15919:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15919:3:15"
																		},
																		"nativeSrc": "15919:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15919:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15866:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "15866:43:15"
																},
																"nativeSrc": "15866:71:15",
																"nodeType": "YulFunctionCall",
																"src": "15866:71:15"
															},
															"nativeSrc": "15866:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "15866:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15991:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "15991:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16004:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16004:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16015:2:15",
																				"nodeType": "YulLiteral",
																				"src": "16015:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16000:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16000:3:15"
																		},
																		"nativeSrc": "16000:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16000:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15947:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "15947:43:15"
																},
																"nativeSrc": "15947:72:15",
																"nodeType": "YulFunctionCall",
																"src": "15947:72:15"
															},
															"nativeSrc": "15947:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "15947:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "16073:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16073:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16086:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16086:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16097:2:15",
																				"nodeType": "YulLiteral",
																				"src": "16097:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16082:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16082:3:15"
																		},
																		"nativeSrc": "16082:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16082:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16029:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "16029:43:15"
																},
																"nativeSrc": "16029:72:15",
																"nodeType": "YulFunctionCall",
																"src": "16029:72:15"
															},
															"nativeSrc": "16029:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "16029:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16122:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16122:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16133:2:15",
																				"nodeType": "YulLiteral",
																				"src": "16133:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16118:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16118:3:15"
																		},
																		"nativeSrc": "16118:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16118:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16142:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "16142:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16148:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16148:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16138:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16138:3:15"
																		},
																		"nativeSrc": "16138:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16138:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16111:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "16111:6:15"
																},
																"nativeSrc": "16111:48:15",
																"nodeType": "YulFunctionCall",
																"src": "16111:48:15"
															},
															"nativeSrc": "16111:48:15",
															"nodeType": "YulExpressionStatement",
															"src": "16111:48:15"
														},
														{
															"nativeSrc": "16168:84:15",
															"nodeType": "YulAssignment",
															"src": "16168:84:15",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "16238:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16238:6:15"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "16247:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "16247:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "16176:61:15",
																	"nodeType": "YulIdentifier",
																	"src": "16176:61:15"
																},
																"nativeSrc": "16176:76:15",
																"nodeType": "YulFunctionCall",
																"src": "16176:76:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16168:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "16168:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "15619:640:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15767:9:15",
														"nodeType": "YulTypedName",
														"src": "15767:9:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "15779:6:15",
														"nodeType": "YulTypedName",
														"src": "15779:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15787:6:15",
														"nodeType": "YulTypedName",
														"src": "15787:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15795:6:15",
														"nodeType": "YulTypedName",
														"src": "15795:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15803:6:15",
														"nodeType": "YulTypedName",
														"src": "15803:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15814:4:15",
														"nodeType": "YulTypedName",
														"src": "15814:4:15",
														"type": ""
													}
												],
												"src": "15619:640:15"
											},
											{
												"body": {
													"nativeSrc": "16327:79:15",
													"nodeType": "YulBlock",
													"src": "16327:79:15",
													"statements": [
														{
															"nativeSrc": "16337:22:15",
															"nodeType": "YulAssignment",
															"src": "16337:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "16352:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16352:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16346:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "16346:5:15"
																},
																"nativeSrc": "16346:13:15",
																"nodeType": "YulFunctionCall",
																"src": "16346:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "16337:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "16337:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16394:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "16394:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "16368:25:15",
																	"nodeType": "YulIdentifier",
																	"src": "16368:25:15"
																},
																"nativeSrc": "16368:32:15",
																"nodeType": "YulFunctionCall",
																"src": "16368:32:15"
															},
															"nativeSrc": "16368:32:15",
															"nodeType": "YulExpressionStatement",
															"src": "16368:32:15"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "16265:141:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "16305:6:15",
														"nodeType": "YulTypedName",
														"src": "16305:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "16313:3:15",
														"nodeType": "YulTypedName",
														"src": "16313:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "16321:5:15",
														"nodeType": "YulTypedName",
														"src": "16321:5:15",
														"type": ""
													}
												],
												"src": "16265:141:15"
											},
											{
												"body": {
													"nativeSrc": "16488:273:15",
													"nodeType": "YulBlock",
													"src": "16488:273:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "16534:83:15",
																"nodeType": "YulBlock",
																"src": "16534:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "16536:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "16536:77:15"
																			},
																			"nativeSrc": "16536:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "16536:79:15"
																		},
																		"nativeSrc": "16536:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "16536:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16509:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "16509:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16518:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16518:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16505:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16505:3:15"
																		},
																		"nativeSrc": "16505:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16505:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16530:2:15",
																		"nodeType": "YulLiteral",
																		"src": "16530:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "16501:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "16501:3:15"
																},
																"nativeSrc": "16501:32:15",
																"nodeType": "YulFunctionCall",
																"src": "16501:32:15"
															},
															"nativeSrc": "16498:119:15",
															"nodeType": "YulIf",
															"src": "16498:119:15"
														},
														{
															"nativeSrc": "16627:127:15",
															"nodeType": "YulBlock",
															"src": "16627:127:15",
															"statements": [
																{
																	"nativeSrc": "16642:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16642:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16656:1:15",
																		"nodeType": "YulLiteral",
																		"src": "16656:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16646:6:15",
																			"nodeType": "YulTypedName",
																			"src": "16646:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16671:73:15",
																	"nodeType": "YulAssignment",
																	"src": "16671:73:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16716:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "16716:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16727:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "16727:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16712:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "16712:3:15"
																				},
																				"nativeSrc": "16712:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "16712:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16736:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "16736:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "16681:30:15",
																			"nodeType": "YulIdentifier",
																			"src": "16681:30:15"
																		},
																		"nativeSrc": "16681:63:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16681:63:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "16671:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "16671:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "16412:349:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16458:9:15",
														"nodeType": "YulTypedName",
														"src": "16458:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "16469:7:15",
														"nodeType": "YulTypedName",
														"src": "16469:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "16481:6:15",
														"nodeType": "YulTypedName",
														"src": "16481:6:15",
														"type": ""
													}
												],
												"src": "16412:349:15"
											},
											{
												"body": {
													"nativeSrc": "16812:149:15",
													"nodeType": "YulBlock",
													"src": "16812:149:15",
													"statements": [
														{
															"nativeSrc": "16822:25:15",
															"nodeType": "YulAssignment",
															"src": "16822:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16845:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "16845:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16827:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "16827:17:15"
																},
																"nativeSrc": "16827:20:15",
																"nodeType": "YulFunctionCall",
																"src": "16827:20:15"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "16822:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "16822:1:15"
																}
															]
														},
														{
															"nativeSrc": "16856:25:15",
															"nodeType": "YulAssignment",
															"src": "16856:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16879:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "16879:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16861:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "16861:17:15"
																},
																"nativeSrc": "16861:20:15",
																"nodeType": "YulFunctionCall",
																"src": "16861:20:15"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "16856:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "16856:1:15"
																}
															]
														},
														{
															"nativeSrc": "16890:17:15",
															"nodeType": "YulAssignment",
															"src": "16890:17:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16902:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "16902:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16905:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "16905:1:15"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "16898:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "16898:3:15"
																},
																"nativeSrc": "16898:9:15",
																"nodeType": "YulFunctionCall",
																"src": "16898:9:15"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "16890:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "16890:4:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16932:22:15",
																"nodeType": "YulBlock",
																"src": "16932:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "16934:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "16934:16:15"
																			},
																			"nativeSrc": "16934:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "16934:18:15"
																		},
																		"nativeSrc": "16934:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "16934:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "16923:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "16923:4:15"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "16929:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "16929:1:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16920:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "16920:2:15"
																},
																"nativeSrc": "16920:11:15",
																"nodeType": "YulFunctionCall",
																"src": "16920:11:15"
															},
															"nativeSrc": "16917:37:15",
															"nodeType": "YulIf",
															"src": "16917:37:15"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "16767:194:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "16798:1:15",
														"nodeType": "YulTypedName",
														"src": "16798:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "16801:1:15",
														"nodeType": "YulTypedName",
														"src": "16801:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "16807:4:15",
														"nodeType": "YulTypedName",
														"src": "16807:4:15",
														"type": ""
													}
												],
												"src": "16767:194:15"
											},
											{
												"body": {
													"nativeSrc": "16995:152:15",
													"nodeType": "YulBlock",
													"src": "16995:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17012:1:15",
																		"nodeType": "YulLiteral",
																		"src": "17012:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17015:77:15",
																		"nodeType": "YulLiteral",
																		"src": "17015:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17005:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "17005:6:15"
																},
																"nativeSrc": "17005:88:15",
																"nodeType": "YulFunctionCall",
																"src": "17005:88:15"
															},
															"nativeSrc": "17005:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "17005:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17109:1:15",
																		"nodeType": "YulLiteral",
																		"src": "17109:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17112:4:15",
																		"nodeType": "YulLiteral",
																		"src": "17112:4:15",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17102:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "17102:6:15"
																},
																"nativeSrc": "17102:15:15",
																"nodeType": "YulFunctionCall",
																"src": "17102:15:15"
															},
															"nativeSrc": "17102:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "17102:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17133:1:15",
																		"nodeType": "YulLiteral",
																		"src": "17133:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17136:4:15",
																		"nodeType": "YulLiteral",
																		"src": "17136:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17126:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "17126:6:15"
																},
																"nativeSrc": "17126:15:15",
																"nodeType": "YulFunctionCall",
																"src": "17126:15:15"
															},
															"nativeSrc": "17126:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "17126:15:15"
														}
													]
												},
												"name": "panic_error_0x31",
												"nativeSrc": "16967:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "16967:180:15"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function abi_encode_tuple_packed_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value2, value1, value0) -> end {\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101165760003560e01c80634f6ccce7116100a257806395d89b411161007157806395d89b4114610305578063a22cb46514610323578063b88d4fde1461033f578063c87b56dd1461035b578063e985e9c51461038b57610116565b80634f6ccce71461026b57806362b4c27f1461029b5780636352211e146102a557806370a08231146102d557610116565b806318160ddd116100e957806318160ddd146101b557806323b872dd146101d35780632f745c59146101ef57806342842e0e1461021f5780634e7fe41e1461023b57610116565b806301ffc9a71461011b57806306fdde031461014b578063081812fc14610169578063095ea7b314610199575b600080fd5b61013560048036038101906101309190611d27565b6103bb565b6040516101429190611d6f565b60405180910390f35b610153610435565b6040516101609190611e1a565b60405180910390f35b610183600480360381019061017e9190611e72565b6104c7565b6040516101909190611ee0565b60405180910390f35b6101b360048036038101906101ae9190611f27565b6104e3565b005b6101bd6104f9565b6040516101ca9190611f76565b60405180910390f35b6101ed60048036038101906101e89190611f91565b610506565b005b61020960048036038101906102049190611f27565b610608565b6040516102169190611f76565b60405180910390f35b61023960048036038101906102349190611f91565b6106b1565b005b61025560048036038101906102509190611e72565b6106d1565b6040516102629190611f76565b60405180910390f35b61028560048036038101906102809190611e72565b6106e9565b6040516102929190611f76565b60405180910390f35b6102a361075f565b005b6102bf60048036038101906102ba9190611e72565b6107e7565b6040516102cc9190611ee0565b60405180910390f35b6102ef60048036038101906102ea9190611fe4565b6107f9565b6040516102fc9190611f76565b60405180910390f35b61030d6108b3565b60405161031a9190611e1a565b60405180910390f35b61033d6004803603810190610338919061203d565b610945565b005b610359600480360381019061035491906121b2565b61095b565b005b61037560048036038101906103709190611e72565b610978565b6040516103829190611e1a565b60405180910390f35b6103a560048036038101906103a09190612235565b6109e1565b6040516103b29190611d6f565b60405180910390f35b60007f780e9d63000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061042e575061042d82610a75565b5b9050919050565b606060008054610444906122a4565b80601f0160208091040260200160405190810160405280929190818152602001828054610470906122a4565b80156104bd5780601f10610492576101008083540402835291602001916104bd565b820191906000526020600020905b8154815290600101906020018083116104a057829003601f168201915b5050505050905090565b60006104d282610b57565b506104dc82610bdf565b9050919050565b6104f582826104f0610c1c565b610c24565b5050565b6000600880549050905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105785760006040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161056f9190611ee0565b60405180910390fd5b600061058c8383610587610c1c565b610c36565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610602578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016105f9939291906122d5565b60405180910390fd5b50505050565b6000610613836107f9565b82106106585782826040517fa57d13dc00000000000000000000000000000000000000000000000000000000815260040161064f92919061230c565b60405180910390fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b6106cc8383836040518060200160405280600081525061095b565b505050565b600a6020528060005260406000206000915090505481565b60006106f36104f9565b8210610739576000826040517fa57d13dc00000000000000000000000000000000000000000000000000000000815260040161073092919061230c565b60405180910390fd5b6008828154811061074d5761074c612335565b5b90600052602060002001549050919050565b6000600161076b6104f9565b6107759190612393565b905060006001600542338560405160200161079293929190612430565b6040516020818303038152906040528051906020012060001c6107b5919061249c565b6107bf9190612393565b905080600a6000848152602001908152602001600020819055506107e33383610d53565b5050565b60006107f282610b57565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361086c5760006040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016108639190611ee0565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600180546108c2906122a4565b80601f01602080910402602001604051908101604052809291908181526020018280546108ee906122a4565b801561093b5780601f106109105761010080835404028352916020019161093b565b820191906000526020600020905b81548152906001019060200180831161091e57829003601f168201915b5050505050905090565b610957610950610c1c565b8383610e4c565b5050565b610966848484610506565b61097284848484610fbb565b50505050565b606061098382610b57565b50600061098e611172565b905060008151116109ae57604051806020016040528060008152506109d9565b806109b884611189565b6040516020016109c9929190612509565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610b4057507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610b505750610b4f82611257565b5b9050919050565b600080610b63836112c1565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610bd657826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610bcd9190611f76565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b610c3183838360016112fe565b505050565b600080610c448585856114c3565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c8857610c83846116dd565b610cc7565b8473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610cc657610cc58185611726565b5b5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610d0957610d0484611887565b610d48565b8473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610d4757610d468585611958565b5b5b809150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610dc55760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610dbc9190611ee0565b60405180910390fd5b6000610dd383836000610c36565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610e475760006040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401610e3e9190611ee0565b60405180910390fd5b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ebd57816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610eb49190611ee0565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610fae9190611d6f565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b111561116c578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02610fff610c1c565b8685856040518563ffffffff1660e01b81526004016110219493929190612582565b6020604051808303816000875af192505050801561105d57506040513d601f19601f8201168201806040525081019061105a91906125e3565b60015b6110e1573d806000811461108d576040519150601f19603f3d011682016040523d82523d6000602084013e611092565b606091505b5060008151036110d957836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016110d09190611ee0565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461116a57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016111619190611ee0565b60405180910390fd5b505b50505050565b606060405180602001604052806000815250905090565b606060006001611198846119e3565b01905060008167ffffffffffffffff8111156111b7576111b6612087565b5b6040519080825280601f01601f1916602001820160405280156111e95781602001600182028036833780820191505090505b509050600082602001820190505b60011561124c578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816112405761123f61246d565b5b049450600085036111f7575b819350505050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806113375750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1561146b57600061134784610b57565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156113b257508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156113c557506113c381846109e1565b155b1561140757826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016113fe9190611ee0565b60405180910390fd5b811561146957838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6000806114cf846112c1565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461151157611510818486611b36565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146115a2576115536000856000806112fe565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614611625576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505060019003906000526020600020016000909190919091505550565b6000611731836107f9565b9050600060076000848152602001908152602001600020549050818114611816576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002054905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002081905550816007600083815260200190815260200160002081905550505b6007600084815260200190815260200160002060009055600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206000905550505050565b6000600160088054905061189b9190612610565b90506000600960008481526020019081526020016000205490506000600883815481106118cb576118ca612335565b5b9060005260206000200154905080600883815481106118ed576118ec612335565b5b90600052602060002001819055508160096000838152602001908152602001600020819055506009600085815260200190815260200160002060009055600880548061193c5761193b612644565b5b6001900381819060005260206000200160009055905550505050565b60006001611965846107f9565b61196f9190612610565b905081600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002081905550806007600084815260200190815260200160002081905550505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611a41577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611a3757611a3661246d565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611a7e576d04ee2d6d415b85acef81000000008381611a7457611a7361246d565b5b0492506020810190505b662386f26fc100008310611aad57662386f26fc100008381611aa357611aa261246d565b5b0492506010810190505b6305f5e1008310611ad6576305f5e1008381611acc57611acb61246d565b5b0492506008810190505b6127108310611afb576127108381611af157611af061246d565b5b0492506004810190505b60648310611b1e5760648381611b1457611b1361246d565b5b0492506002810190505b600a8310611b2d576001810190505b80915050919050565b611b41838383611bfa565b611bf557600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611bb657806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611bad9190611f76565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611bec92919061230c565b60405180910390fd5b505050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611cb257508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611c735750611c7284846109e1565b5b80611cb157508273ffffffffffffffffffffffffffffffffffffffff16611c9983610bdf565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611d0481611ccf565b8114611d0f57600080fd5b50565b600081359050611d2181611cfb565b92915050565b600060208284031215611d3d57611d3c611cc5565b5b6000611d4b84828501611d12565b91505092915050565b60008115159050919050565b611d6981611d54565b82525050565b6000602082019050611d846000830184611d60565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611dc4578082015181840152602081019050611da9565b60008484015250505050565b6000601f19601f8301169050919050565b6000611dec82611d8a565b611df68185611d95565b9350611e06818560208601611da6565b611e0f81611dd0565b840191505092915050565b60006020820190508181036000830152611e348184611de1565b905092915050565b6000819050919050565b611e4f81611e3c565b8114611e5a57600080fd5b50565b600081359050611e6c81611e46565b92915050565b600060208284031215611e8857611e87611cc5565b5b6000611e9684828501611e5d565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611eca82611e9f565b9050919050565b611eda81611ebf565b82525050565b6000602082019050611ef56000830184611ed1565b92915050565b611f0481611ebf565b8114611f0f57600080fd5b50565b600081359050611f2181611efb565b92915050565b60008060408385031215611f3e57611f3d611cc5565b5b6000611f4c85828601611f12565b9250506020611f5d85828601611e5d565b9150509250929050565b611f7081611e3c565b82525050565b6000602082019050611f8b6000830184611f67565b92915050565b600080600060608486031215611faa57611fa9611cc5565b5b6000611fb886828701611f12565b9350506020611fc986828701611f12565b9250506040611fda86828701611e5d565b9150509250925092565b600060208284031215611ffa57611ff9611cc5565b5b600061200884828501611f12565b91505092915050565b61201a81611d54565b811461202557600080fd5b50565b60008135905061203781612011565b92915050565b6000806040838503121561205457612053611cc5565b5b600061206285828601611f12565b925050602061207385828601612028565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6120bf82611dd0565b810181811067ffffffffffffffff821117156120de576120dd612087565b5b80604052505050565b60006120f1611cbb565b90506120fd82826120b6565b919050565b600067ffffffffffffffff82111561211d5761211c612087565b5b61212682611dd0565b9050602081019050919050565b82818337600083830152505050565b600061215561215084612102565b6120e7565b90508281526020810184848401111561217157612170612082565b5b61217c848285612133565b509392505050565b600082601f8301126121995761219861207d565b5b81356121a9848260208601612142565b91505092915050565b600080600080608085870312156121cc576121cb611cc5565b5b60006121da87828801611f12565b94505060206121eb87828801611f12565b93505060406121fc87828801611e5d565b925050606085013567ffffffffffffffff81111561221d5761221c611cca565b5b61222987828801612184565b91505092959194509250565b6000806040838503121561224c5761224b611cc5565b5b600061225a85828601611f12565b925050602061226b85828601611f12565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806122bc57607f821691505b6020821081036122cf576122ce612275565b5b50919050565b60006060820190506122ea6000830186611ed1565b6122f76020830185611f67565b6123046040830184611ed1565b949350505050565b60006040820190506123216000830185611ed1565b61232e6020830184611f67565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061239e82611e3c565b91506123a983611e3c565b92508282019050808211156123c1576123c0612364565b5b92915050565b6000819050919050565b6123e26123dd82611e3c565b6123c7565b82525050565b60008160601b9050919050565b6000612400826123e8565b9050919050565b6000612412826123f5565b9050919050565b61242a61242582611ebf565b612407565b82525050565b600061243c82866123d1565b60208201915061244c8285612419565b60148201915061245c82846123d1565b602082019150819050949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006124a782611e3c565b91506124b283611e3c565b9250826124c2576124c161246d565b5b828206905092915050565b600081905092915050565b60006124e382611d8a565b6124ed81856124cd565b93506124fd818560208601611da6565b80840191505092915050565b600061251582856124d8565b915061252182846124d8565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b60006125548261252d565b61255e8185612538565b935061256e818560208601611da6565b61257781611dd0565b840191505092915050565b60006080820190506125976000830187611ed1565b6125a46020830186611ed1565b6125b16040830185611f67565b81810360608301526125c38184612549565b905095945050505050565b6000815190506125dd81611cfb565b92915050565b6000602082840312156125f9576125f8611cc5565b5b6000612607848285016125ce565b91505092915050565b600061261b82611e3c565b915061262683611e3c565b925082820390508181111561263e5761263d612364565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea264697066735822122035e7c45e186f98e758d55c0a8928f07d9061e557d09c0f1eb394754be880b32564736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4F6CCCE7 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x38B JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x62B4C27F EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2D5 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x4E7FE41E EQ PUSH2 0x23B JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x199 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x135 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x1D27 JUMP JUMPDEST PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x1D6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x153 PUSH2 0x435 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x1E1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x1E72 JUMP JUMPDEST PUSH2 0x4C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x1EE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x1F27 JUMP JUMPDEST PUSH2 0x4E3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BD PUSH2 0x4F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x1F91 JUMP JUMPDEST PUSH2 0x506 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x1F27 JUMP JUMPDEST PUSH2 0x608 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x239 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x1F91 JUMP JUMPDEST PUSH2 0x6B1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x255 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x1E72 JUMP JUMPDEST PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x285 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x1E72 JUMP JUMPDEST PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x292 SWAP2 SWAP1 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A3 PUSH2 0x75F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x1E72 JUMP JUMPDEST PUSH2 0x7E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x1EE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x1FE4 JUMP JUMPDEST PUSH2 0x7F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30D PUSH2 0x8B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31A SWAP2 SWAP1 PUSH2 0x1E1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x338 SWAP2 SWAP1 PUSH2 0x203D JUMP JUMPDEST PUSH2 0x945 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x359 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x21B2 JUMP JUMPDEST PUSH2 0x95B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x375 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x370 SWAP2 SWAP1 PUSH2 0x1E72 JUMP JUMPDEST PUSH2 0x978 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x382 SWAP2 SWAP1 PUSH2 0x1E1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A0 SWAP2 SWAP1 PUSH2 0x2235 JUMP JUMPDEST PUSH2 0x9E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x1D6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x780E9D6300000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x42E JUMPI POP PUSH2 0x42D DUP3 PUSH2 0xA75 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x444 SWAP1 PUSH2 0x22A4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x470 SWAP1 PUSH2 0x22A4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4BD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x492 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4BD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4A0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D2 DUP3 PUSH2 0xB57 JUMP JUMPDEST POP PUSH2 0x4DC DUP3 PUSH2 0xBDF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4F5 DUP3 DUP3 PUSH2 0x4F0 PUSH2 0xC1C JUMP JUMPDEST PUSH2 0xC24 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x578 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x56F SWAP2 SWAP1 PUSH2 0x1EE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x58C DUP4 DUP4 PUSH2 0x587 PUSH2 0xC1C JUMP JUMPDEST PUSH2 0xC36 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x602 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x613 DUP4 PUSH2 0x7F9 JUMP JUMPDEST DUP3 LT PUSH2 0x658 JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0xA57D13DC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP3 SWAP2 SWAP1 PUSH2 0x230C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6CC DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x95B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F3 PUSH2 0x4F9 JUMP JUMPDEST DUP3 LT PUSH2 0x739 JUMPI PUSH1 0x0 DUP3 PUSH1 0x40 MLOAD PUSH32 0xA57D13DC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x730 SWAP3 SWAP2 SWAP1 PUSH2 0x230C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x74D JUMPI PUSH2 0x74C PUSH2 0x2335 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x76B PUSH2 0x4F9 JUMP JUMPDEST PUSH2 0x775 SWAP2 SWAP1 PUSH2 0x2393 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x5 TIMESTAMP CALLER DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x792 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0x7B5 SWAP2 SWAP1 PUSH2 0x249C JUMP JUMPDEST PUSH2 0x7BF SWAP2 SWAP1 PUSH2 0x2393 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xA PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x7E3 CALLER DUP4 PUSH2 0xD53 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F2 DUP3 PUSH2 0xB57 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x863 SWAP2 SWAP1 PUSH2 0x1EE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x8C2 SWAP1 PUSH2 0x22A4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8EE SWAP1 PUSH2 0x22A4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x93B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x910 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x93B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x91E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x957 PUSH2 0x950 PUSH2 0xC1C JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE4C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x966 DUP5 DUP5 DUP5 PUSH2 0x506 JUMP JUMPDEST PUSH2 0x972 DUP5 DUP5 DUP5 DUP5 PUSH2 0xFBB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x983 DUP3 PUSH2 0xB57 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x98E PUSH2 0x1172 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x9AE JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x9D9 JUMP JUMPDEST DUP1 PUSH2 0x9B8 DUP5 PUSH2 0x1189 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9C9 SWAP3 SWAP2 SWAP1 PUSH2 0x2509 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xB40 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0xB50 JUMPI POP PUSH2 0xB4F DUP3 PUSH2 0x1257 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB63 DUP4 PUSH2 0x12C1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBD6 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCD SWAP2 SWAP1 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC31 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x12FE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC44 DUP6 DUP6 DUP6 PUSH2 0x14C3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC88 JUMPI PUSH2 0xC83 DUP5 PUSH2 0x16DD JUMP JUMPDEST PUSH2 0xCC7 JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC6 JUMPI PUSH2 0xCC5 DUP2 DUP6 PUSH2 0x1726 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD09 JUMPI PUSH2 0xD04 DUP5 PUSH2 0x1887 JUMP JUMPDEST PUSH2 0xD48 JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD47 JUMPI PUSH2 0xD46 DUP6 DUP6 PUSH2 0x1958 JUMP JUMPDEST JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDC5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBC SWAP2 SWAP1 PUSH2 0x1EE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDD3 DUP4 DUP4 PUSH1 0x0 PUSH2 0xC36 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE47 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE3E SWAP2 SWAP1 PUSH2 0x1EE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEBD JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEB4 SWAP2 SWAP1 PUSH2 0x1EE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFAE SWAP2 SWAP1 PUSH2 0x1D6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x116C JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0xFFF PUSH2 0xC1C JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1021 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2582 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x105D JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x105A SWAP2 SWAP1 PUSH2 0x25E3 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x10E1 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x108D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1092 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x10D9 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D0 SWAP2 SWAP1 PUSH2 0x1EE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x116A JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1161 SWAP2 SWAP1 PUSH2 0x1EE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1198 DUP5 PUSH2 0x19E3 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11B7 JUMPI PUSH2 0x11B6 PUSH2 0x2087 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x11E9 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x124C JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1240 JUMPI PUSH2 0x123F PUSH2 0x246D JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x11F7 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1337 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x146B JUMPI PUSH1 0x0 PUSH2 0x1347 DUP5 PUSH2 0xB57 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x13B2 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x13C5 JUMPI POP PUSH2 0x13C3 DUP2 DUP5 PUSH2 0x9E1 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1407 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13FE SWAP2 SWAP1 PUSH2 0x1EE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1469 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x14CF DUP5 PUSH2 0x12C1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1511 JUMPI PUSH2 0x1510 DUP2 DUP5 DUP7 PUSH2 0x1B36 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x15A2 JUMPI PUSH2 0x1553 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x12FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1625 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD SWAP1 POP PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1731 DUP4 PUSH2 0x7F9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 EQ PUSH2 0x1816 JUMPI PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP1 PUSH1 0x6 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x8 DUP1 SLOAD SWAP1 POP PUSH2 0x189B SWAP2 SWAP1 PUSH2 0x2610 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x18CB JUMPI PUSH2 0x18CA PUSH2 0x2335 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x18ED JUMPI PUSH2 0x18EC PUSH2 0x2335 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x9 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x193C JUMPI PUSH2 0x193B PUSH2 0x2644 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x1965 DUP5 PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x196F SWAP2 SWAP1 PUSH2 0x2610 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1A41 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1A37 JUMPI PUSH2 0x1A36 PUSH2 0x246D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1A7E JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1A74 JUMPI PUSH2 0x1A73 PUSH2 0x246D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1AAD JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1AA3 JUMPI PUSH2 0x1AA2 PUSH2 0x246D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1AD6 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1ACC JUMPI PUSH2 0x1ACB PUSH2 0x246D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1AFB JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1AF1 JUMPI PUSH2 0x1AF0 PUSH2 0x246D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1B1E JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1B14 JUMPI PUSH2 0x1B13 PUSH2 0x246D JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1B2D JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B41 DUP4 DUP4 DUP4 PUSH2 0x1BFA JUMP JUMPDEST PUSH2 0x1BF5 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1BB6 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BAD SWAP2 SWAP1 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BEC SWAP3 SWAP2 SWAP1 PUSH2 0x230C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1CB2 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1C73 JUMPI POP PUSH2 0x1C72 DUP5 DUP5 PUSH2 0x9E1 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1CB1 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1C99 DUP4 PUSH2 0xBDF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D04 DUP2 PUSH2 0x1CCF JUMP JUMPDEST DUP2 EQ PUSH2 0x1D0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D21 DUP2 PUSH2 0x1CFB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D3D JUMPI PUSH2 0x1D3C PUSH2 0x1CC5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D4B DUP5 DUP3 DUP6 ADD PUSH2 0x1D12 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D69 DUP2 PUSH2 0x1D54 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D84 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D60 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DC4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1DA9 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DEC DUP3 PUSH2 0x1D8A JUMP JUMPDEST PUSH2 0x1DF6 DUP2 DUP6 PUSH2 0x1D95 JUMP JUMPDEST SWAP4 POP PUSH2 0x1E06 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1DA6 JUMP JUMPDEST PUSH2 0x1E0F DUP2 PUSH2 0x1DD0 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E34 DUP2 DUP5 PUSH2 0x1DE1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E4F DUP2 PUSH2 0x1E3C JUMP JUMPDEST DUP2 EQ PUSH2 0x1E5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E6C DUP2 PUSH2 0x1E46 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E88 JUMPI PUSH2 0x1E87 PUSH2 0x1CC5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E96 DUP5 DUP3 DUP6 ADD PUSH2 0x1E5D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ECA DUP3 PUSH2 0x1E9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EDA DUP2 PUSH2 0x1EBF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EF5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1ED1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F04 DUP2 PUSH2 0x1EBF JUMP JUMPDEST DUP2 EQ PUSH2 0x1F0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F21 DUP2 PUSH2 0x1EFB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F3E JUMPI PUSH2 0x1F3D PUSH2 0x1CC5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F4C DUP6 DUP3 DUP7 ADD PUSH2 0x1F12 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F5D DUP6 DUP3 DUP7 ADD PUSH2 0x1E5D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F70 DUP2 PUSH2 0x1E3C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F8B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F67 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1FAA JUMPI PUSH2 0x1FA9 PUSH2 0x1CC5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FB8 DUP7 DUP3 DUP8 ADD PUSH2 0x1F12 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1FC9 DUP7 DUP3 DUP8 ADD PUSH2 0x1F12 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1FDA DUP7 DUP3 DUP8 ADD PUSH2 0x1E5D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FFA JUMPI PUSH2 0x1FF9 PUSH2 0x1CC5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2008 DUP5 DUP3 DUP6 ADD PUSH2 0x1F12 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x201A DUP2 PUSH2 0x1D54 JUMP JUMPDEST DUP2 EQ PUSH2 0x2025 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2037 DUP2 PUSH2 0x2011 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2054 JUMPI PUSH2 0x2053 PUSH2 0x1CC5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2062 DUP6 DUP3 DUP7 ADD PUSH2 0x1F12 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2073 DUP6 DUP3 DUP7 ADD PUSH2 0x2028 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x20BF DUP3 PUSH2 0x1DD0 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x20DE JUMPI PUSH2 0x20DD PUSH2 0x2087 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20F1 PUSH2 0x1CBB JUMP JUMPDEST SWAP1 POP PUSH2 0x20FD DUP3 DUP3 PUSH2 0x20B6 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x211D JUMPI PUSH2 0x211C PUSH2 0x2087 JUMP JUMPDEST JUMPDEST PUSH2 0x2126 DUP3 PUSH2 0x1DD0 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2155 PUSH2 0x2150 DUP5 PUSH2 0x2102 JUMP JUMPDEST PUSH2 0x20E7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2171 JUMPI PUSH2 0x2170 PUSH2 0x2082 JUMP JUMPDEST JUMPDEST PUSH2 0x217C DUP5 DUP3 DUP6 PUSH2 0x2133 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2199 JUMPI PUSH2 0x2198 PUSH2 0x207D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x21A9 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2142 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x21CC JUMPI PUSH2 0x21CB PUSH2 0x1CC5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21DA DUP8 DUP3 DUP9 ADD PUSH2 0x1F12 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x21EB DUP8 DUP3 DUP9 ADD PUSH2 0x1F12 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x21FC DUP8 DUP3 DUP9 ADD PUSH2 0x1E5D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x221D JUMPI PUSH2 0x221C PUSH2 0x1CCA JUMP JUMPDEST JUMPDEST PUSH2 0x2229 DUP8 DUP3 DUP9 ADD PUSH2 0x2184 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x224C JUMPI PUSH2 0x224B PUSH2 0x1CC5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x225A DUP6 DUP3 DUP7 ADD PUSH2 0x1F12 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x226B DUP6 DUP3 DUP7 ADD PUSH2 0x1F12 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x22BC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x22CF JUMPI PUSH2 0x22CE PUSH2 0x2275 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x22EA PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1ED1 JUMP JUMPDEST PUSH2 0x22F7 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1F67 JUMP JUMPDEST PUSH2 0x2304 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1ED1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2321 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1ED1 JUMP JUMPDEST PUSH2 0x232E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F67 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x239E DUP3 PUSH2 0x1E3C JUMP JUMPDEST SWAP2 POP PUSH2 0x23A9 DUP4 PUSH2 0x1E3C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x23C1 JUMPI PUSH2 0x23C0 PUSH2 0x2364 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23E2 PUSH2 0x23DD DUP3 PUSH2 0x1E3C JUMP JUMPDEST PUSH2 0x23C7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2400 DUP3 PUSH2 0x23E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2412 DUP3 PUSH2 0x23F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x242A PUSH2 0x2425 DUP3 PUSH2 0x1EBF JUMP JUMPDEST PUSH2 0x2407 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x243C DUP3 DUP7 PUSH2 0x23D1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x244C DUP3 DUP6 PUSH2 0x2419 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x245C DUP3 DUP5 PUSH2 0x23D1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x24A7 DUP3 PUSH2 0x1E3C JUMP JUMPDEST SWAP2 POP PUSH2 0x24B2 DUP4 PUSH2 0x1E3C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x24C2 JUMPI PUSH2 0x24C1 PUSH2 0x246D JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24E3 DUP3 PUSH2 0x1D8A JUMP JUMPDEST PUSH2 0x24ED DUP2 DUP6 PUSH2 0x24CD JUMP JUMPDEST SWAP4 POP PUSH2 0x24FD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1DA6 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2515 DUP3 DUP6 PUSH2 0x24D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2521 DUP3 DUP5 PUSH2 0x24D8 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2554 DUP3 PUSH2 0x252D JUMP JUMPDEST PUSH2 0x255E DUP2 DUP6 PUSH2 0x2538 JUMP JUMPDEST SWAP4 POP PUSH2 0x256E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1DA6 JUMP JUMPDEST PUSH2 0x2577 DUP2 PUSH2 0x1DD0 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2597 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1ED1 JUMP JUMPDEST PUSH2 0x25A4 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1ED1 JUMP JUMPDEST PUSH2 0x25B1 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1F67 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x25C3 DUP2 DUP5 PUSH2 0x2549 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x25DD DUP2 PUSH2 0x1CFB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25F9 JUMPI PUSH2 0x25F8 PUSH2 0x1CC5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2607 DUP5 DUP3 DUP6 ADD PUSH2 0x25CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x261B DUP3 PUSH2 0x1E3C JUMP JUMPDEST SWAP2 POP PUSH2 0x2626 DUP4 PUSH2 0x1E3C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x263E JUMPI PUSH2 0x263D PUSH2 0x2364 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD 0xE7 0xC4 MCOPY XOR PUSH16 0x98E758D55C0A8928F07D9061E557D09C 0xF 0x1E 0xB3 SWAP5 PUSH22 0x4BE880B32564736F6C634300081A0033000000000000 ",
							"sourceMap": "146:480:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1435:222:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3497:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3323:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2062:102:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4143:578:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1736:255:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4787:132:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;256:46:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2236:226:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;311:312:13;;;:::i;:::-;;2185:118:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1920:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2518:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3718:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4985:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2677:255;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3928:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1435:222:4;1537:4;1575:35;1560:50;;;:11;:50;;;;:90;;;;1614:36;1638:11;1614:23;:36::i;:::-;1560:90;1553:97;;1435:222;;;:::o;2365:89:1:-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;;3623:21;3636:7;3623:12;:21::i;:::-;3616:28;;3497:154;;;:::o;3323:113::-;3394:35;3403:2;3407:7;3416:12;:10;:12::i;:::-;3394:8;:35::i;:::-;3323:113;;:::o;2062:102:4:-;2114:7;2140:10;:17;;;;2133:24;;2062:102;:::o;4143:578:1:-;4251:1;4237:16;;:2;:16;;;4233:87;;4306:1;4276:33;;;;;;;;;;;:::i;:::-;;;;;;;;4233:87;4538:21;4562:34;4570:2;4574:7;4583:12;:10;:12::i;:::-;4562:7;:34::i;:::-;4538:58;;4627:4;4610:21;;:13;:21;;;4606:109;;4675:4;4681:7;4690:13;4654:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4606:109;4223:498;4143:578;;;:::o;1736:255:4:-;1824:7;1856:16;1866:5;1856:9;:16::i;:::-;1847:5;:25;1843:99;;1918:5;1925;1895:36;;;;;;;;;;;;:::i;:::-;;;;;;;;1843:99;1958:12;:19;1971:5;1958:19;;;;;;;;;;;;;;;:26;1978:5;1958:26;;;;;;;;;;;;1951:33;;1736:255;;;;:::o;4787:132:1:-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;:::-;4787:132;;;:::o;256:46:13:-;;;;;;;;;;;;;;;;;:::o;2236:226:4:-;2302:7;2334:13;:11;:13::i;:::-;2325:5;:22;2321:101;;2401:1;2405:5;2370:41;;;;;;;;;;;;:::i;:::-;;;;;;;;2321:101;2438:10;2449:5;2438:17;;;;;;;;:::i;:::-;;;;;;;;;;2431:24;;2236:226;;;:::o;311:312:13:-;356:21;396:1;380:13;:11;:13::i;:::-;:17;;;;:::i;:::-;356:41;;410:18;518:1;514;466:15;483:10;495:13;449:60;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;439:71;;;;;;431:80;;:84;;;;:::i;:::-;:88;;;;:::i;:::-;410:109;;560:10;531:11;:26;543:13;531:26;;;;;;;;;;;:39;;;;582:32;588:10;600:13;582:5;:32::i;:::-;345:278;;311:312::o;2185:118:1:-;2248:7;2274:22;2288:7;2274:13;:22::i;:::-;2267:29;;2185:118;;;:::o;1920:208::-;1983:7;2023:1;2006:19;;:5;:19;;;2002:87;;2075:1;2048:30;;;;;;;;;;;:::i;:::-;;;;;;;;2002:87;2105:9;:16;2115:5;2105:16;;;;;;;;;;;;;;;;2098:23;;1920:208;;;:::o;2518:93::-;2565:13;2597:7;2590:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2518:93;:::o;3718:144::-;3803:52;3822:12;:10;:12::i;:::-;3836:8;3846;3803:18;:52::i;:::-;3718:144;;:::o;4985:208::-;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;:::-;4985:208;;;;:::o;2677:255::-;2741:13;2766:22;2780:7;2766:13;:22::i;:::-;;2799:21;2823:10;:8;:10::i;:::-;2799:34;;2874:1;2856:7;2850:21;:25;:75;;;;;;;;;;;;;;;;;2892:7;2901:18;:7;:16;:18::i;:::-;2878:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2850:75;2843:82;;;2677:255;;;:::o;3928:153::-;4016:4;4039:18;:25;4058:5;4039:25;;;;;;;;;;;;;;;:35;4065:8;4039:35;;;;;;;;;;;;;;;;;;;;;;;;;4032:42;;3928:153;;;;:::o;1561:300::-;1663:4;1713:25;1698:40;;;:11;:40;;;;:104;;;;1769:33;1754:48;;;:11;:48;;;;1698:104;:156;;;;1818:36;1842:11;1818:23;:36::i;:::-;1698:156;1679:175;;1561:300;;;:::o;16138:241::-;16201:7;16220:13;16236:17;16245:7;16236:8;:17::i;:::-;16220:33;;16284:1;16267:19;;:5;:19;;;16263:88;;16332:7;16309:31;;;;;;;;;;;:::i;:::-;;;;;;;;16263:88;16367:5;16360:12;;;16138:241;;;:::o;5938:127::-;6008:7;6034:15;:24;6050:7;6034:24;;;;;;;;;;;;;;;;;;;;;6027:31;;5938:127;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;14418:120:1:-;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;:::-;14418:120;;;:::o;2518:625:4:-;2613:7;2632:21;2656:32;2670:2;2674:7;2683:4;2656:13;:32::i;:::-;2632:56;;2728:1;2703:27;;:13;:27;;;2699:210;;2746:40;2778:7;2746:31;:40::i;:::-;2699:210;;;2824:2;2807:19;;:13;:19;;;2803:106;;2842:56;2875:13;2890:7;2842:32;:56::i;:::-;2803:106;2699:210;2936:1;2922:16;;:2;:16;;;2918:188;;2954:45;2991:7;2954:36;:45::i;:::-;2918:188;;;3037:2;3020:19;;:13;:19;;;3016:90;;3055:40;3083:2;3087:7;3055:27;:40::i;:::-;3016:90;2918:188;3123:13;3116:20;;;2518:625;;;;;:::o;9955:327:1:-;10036:1;10022:16;;:2;:16;;;10018:87;;10091:1;10061:33;;;;;;;;;;;:::i;:::-;;;;;;;;10018:87;10114:21;10138:32;10146:2;10150:7;10167:1;10138:7;:32::i;:::-;10114:56;;10209:1;10184:27;;:13;:27;;;10180:96;;10262:1;10234:31;;;;;;;;;;;:::i;:::-;;;;;;;;10180:96;10008:274;9955:327;;:::o;15591:312::-;15718:1;15698:22;;:8;:22;;;15694:91;;15765:8;15743:31;;;;;;;;;;;:::i;:::-;;;;;;;;15694:91;15832:8;15794:18;:25;15813:5;15794:25;;;;;;;;;;;;;;;:35;15820:8;15794:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15877:8;15855:41;;15870:5;15855:41;;;15887:8;15855:41;;;;;;:::i;:::-;;;;;;;;15591:312;;;:::o;16918:782::-;17051:1;17034:2;:14;;;:18;17030:664;;;17088:2;17072:36;;;17109:12;:10;:12::i;:::-;17123:4;17129:7;17138:4;17072:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17398:1;17381:6;:13;:18;17377:293;;17452:2;17430:25;;;;;;;;;;;:::i;:::-;;;;;;;;17377:293;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;17200:41;;;17190:51;;;:6;:51;;;;17186:130;;17294:2;17272:25;;;;;;;;;;;:::i;:::-;;;;;;;;17186:130;17144:186;17030:664;16918:782;;;;:::o;3174:92::-;3225:13;3250:9;;;;;;;;;;;;;;3174:92;:::o;637:698:8:-;693:13;742:14;779:1;759:17;770:5;759:10;:17::i;:::-;:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:41;;849:11;975:6;971:2;967:15;959:6;955:28;948:35;;1010:282;1017:4;1010:282;;;1041:5;;;;;;;;1180:10;1175:2;1168:5;1164:14;1159:32;1154:3;1146:46;1236:2;1227:11;;;;;;:::i;:::-;;;;;1269:1;1260:5;:10;1010:282;1256:21;1010:282;1312:6;1305:13;;;;;637:698;;;:::o;762:146:9:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;5707:115:1:-;5773:7;5799;:16;5807:7;5799:16;;;;;;;;;;;;;;;;;;;;;5792:23;;5707:115;;;:::o;14720:662::-;14880:9;:31;;;;14909:1;14893:18;;:4;:18;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;;15109:1;15093:18;;:4;:18;;;;:35;;;;;15124:4;15115:13;;:5;:13;;;;15093:35;:69;;;;;15133:29;15150:5;15157:4;15133:16;:29::i;:::-;15132:30;15093:69;15089:142;;;15211:4;15189:27;;;;;;;;;;;:::i;:::-;;;;;;;;15089:142;15249:9;15245:81;;;15303:7;15299:2;15283:28;;15292:5;15283:28;;;;;;;;;;;;15245:81;14913:423;14876:460;15373:2;15346:15;:24;15362:7;15346:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14720:662;;;;:::o;8838:795::-;8924:7;8943:12;8958:17;8967:7;8958:8;:17::i;:::-;8943:32;;9051:1;9035:18;;:4;:18;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;9031:86;9177:1;9161:18;;:4;:18;;;9157:256;;9277:48;9294:1;9298:7;9315:1;9319:5;9277:8;:48::i;:::-;9387:1;9368:9;:15;9378:4;9368:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9157:256;9441:1;9427:16;;:2;:16;;;9423:107;;9504:1;9487:9;:13;9497:2;9487:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9423:107;9559:2;9540:7;:16;9548:7;9540:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9596:7;9592:2;9577:27;;9586:4;9577:27;;;;;;;;;;;;9622:4;9615:11;;;8838:795;;;;;:::o;3846:161:4:-;3949:10;:17;;;;3922:15;:24;3938:7;3922:24;;;;;;;;;;;:44;;;;3976:10;3992:7;3976:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3846:161;:::o;4624:959::-;4886:22;4911:15;4921:4;4911:9;:15::i;:::-;4886:40;;4936:18;4957:17;:26;4975:7;4957:26;;;;;;;;;;;;4936:47;;5101:14;5087:10;:28;5083:323;;5131:19;5153:12;:18;5166:4;5153:18;;;;;;;;;;;;;;;:34;5172:14;5153:34;;;;;;;;;;;;5131:56;;5235:11;5202:12;:18;5215:4;5202:18;;;;;;;;;;;;;;;:30;5221:10;5202:30;;;;;;;;;;;:44;;;;5351:10;5318:17;:30;5336:11;5318:30;;;;;;;;;;;:43;;;;5117:289;5083:323;5499:17;:26;5517:7;5499:26;;;;;;;;;;;5492:33;;;5542:12;:18;5555:4;5542:18;;;;;;;;;;;;;;;:34;5561:14;5542:34;;;;;;;;;;;5535:41;;;4705:878;;4624:959;;:::o;5871:1061::-;6120:22;6165:1;6145:10;:17;;;;:21;;;;:::i;:::-;6120:46;;6176:18;6197:15;:24;6213:7;6197:24;;;;;;;;;;;;6176:45;;6543:19;6565:10;6576:14;6565:26;;;;;;;;:::i;:::-;;;;;;;;;;6543:48;;6627:11;6602:10;6613;6602:22;;;;;;;;:::i;:::-;;;;;;;;;:36;;;;6737:10;6706:15;:28;6722:11;6706:28;;;;;;;;;;;:41;;;;6875:15;:24;6891:7;6875:24;;;;;;;;;;;6868:31;;;6909:10;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5942:990;;;5871:1061;:::o;3437:214::-;3521:14;3554:1;3538:13;3548:2;3538:9;:13::i;:::-;:17;;;;:::i;:::-;3521:34;;3592:7;3565:12;:16;3578:2;3565:16;;;;;;;;;;;;;;;:24;3582:6;3565:24;;;;;;;;;;;:34;;;;3638:6;3609:17;:26;3627:7;3609:26;;;;;;;;;;;:35;;;;3511:140;3437:214;;:::o;12214:916:11:-;12267:7;12286:14;12303:1;12286:18;;12351:8;12342:5;:17;12338:103;;12388:8;12379:17;;;;;;:::i;:::-;;;;;12424:2;12414:12;;;;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;;;;:::i;:::-;;;;;12540:2;12530:12;;;;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;;;;:::i;:::-;;;;;12656:2;12646:12;;;;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;;;;:::i;:::-;;;;;12770:1;12760:11;;;;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;;;;:::i;:::-;;;;;12883:1;12873:11;;;;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;;;;:::i;:::-;;;;;12996:1;12986:11;;;;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;;;;13025:66;13117:6;13110:13;;;12214:916;;;:::o;7082:368:1:-;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;7269:1;7252:19;;:5;:19;;;7248:186;;7321:7;7298:31;;;;;;;;;;;:::i;:::-;;;;;;;;7248:186;7402:7;7411;7375:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7189:255;7082:368;;;:::o;6376:272::-;6479:4;6533:1;6514:21;;:7;:21;;;;:127;;;;;6561:7;6552:16;;:5;:16;;;:52;;;;6572:32;6589:5;6596:7;6572:16;:32::i;:::-;6552:52;:88;;;;6633:7;6608:32;;:21;6621:7;6608:12;:21::i;:::-;:32;;;6552:88;6514:127;6495:146;;6376:272;;;;;:::o;7:75:15:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:248::-;1880:1;1890:113;1904:6;1901:1;1898:13;1890:113;;;1989:1;1984:3;1980:11;1974:18;1970:1;1965:3;1961:11;1954:39;1926:2;1923:1;1919:10;1914:15;;1890:113;;;2037:1;2028:6;2023:3;2019:16;2012:27;1860:186;1798:248;;;:::o;2052:102::-;2093:6;2144:2;2140:7;2135:2;2128:5;2124:14;2120:28;2110:38;;2052:102;;;:::o;2160:377::-;2248:3;2276:39;2309:5;2276:39;:::i;:::-;2331:71;2395:6;2390:3;2331:71;:::i;:::-;2324:78;;2411:65;2469:6;2464:3;2457:4;2450:5;2446:16;2411:65;:::i;:::-;2501:29;2523:6;2501:29;:::i;:::-;2496:3;2492:39;2485:46;;2252:285;2160:377;;;;:::o;2543:313::-;2656:4;2694:2;2683:9;2679:18;2671:26;;2743:9;2737:4;2733:20;2729:1;2718:9;2714:17;2707:47;2771:78;2844:4;2835:6;2771:78;:::i;:::-;2763:86;;2543:313;;;;:::o;2862:77::-;2899:7;2928:5;2917:16;;2862:77;;;:::o;2945:122::-;3018:24;3036:5;3018:24;:::i;:::-;3011:5;3008:35;2998:63;;3057:1;3054;3047:12;2998:63;2945:122;:::o;3073:139::-;3119:5;3157:6;3144:20;3135:29;;3173:33;3200:5;3173:33;:::i;:::-;3073:139;;;;:::o;3218:329::-;3277:6;3326:2;3314:9;3305:7;3301:23;3297:32;3294:119;;;3332:79;;:::i;:::-;3294:119;3452:1;3477:53;3522:7;3513:6;3502:9;3498:22;3477:53;:::i;:::-;3467:63;;3423:117;3218:329;;;;:::o;3553:126::-;3590:7;3630:42;3623:5;3619:54;3608:65;;3553:126;;;:::o;3685:96::-;3722:7;3751:24;3769:5;3751:24;:::i;:::-;3740:35;;3685:96;;;:::o;3787:118::-;3874:24;3892:5;3874:24;:::i;:::-;3869:3;3862:37;3787:118;;:::o;3911:222::-;4004:4;4042:2;4031:9;4027:18;4019:26;;4055:71;4123:1;4112:9;4108:17;4099:6;4055:71;:::i;:::-;3911:222;;;;:::o;4139:122::-;4212:24;4230:5;4212:24;:::i;:::-;4205:5;4202:35;4192:63;;4251:1;4248;4241:12;4192:63;4139:122;:::o;4267:139::-;4313:5;4351:6;4338:20;4329:29;;4367:33;4394:5;4367:33;:::i;:::-;4267:139;;;;:::o;4412:474::-;4480:6;4488;4537:2;4525:9;4516:7;4512:23;4508:32;4505:119;;;4543:79;;:::i;:::-;4505:119;4663:1;4688:53;4733:7;4724:6;4713:9;4709:22;4688:53;:::i;:::-;4678:63;;4634:117;4790:2;4816:53;4861:7;4852:6;4841:9;4837:22;4816:53;:::i;:::-;4806:63;;4761:118;4412:474;;;;;:::o;4892:118::-;4979:24;4997:5;4979:24;:::i;:::-;4974:3;4967:37;4892:118;;:::o;5016:222::-;5109:4;5147:2;5136:9;5132:18;5124:26;;5160:71;5228:1;5217:9;5213:17;5204:6;5160:71;:::i;:::-;5016:222;;;;:::o;5244:619::-;5321:6;5329;5337;5386:2;5374:9;5365:7;5361:23;5357:32;5354:119;;;5392:79;;:::i;:::-;5354:119;5512:1;5537:53;5582:7;5573:6;5562:9;5558:22;5537:53;:::i;:::-;5527:63;;5483:117;5639:2;5665:53;5710:7;5701:6;5690:9;5686:22;5665:53;:::i;:::-;5655:63;;5610:118;5767:2;5793:53;5838:7;5829:6;5818:9;5814:22;5793:53;:::i;:::-;5783:63;;5738:118;5244:619;;;;;:::o;5869:329::-;5928:6;5977:2;5965:9;5956:7;5952:23;5948:32;5945:119;;;5983:79;;:::i;:::-;5945:119;6103:1;6128:53;6173:7;6164:6;6153:9;6149:22;6128:53;:::i;:::-;6118:63;;6074:117;5869:329;;;;:::o;6204:116::-;6274:21;6289:5;6274:21;:::i;:::-;6267:5;6264:32;6254:60;;6310:1;6307;6300:12;6254:60;6204:116;:::o;6326:133::-;6369:5;6407:6;6394:20;6385:29;;6423:30;6447:5;6423:30;:::i;:::-;6326:133;;;;:::o;6465:468::-;6530:6;6538;6587:2;6575:9;6566:7;6562:23;6558:32;6555:119;;;6593:79;;:::i;:::-;6555:119;6713:1;6738:53;6783:7;6774:6;6763:9;6759:22;6738:53;:::i;:::-;6728:63;;6684:117;6840:2;6866:50;6908:7;6899:6;6888:9;6884:22;6866:50;:::i;:::-;6856:60;;6811:115;6465:468;;;;;:::o;6939:117::-;7048:1;7045;7038:12;7062:117;7171:1;7168;7161:12;7185:180;7233:77;7230:1;7223:88;7330:4;7327:1;7320:15;7354:4;7351:1;7344:15;7371:281;7454:27;7476:4;7454:27;:::i;:::-;7446:6;7442:40;7584:6;7572:10;7569:22;7548:18;7536:10;7533:34;7530:62;7527:88;;;7595:18;;:::i;:::-;7527:88;7635:10;7631:2;7624:22;7414:238;7371:281;;:::o;7658:129::-;7692:6;7719:20;;:::i;:::-;7709:30;;7748:33;7776:4;7768:6;7748:33;:::i;:::-;7658:129;;;:::o;7793:307::-;7854:4;7944:18;7936:6;7933:30;7930:56;;;7966:18;;:::i;:::-;7930:56;8004:29;8026:6;8004:29;:::i;:::-;7996:37;;8088:4;8082;8078:15;8070:23;;7793:307;;;:::o;8106:148::-;8204:6;8199:3;8194;8181:30;8245:1;8236:6;8231:3;8227:16;8220:27;8106:148;;;:::o;8260:423::-;8337:5;8362:65;8378:48;8419:6;8378:48;:::i;:::-;8362:65;:::i;:::-;8353:74;;8450:6;8443:5;8436:21;8488:4;8481:5;8477:16;8526:3;8517:6;8512:3;8508:16;8505:25;8502:112;;;8533:79;;:::i;:::-;8502:112;8623:54;8670:6;8665:3;8660;8623:54;:::i;:::-;8343:340;8260:423;;;;;:::o;8702:338::-;8757:5;8806:3;8799:4;8791:6;8787:17;8783:27;8773:122;;8814:79;;:::i;:::-;8773:122;8931:6;8918:20;8956:78;9030:3;9022:6;9015:4;9007:6;9003:17;8956:78;:::i;:::-;8947:87;;8763:277;8702:338;;;;:::o;9046:943::-;9141:6;9149;9157;9165;9214:3;9202:9;9193:7;9189:23;9185:33;9182:120;;;9221:79;;:::i;:::-;9182:120;9341:1;9366:53;9411:7;9402:6;9391:9;9387:22;9366:53;:::i;:::-;9356:63;;9312:117;9468:2;9494:53;9539:7;9530:6;9519:9;9515:22;9494:53;:::i;:::-;9484:63;;9439:118;9596:2;9622:53;9667:7;9658:6;9647:9;9643:22;9622:53;:::i;:::-;9612:63;;9567:118;9752:2;9741:9;9737:18;9724:32;9783:18;9775:6;9772:30;9769:117;;;9805:79;;:::i;:::-;9769:117;9910:62;9964:7;9955:6;9944:9;9940:22;9910:62;:::i;:::-;9900:72;;9695:287;9046:943;;;;;;;:::o;9995:474::-;10063:6;10071;10120:2;10108:9;10099:7;10095:23;10091:32;10088:119;;;10126:79;;:::i;:::-;10088:119;10246:1;10271:53;10316:7;10307:6;10296:9;10292:22;10271:53;:::i;:::-;10261:63;;10217:117;10373:2;10399:53;10444:7;10435:6;10424:9;10420:22;10399:53;:::i;:::-;10389:63;;10344:118;9995:474;;;;;:::o;10475:180::-;10523:77;10520:1;10513:88;10620:4;10617:1;10610:15;10644:4;10641:1;10634:15;10661:320;10705:6;10742:1;10736:4;10732:12;10722:22;;10789:1;10783:4;10779:12;10810:18;10800:81;;10866:4;10858:6;10854:17;10844:27;;10800:81;10928:2;10920:6;10917:14;10897:18;10894:38;10891:84;;10947:18;;:::i;:::-;10891:84;10712:269;10661:320;;;:::o;10987:442::-;11136:4;11174:2;11163:9;11159:18;11151:26;;11187:71;11255:1;11244:9;11240:17;11231:6;11187:71;:::i;:::-;11268:72;11336:2;11325:9;11321:18;11312:6;11268:72;:::i;:::-;11350;11418:2;11407:9;11403:18;11394:6;11350:72;:::i;:::-;10987:442;;;;;;:::o;11435:332::-;11556:4;11594:2;11583:9;11579:18;11571:26;;11607:71;11675:1;11664:9;11660:17;11651:6;11607:71;:::i;:::-;11688:72;11756:2;11745:9;11741:18;11732:6;11688:72;:::i;:::-;11435:332;;;;;:::o;11773:180::-;11821:77;11818:1;11811:88;11918:4;11915:1;11908:15;11942:4;11939:1;11932:15;11959:180;12007:77;12004:1;11997:88;12104:4;12101:1;12094:15;12128:4;12125:1;12118:15;12145:191;12185:3;12204:20;12222:1;12204:20;:::i;:::-;12199:25;;12238:20;12256:1;12238:20;:::i;:::-;12233:25;;12281:1;12278;12274:9;12267:16;;12302:3;12299:1;12296:10;12293:36;;;12309:18;;:::i;:::-;12293:36;12145:191;;;;:::o;12342:79::-;12381:7;12410:5;12399:16;;12342:79;;;:::o;12427:157::-;12532:45;12552:24;12570:5;12552:24;:::i;:::-;12532:45;:::i;:::-;12527:3;12520:58;12427:157;;:::o;12590:94::-;12623:8;12671:5;12667:2;12663:14;12642:35;;12590:94;;;:::o;12690:::-;12729:7;12758:20;12772:5;12758:20;:::i;:::-;12747:31;;12690:94;;;:::o;12790:100::-;12829:7;12858:26;12878:5;12858:26;:::i;:::-;12847:37;;12790:100;;;:::o;12896:157::-;13001:45;13021:24;13039:5;13021:24;:::i;:::-;13001:45;:::i;:::-;12996:3;12989:58;12896:157;;:::o;13059:538::-;13227:3;13242:75;13313:3;13304:6;13242:75;:::i;:::-;13342:2;13337:3;13333:12;13326:19;;13355:75;13426:3;13417:6;13355:75;:::i;:::-;13455:2;13450:3;13446:12;13439:19;;13468:75;13539:3;13530:6;13468:75;:::i;:::-;13568:2;13563:3;13559:12;13552:19;;13588:3;13581:10;;13059:538;;;;;;:::o;13603:180::-;13651:77;13648:1;13641:88;13748:4;13745:1;13738:15;13772:4;13769:1;13762:15;13789:176;13821:1;13838:20;13856:1;13838:20;:::i;:::-;13833:25;;13872:20;13890:1;13872:20;:::i;:::-;13867:25;;13911:1;13901:35;;13916:18;;:::i;:::-;13901:35;13957:1;13954;13950:9;13945:14;;13789:176;;;;:::o;13971:148::-;14073:11;14110:3;14095:18;;13971:148;;;;:::o;14125:390::-;14231:3;14259:39;14292:5;14259:39;:::i;:::-;14314:89;14396:6;14391:3;14314:89;:::i;:::-;14307:96;;14412:65;14470:6;14465:3;14458:4;14451:5;14447:16;14412:65;:::i;:::-;14502:6;14497:3;14493:16;14486:23;;14235:280;14125:390;;;;:::o;14521:435::-;14701:3;14723:95;14814:3;14805:6;14723:95;:::i;:::-;14716:102;;14835:95;14926:3;14917:6;14835:95;:::i;:::-;14828:102;;14947:3;14940:10;;14521:435;;;;;:::o;14962:98::-;15013:6;15047:5;15041:12;15031:22;;14962:98;;;:::o;15066:168::-;15149:11;15183:6;15178:3;15171:19;15223:4;15218:3;15214:14;15199:29;;15066:168;;;;:::o;15240:373::-;15326:3;15354:38;15386:5;15354:38;:::i;:::-;15408:70;15471:6;15466:3;15408:70;:::i;:::-;15401:77;;15487:65;15545:6;15540:3;15533:4;15526:5;15522:16;15487:65;:::i;:::-;15577:29;15599:6;15577:29;:::i;:::-;15572:3;15568:39;15561:46;;15330:283;15240:373;;;;:::o;15619:640::-;15814:4;15852:3;15841:9;15837:19;15829:27;;15866:71;15934:1;15923:9;15919:17;15910:6;15866:71;:::i;:::-;15947:72;16015:2;16004:9;16000:18;15991:6;15947:72;:::i;:::-;16029;16097:2;16086:9;16082:18;16073:6;16029:72;:::i;:::-;16148:9;16142:4;16138:20;16133:2;16122:9;16118:18;16111:48;16176:76;16247:4;16238:6;16176:76;:::i;:::-;16168:84;;15619:640;;;;;;;:::o;16265:141::-;16321:5;16352:6;16346:13;16337:22;;16368:32;16394:5;16368:32;:::i;:::-;16265:141;;;;:::o;16412:349::-;16481:6;16530:2;16518:9;16509:7;16505:23;16501:32;16498:119;;;16536:79;;:::i;:::-;16498:119;16656:1;16681:63;16736:7;16727:6;16716:9;16712:22;16681:63;:::i;:::-;16671:73;;16627:127;16412:349;;;;:::o;16767:194::-;16807:4;16827:20;16845:1;16827:20;:::i;:::-;16822:25;;16861:20;16879:1;16861:20;:::i;:::-;16856:25;;16905:1;16902;16898:9;16890:17;;16929:1;16923:4;16920:11;16917:37;;;16934:18;;:::i;:::-;16917:37;16767:194;;;;:::o;16967:180::-;17015:77;17012:1;17005:88;17112:4;17109:1;17102:15;17136:4;17133:1;17126:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1979400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"animalTypes(uint256)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"getApproved(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"mintAnimalToken()": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "886",
								"symbol()": "infinite",
								"tokenByIndex(uint256)": "infinite",
								"tokenOfOwnerByIndex(address,uint256)": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "2468",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 146,
									"end": 626,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 146,
									"end": 626,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 146,
									"end": 626,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 198,
									"end": 247,
									"name": "CALLVALUE",
									"source": 13
								},
								{
									"begin": 198,
									"end": 247,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 198,
									"end": 247,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 198,
									"end": 247,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 198,
									"end": 247,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 198,
									"end": 247,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 247,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 198,
									"end": 247,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 198,
									"end": 247,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 198,
									"end": 247,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 198,
									"end": 247,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "626F757267656F6973416E696D616C7300000000000000000000000000000000"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "4241530000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1455,
									"end": 1460,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1447,
									"end": 1452,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1447,
									"end": 1460,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1480,
									"end": 1487,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1477,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1470,
									"end": 1487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 626,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "9"
								},
								{
									"begin": 146,
									"end": 626,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 15,
									"value": "10"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 15,
									"value": "11"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 15,
									"value": "12"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 15,
									"value": "13"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 15
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "35"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 15,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 15,
									"value": "35"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "36"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "37"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "12"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 15,
									"value": "37"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 15,
									"value": "36"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 15,
									"value": "14"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 15
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 15,
									"value": "15"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 15
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 15,
									"value": "16"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 15,
									"value": "17"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 15,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "42"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "16"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 15,
									"value": "42"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "43"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "16"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 15,
									"value": "43"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 15
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 15
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 15,
									"value": "18"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 15,
									"value": "19"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "47"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "48"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "49"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "18"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 15,
									"value": "49"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "19"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 15,
									"value": "48"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "18"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 15,
									"value": "47"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 15,
									"value": "21"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "52"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 15,
									"value": "52"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "53"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "54"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "21"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 15,
									"value": "54"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 15
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "17"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 15,
									"value": "53"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 15,
									"value": "23"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "57"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "23"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 15,
									"value": "57"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "58"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 15,
									"value": "58"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 15,
									"value": "25"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 15,
									"value": "60"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "62"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "63"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 15,
									"value": "63"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "60"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 15,
									"value": "62"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 15,
									"value": "26"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "65"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "66"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "14"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 15,
									"value": "66"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "67"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "15"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 15,
									"value": "67"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "68"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 15,
									"value": "68"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "69"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "70"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "15"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 15,
									"value": "70"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "25"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 15,
									"value": "69"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 15,
									"value": "65"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 15,
									"value": "27"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 15,
									"value": "28"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 15,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "27"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 15,
									"value": "29"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "75"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "28"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 15,
									"value": "75"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 15
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 15,
									"value": "6"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "77"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "10"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 15,
									"value": "77"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "78"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "79"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "11"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 15,
									"value": "79"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 15,
									"value": "78"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "80"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 15
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "13"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 15,
									"value": "80"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "81"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "26"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 15,
									"value": "81"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "83"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "84"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 15
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 15,
									"value": "84"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "85"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "29"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 15,
									"value": "85"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "82"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 15,
									"value": "83"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "86"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "14"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 15,
									"value": "86"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 15,
									"value": "87"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "89"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 15
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 15
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "87"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 15,
									"value": "89"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "90"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 15
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "91"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 15
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "28"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 15,
									"value": "91"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 15,
									"value": "90"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 15
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 15
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 15,
									"value": "82"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 146,
									"end": 626,
									"name": "tag",
									"source": 13,
									"value": "9"
								},
								{
									"begin": 146,
									"end": 626,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 146,
									"end": 626,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 626,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 146,
									"end": 626,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 626,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 626,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 146,
									"end": 626,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 626,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122035e7c45e186f98e758d55c0a8928f07d9061e557d09c0f1eb394754be880b32564736f6c634300081a0033",
									".code": [
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "tag",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH",
											"source": 13,
											"value": "4F6CCCE7"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH",
											"source": 13,
											"value": "95D89B41"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH",
											"source": 13,
											"value": "95D89B41"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH",
											"source": 13,
											"value": "A22CB465"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH",
											"source": 13,
											"value": "B88D4FDE"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH",
											"source": 13,
											"value": "C87B56DD"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH",
											"source": 13,
											"value": "E985E9C5"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "tag",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH",
											"source": 13,
											"value": "4F6CCCE7"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH",
											"source": 13,
											"value": "62B4C27F"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH",
											"source": 13,
											"value": "6352211E"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH",
											"source": 13,
											"value": "70A08231"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "tag",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH",
											"source": 13,
											"value": "18160DDD"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH",
											"source": 13,
											"value": "18160DDD"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH",
											"source": 13,
											"value": "23B872DD"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH",
											"source": 13,
											"value": "2F745C59"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH",
											"source": 13,
											"value": "42842E0E"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH",
											"source": 13,
											"value": "4E7FE41E"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "tag",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH",
											"source": 13,
											"value": "1FFC9A7"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH",
											"source": 13,
											"value": "6FDDE03"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH",
											"source": 13,
											"value": "81812FC"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH",
											"source": 13,
											"value": "95EA7B3"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "tag",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 626,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 146,
											"end": 626,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1435,
											"end": 1657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1435,
											"end": 1657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1435,
											"end": 1657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 2062,
											"end": 2164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2062,
											"end": 2164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 1736,
											"end": 1991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1736,
											"end": 1991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1736,
											"end": 1991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 256,
											"end": 302,
											"name": "tag",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 256,
											"end": 302,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 256,
											"end": 302,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 256,
											"end": 302,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 256,
											"end": 302,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 256,
											"end": 302,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 256,
											"end": 302,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 256,
											"end": 302,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 256,
											"end": 302,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 256,
											"end": 302,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 256,
											"end": 302,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 256,
											"end": 302,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 256,
											"end": 302,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 256,
											"end": 302,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 256,
											"end": 302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 256,
											"end": 302,
											"name": "tag",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 256,
											"end": 302,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 256,
											"end": 302,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 256,
											"end": 302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 256,
											"end": 302,
											"name": "tag",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 256,
											"end": 302,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 256,
											"end": 302,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 256,
											"end": 302,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 256,
											"end": 302,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 256,
											"end": 302,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 256,
											"end": 302,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 256,
											"end": 302,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 256,
											"end": 302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 256,
											"end": 302,
											"name": "tag",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 256,
											"end": 302,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 256,
											"end": 302,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 256,
											"end": 302,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 256,
											"end": 302,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 256,
											"end": 302,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 256,
											"end": 302,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 256,
											"end": 302,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 256,
											"end": 302,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2236,
											"end": 2462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2236,
											"end": 2462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2236,
											"end": 2462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 311,
											"end": 623,
											"name": "tag",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 311,
											"end": 623,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 311,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 311,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 311,
											"end": 623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 311,
											"end": 623,
											"name": "tag",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 311,
											"end": 623,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 311,
											"end": 623,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1541,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1610,
											"name": "PUSH",
											"source": 4,
											"value": "780E9D6300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1560,
											"end": 1610,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1560,
											"end": 1610,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1560,
											"end": 1610,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1560,
											"end": 1571,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1560,
											"end": 1610,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1560,
											"end": 1610,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1560,
											"end": 1610,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1560,
											"end": 1610,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1560,
											"end": 1650,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1560,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 1560,
											"end": 1650,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1560,
											"end": 1650,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1614,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1638,
											"end": 1649,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1614,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 1614,
											"end": 1650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1614,
											"end": 1650,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1614,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1560,
											"end": 1650,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 1560,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1553,
											"end": 1650,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1553,
											"end": 1650,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2423,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3564,
											"end": 3571,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 3597,
											"end": 3604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3583,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 3583,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 3636,
											"end": 3643,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 3623,
											"end": 3644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 3403,
											"end": 3405,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 3394,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2114,
											"end": 2121,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2140,
											"end": 2150,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 2140,
											"end": 2157,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2140,
											"end": 2157,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2140,
											"end": 2157,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2140,
											"end": 2157,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2133,
											"end": 2157,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2133,
											"end": 2157,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2062,
											"end": 2164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4252,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4237,
											"end": 4239,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 1,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4276,
											"end": 4309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4538,
											"end": 4559,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 4570,
											"end": 4572,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4574,
											"end": 4581,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 4583,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 4583,
											"end": 4595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4562,
											"end": 4569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 4562,
											"end": 4596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4627,
											"end": 4631,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4610,
											"end": 4623,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4675,
											"end": 4679,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4681,
											"end": 4688,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4703,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 1,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 4654,
											"end": 4704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4223,
											"end": 4721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1831,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1856,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1856,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1856,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1856,
											"end": 1872,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 1856,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1847,
											"end": 1852,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1847,
											"end": 1872,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 1843,
											"end": 1942,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1918,
											"end": 1923,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1925,
											"end": 1930,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "PUSH",
											"source": 4,
											"value": "A57D13DC00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 1895,
											"end": 1931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 1942,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 1843,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1958,
											"end": 1970,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1971,
											"end": 1976,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1978,
											"end": 1983,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1951,
											"end": 1984,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1951,
											"end": 1984,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 4890,
											"end": 4894,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4896,
											"end": 4898,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4900,
											"end": 4907,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 4873,
											"end": 4912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 256,
											"end": 302,
											"name": "tag",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 256,
											"end": 302,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 256,
											"end": 302,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 256,
											"end": 302,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 256,
											"end": 302,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 256,
											"end": 302,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 256,
											"end": 302,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 256,
											"end": 302,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 256,
											"end": 302,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 256,
											"end": 302,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 256,
											"end": 302,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 256,
											"end": 302,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 256,
											"end": 302,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 256,
											"end": 302,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 256,
											"end": 302,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 256,
											"end": 302,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 256,
											"end": 302,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 256,
											"end": 302,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 256,
											"end": 302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2302,
											"end": 2309,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2325,
											"end": 2330,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2325,
											"end": 2347,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 2321,
											"end": 2422,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2401,
											"end": 2402,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2405,
											"end": 2410,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "PUSH",
											"source": 4,
											"value": "A57D13DC00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 2370,
											"end": 2411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2422,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 2321,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2448,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 2449,
											"end": 2454,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 2438,
											"end": 2455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2431,
											"end": 2455,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2431,
											"end": 2455,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 311,
											"end": 623,
											"name": "tag",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 311,
											"end": 623,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 356,
											"end": 377,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 396,
											"end": 397,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 380,
											"end": 393,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 380,
											"end": 391,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 380,
											"end": 393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 380,
											"end": 393,
											"name": "tag",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 380,
											"end": 393,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 380,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 380,
											"end": 397,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 380,
											"end": 397,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 380,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 380,
											"end": 397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 380,
											"end": 397,
											"name": "tag",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 380,
											"end": 397,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 356,
											"end": 397,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 356,
											"end": 397,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 410,
											"end": 428,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 518,
											"end": 519,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 514,
											"end": 515,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 466,
											"end": 481,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 483,
											"end": 493,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 495,
											"end": 508,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 449,
											"end": 509,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 449,
											"end": 509,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 449,
											"end": 509,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 449,
											"end": 509,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 449,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 449,
											"end": 509,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 449,
											"end": 509,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 449,
											"end": 509,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 449,
											"end": 509,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 449,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 449,
											"end": 509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 449,
											"end": 509,
											"name": "tag",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 449,
											"end": 509,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 449,
											"end": 509,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 449,
											"end": 509,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 449,
											"end": 509,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 449,
											"end": 509,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 449,
											"end": 509,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 449,
											"end": 509,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 449,
											"end": 509,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 449,
											"end": 509,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 449,
											"end": 509,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 449,
											"end": 509,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 449,
											"end": 509,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 449,
											"end": 509,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 439,
											"end": 510,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 439,
											"end": 510,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 439,
											"end": 510,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 439,
											"end": 510,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 439,
											"end": 510,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 439,
											"end": 510,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 431,
											"end": 511,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 431,
											"end": 511,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 431,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 431,
											"end": 515,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 431,
											"end": 515,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 431,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 431,
											"end": 515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 431,
											"end": 515,
											"name": "tag",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 431,
											"end": 515,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 431,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 431,
											"end": 519,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 431,
											"end": 519,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 431,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 431,
											"end": 519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 431,
											"end": 519,
											"name": "tag",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 431,
											"end": 519,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 410,
											"end": 519,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 410,
											"end": 519,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 560,
											"end": 570,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 531,
											"end": 542,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 531,
											"end": 557,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 543,
											"end": 556,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 531,
											"end": 557,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 531,
											"end": 557,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 531,
											"end": 557,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 531,
											"end": 557,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 531,
											"end": 557,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 531,
											"end": 557,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 531,
											"end": 557,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 531,
											"end": 557,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 531,
											"end": 557,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 531,
											"end": 557,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 531,
											"end": 557,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 531,
											"end": 570,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 531,
											"end": 570,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 531,
											"end": 570,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 531,
											"end": 570,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 582,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "153"
										},
										{
											"begin": 588,
											"end": 598,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 600,
											"end": 613,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 582,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 582,
											"end": 614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 582,
											"end": 614,
											"name": "tag",
											"source": 13,
											"value": "153"
										},
										{
											"begin": 582,
											"end": 614,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 345,
											"end": 623,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 345,
											"end": 623,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 311,
											"end": 623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 2288,
											"end": 2295,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2274,
											"end": 2296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 1990,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2024,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2011,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 1,
											"value": "89C62B6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2048,
											"end": 2078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2114,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2115,
											"end": 2120,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2578,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2597,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 3822,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 3822,
											"end": 3834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3836,
											"end": 3844,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3803,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 3803,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 5111,
											"end": 5115,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5117,
											"end": 5119,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 5098,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 5162,
											"end": 5166,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5168,
											"end": 5170,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5172,
											"end": 5179,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5185,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5139,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 5139,
											"end": 5186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2741,
											"end": 2754,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 2780,
											"end": 2787,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2766,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2799,
											"end": 2820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 2823,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 2823,
											"end": 2833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2874,
											"end": 2875,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2871,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2899,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2901,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 2901,
											"end": 2919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 2878,
											"end": 2920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4016,
											"end": 4020,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4063,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4073,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1663,
											"end": 1667,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1738,
											"name": "PUSH",
											"source": 1,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1709,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1769,
											"end": 1802,
											"name": "PUSH",
											"source": 1,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1765,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 1842,
											"end": 1853,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1818,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 1818,
											"end": 1854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16201,
											"end": 16208,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16220,
											"end": 16233,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 16245,
											"end": 16252,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16236,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 16236,
											"end": 16253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16284,
											"end": 16285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16267,
											"end": 16272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16332,
											"end": 16339,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 1,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 16309,
											"end": 16340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16367,
											"end": 16372,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16138,
											"end": 16379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6049,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6050,
											"end": 6057,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5938,
											"end": 6065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 14507,
											"end": 14509,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14511,
											"end": 14518,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14520,
											"end": 14524,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14526,
											"end": 14530,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 14498,
											"end": 14506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 14498,
											"end": 14531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14418,
											"end": 14538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 3143,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 2518,
											"end": 3143,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2613,
											"end": 2620,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2632,
											"end": 2653,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 2670,
											"end": 2672,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2674,
											"end": 2681,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2683,
											"end": 2687,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 2656,
											"end": 2688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2688,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 2656,
											"end": 2688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2728,
											"end": 2729,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2703,
											"end": 2730,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2703,
											"end": 2730,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2716,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2730,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2703,
											"end": 2730,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2730,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2699,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 2699,
											"end": 2909,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 2778,
											"end": 2785,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2746,
											"end": 2777,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 2746,
											"end": 2786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2699,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 2699,
											"end": 2909,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2699,
											"end": 2909,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 2699,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2824,
											"end": 2826,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2826,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2807,
											"end": 2826,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2820,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2826,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2807,
											"end": 2826,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2826,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 2803,
											"end": 2909,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 2875,
											"end": 2888,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2890,
											"end": 2897,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 2842,
											"end": 2898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2898,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 2842,
											"end": 2898,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2909,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 2803,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2699,
											"end": 2909,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 2699,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2936,
											"end": 2937,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2922,
											"end": 2938,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2922,
											"end": 2938,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2924,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2938,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2922,
											"end": 2938,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2938,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2918,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 2918,
											"end": 3106,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2954,
											"end": 2999,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 2991,
											"end": 2998,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2954,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 2954,
											"end": 2999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2954,
											"end": 2999,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 2954,
											"end": 2999,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2918,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 2918,
											"end": 3106,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2918,
											"end": 3106,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 2918,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3037,
											"end": 3039,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3039,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3039,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3033,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3039,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3039,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3039,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3016,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 3016,
											"end": 3106,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 3083,
											"end": 3085,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3087,
											"end": 3094,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 3055,
											"end": 3095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "tag",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3016,
											"end": 3106,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 3016,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2918,
											"end": 3106,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 2918,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3123,
											"end": 3136,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3116,
											"end": 3136,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3116,
											"end": 3136,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3116,
											"end": 3136,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 3143,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 3143,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 3143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 3143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 3143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 3143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10036,
											"end": 10037,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10022,
											"end": 10024,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10091,
											"end": 10092,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 1,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 10061,
											"end": 10094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10114,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 10146,
											"end": 10148,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10150,
											"end": 10157,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10167,
											"end": 10168,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 10138,
											"end": 10170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10209,
											"end": 10210,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10184,
											"end": 10197,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10262,
											"end": 10263,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 1,
											"value": "73C6AC6E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 10234,
											"end": 10265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10008,
											"end": 10282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 10282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15718,
											"end": 15719,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15698,
											"end": 15706,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15765,
											"end": 15773,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 1,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 15743,
											"end": 15774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15832,
											"end": 15840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15812,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15813,
											"end": 15818,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15820,
											"end": 15828,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15877,
											"end": 15885,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15870,
											"end": 15875,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 1,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 15887,
											"end": 15895,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 15855,
											"end": 15896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15591,
											"end": 15903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17051,
											"end": 17052,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17034,
											"end": 17036,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 17034,
											"end": 17052,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17088,
											"end": 17090,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 1,
											"value": "150B7A02"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 17109,
											"end": 17119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 17109,
											"end": 17121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17123,
											"end": 17127,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 17129,
											"end": 17136,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17138,
											"end": 17142,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17398,
											"end": 17399,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17381,
											"end": 17387,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17381,
											"end": 17394,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17381,
											"end": 17399,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17452,
											"end": 17454,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 1,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 17430,
											"end": 17455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17622,
											"end": 17628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17616,
											"end": 17629,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17607,
											"end": 17613,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17603,
											"end": 17605,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17599,
											"end": 17614,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17592,
											"end": 17630,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 1,
											"value": "150B7A02"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17190,
											"end": 17196,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17294,
											"end": 17296,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 1,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 17272,
											"end": 17297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17144,
											"end": 17330,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16918,
											"end": 17700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3238,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3174,
											"end": 3266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "tag",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 693,
											"end": 706,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 742,
											"end": 756,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 759,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 759,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 759,
											"end": 776,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 759,
											"end": 780,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 742,
											"end": 780,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 742,
											"end": 780,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 794,
											"end": 814,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 817,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 794,
											"end": 835,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 794,
											"end": 835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 849,
											"end": 860,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 975,
											"end": 981,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 967,
											"end": 982,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 959,
											"end": 965,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 948,
											"end": 983,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 948,
											"end": 983,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1017,
											"end": 1021,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "PUSH",
											"source": 8,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "MOD",
											"source": 8
										},
										{
											"begin": 1159,
											"end": 1191,
											"name": "BYTE",
											"source": 8
										},
										{
											"begin": 1154,
											"end": 1157,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1146,
											"end": 1192,
											"name": "MSTORE8",
											"source": 8
										},
										{
											"begin": 1236,
											"end": 1238,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 1227,
											"end": 1238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1265,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1260,
											"end": 1270,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 637,
											"end": 1335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 9,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5773,
											"end": 5780,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5806,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5807,
											"end": 5814,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5707,
											"end": 5822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14880,
											"end": 14889,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14909,
											"end": 14910,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14893,
											"end": 14897,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14927,
											"end": 14940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 14957,
											"end": 14964,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14943,
											"end": 14956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 14943,
											"end": 14965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15109,
											"end": 15110,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15097,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15124,
											"end": 15128,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15115,
											"end": 15120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 15150,
											"end": 15155,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15157,
											"end": 15161,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15133,
											"end": 15149,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 15133,
											"end": 15162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15132,
											"end": 15162,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15211,
											"end": 15215,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 1,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 15189,
											"end": 15216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15249,
											"end": 15258,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15303,
											"end": 15310,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15299,
											"end": 15301,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15292,
											"end": 15297,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14913,
											"end": 15336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15373,
											"end": 15375,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15361,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15362,
											"end": 15369,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14720,
											"end": 15382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8924,
											"end": 8931,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8943,
											"end": 8955,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 8967,
											"end": 8974,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8958,
											"end": 8966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 8958,
											"end": 8975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9051,
											"end": 9052,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9035,
											"end": 9039,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 9086,
											"end": 9090,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9092,
											"end": 9096,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9105,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9069,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 9069,
											"end": 9106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9177,
											"end": 9178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9161,
											"end": 9165,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 9294,
											"end": 9295,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9298,
											"end": 9305,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9315,
											"end": 9316,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9319,
											"end": 9324,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 9277,
											"end": 9325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9387,
											"end": 9388,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9368,
											"end": 9377,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9378,
											"end": 9382,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9441,
											"end": 9442,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9427,
											"end": 9429,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9504,
											"end": 9505,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9487,
											"end": 9496,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9497,
											"end": 9499,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "tag",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9559,
											"end": 9561,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9547,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9548,
											"end": 9555,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9596,
											"end": 9603,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9586,
											"end": 9590,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 9622,
											"end": 9626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8838,
											"end": 9633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 4007,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 3846,
											"end": 4007,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3949,
											"end": 3959,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 3949,
											"end": 3966,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3949,
											"end": 3966,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3949,
											"end": 3966,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3949,
											"end": 3966,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3922,
											"end": 3937,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3945,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3922,
											"end": 3966,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3922,
											"end": 3966,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3922,
											"end": 3966,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3922,
											"end": 3966,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3976,
											"end": 3986,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 3992,
											"end": 3999,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 4007,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 4007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4624,
											"end": 5583,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 4624,
											"end": 5583,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4886,
											"end": 4908,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4911,
											"end": 4926,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 4921,
											"end": 4925,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4911,
											"end": 4920,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 4911,
											"end": 4926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4911,
											"end": 4926,
											"name": "tag",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 4911,
											"end": 4926,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4886,
											"end": 4926,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4886,
											"end": 4926,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4936,
											"end": 4954,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4957,
											"end": 4974,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4975,
											"end": 4982,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4936,
											"end": 4983,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4936,
											"end": 4983,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5101,
											"end": 5115,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5087,
											"end": 5097,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5087,
											"end": 5115,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5083,
											"end": 5406,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 5083,
											"end": 5406,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5131,
											"end": 5150,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5153,
											"end": 5165,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5166,
											"end": 5170,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5172,
											"end": 5186,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5131,
											"end": 5187,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5131,
											"end": 5187,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5235,
											"end": 5246,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5214,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5215,
											"end": 5219,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5221,
											"end": 5231,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5246,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5246,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5246,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5246,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5351,
											"end": 5361,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5318,
											"end": 5335,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5336,
											"end": 5347,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5318,
											"end": 5361,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5318,
											"end": 5361,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5318,
											"end": 5361,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5318,
											"end": 5361,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5117,
											"end": 5406,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5083,
											"end": 5406,
											"name": "tag",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 5083,
											"end": 5406,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5524,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5492,
											"end": 5525,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5492,
											"end": 5525,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5492,
											"end": 5525,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5542,
											"end": 5554,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5555,
											"end": 5559,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5561,
											"end": 5575,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5535,
											"end": 5576,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5535,
											"end": 5576,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5535,
											"end": 5576,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4705,
											"end": 5583,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4705,
											"end": 5583,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4624,
											"end": 5583,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4624,
											"end": 5583,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4624,
											"end": 5583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6932,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 5871,
											"end": 6932,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6120,
											"end": 6142,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6165,
											"end": 6166,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 6145,
											"end": 6162,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6145,
											"end": 6162,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6145,
											"end": 6162,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6145,
											"end": 6162,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6145,
											"end": 6166,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 6145,
											"end": 6166,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6145,
											"end": 6166,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6145,
											"end": 6166,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 6145,
											"end": 6166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6145,
											"end": 6166,
											"name": "tag",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 6145,
											"end": 6166,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6120,
											"end": 6166,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6120,
											"end": 6166,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6194,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6197,
											"end": 6212,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6213,
											"end": 6220,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6221,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6221,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6543,
											"end": 6562,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6565,
											"end": 6575,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 6576,
											"end": 6590,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 6565,
											"end": 6591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "tag",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "tag",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6543,
											"end": 6591,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6543,
											"end": 6591,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6627,
											"end": 6638,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6602,
											"end": 6612,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 6613,
											"end": 6623,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 6602,
											"end": 6624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "tag",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "tag",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6602,
											"end": 6638,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6602,
											"end": 6638,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6602,
											"end": 6638,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6602,
											"end": 6638,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6737,
											"end": 6747,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6706,
											"end": 6721,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6722,
											"end": 6733,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6706,
											"end": 6747,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6706,
											"end": 6747,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6706,
											"end": 6747,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6706,
											"end": 6747,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6875,
											"end": 6890,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6891,
											"end": 6898,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6868,
											"end": 6899,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6868,
											"end": 6899,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6868,
											"end": 6899,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6909,
											"end": 6919,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 6909,
											"end": 6925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "tag",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "tag",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5942,
											"end": 6932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5942,
											"end": 6932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5942,
											"end": 6932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5871,
											"end": 6932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3437,
											"end": 3651,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 3437,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3521,
											"end": 3535,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3554,
											"end": 3555,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3538,
											"end": 3551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 3548,
											"end": 3550,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 3538,
											"end": 3551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3551,
											"name": "tag",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 3538,
											"end": 3551,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 3538,
											"end": 3555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "tag",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3521,
											"end": 3555,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3521,
											"end": 3555,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 3599,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3565,
											"end": 3577,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3578,
											"end": 3580,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3582,
											"end": 3588,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3565,
											"end": 3599,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3565,
											"end": 3599,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3565,
											"end": 3599,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3565,
											"end": 3599,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3644,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3609,
											"end": 3626,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3627,
											"end": 3634,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3609,
											"end": 3644,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3609,
											"end": 3644,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3609,
											"end": 3644,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3609,
											"end": 3644,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3651,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3437,
											"end": 3651,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3437,
											"end": 3651,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3437,
											"end": 3651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "tag",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12300,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12303,
											"end": 12304,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12351,
											"end": 12359,
											"name": "PUSH",
											"source": 11,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12342,
											"end": 12347,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12388,
											"end": 12396,
											"name": "PUSH",
											"source": 11,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 12379,
											"end": 12396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12424,
											"end": 12426,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "tag",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12467,
											"end": 12475,
											"name": "PUSH",
											"source": 11,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12458,
											"end": 12463,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12458,
											"end": 12475,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12504,
											"end": 12512,
											"name": "PUSH",
											"source": 11,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 12495,
											"end": 12512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12540,
											"end": 12542,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "tag",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12583,
											"end": 12591,
											"name": "PUSH",
											"source": 11,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12574,
											"end": 12579,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12574,
											"end": 12591,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12620,
											"end": 12628,
											"name": "PUSH",
											"source": 11,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 12611,
											"end": 12628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12656,
											"end": 12658,
											"name": "PUSH",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "tag",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH",
											"source": 11,
											"value": "5F5E100"
										},
										{
											"begin": 12690,
											"end": 12695,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12690,
											"end": 12706,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12735,
											"end": 12742,
											"name": "PUSH",
											"source": 11,
											"value": "5F5E100"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 12726,
											"end": 12742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12770,
											"end": 12771,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "tag",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12812,
											"end": 12819,
											"name": "PUSH",
											"source": 11,
											"value": "2710"
										},
										{
											"begin": 12803,
											"end": 12808,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12803,
											"end": 12819,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12848,
											"end": 12855,
											"name": "PUSH",
											"source": 11,
											"value": "2710"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 12839,
											"end": 12855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12883,
											"end": 12884,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "tag",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12925,
											"end": 12932,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 12916,
											"end": 12921,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12916,
											"end": 12932,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12961,
											"end": 12968,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 12952,
											"end": 12968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12996,
											"end": 12997,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "tag",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13038,
											"end": 13045,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 13029,
											"end": 13034,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13029,
											"end": 13045,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13075,
											"end": 13076,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "tag",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13117,
											"end": 13123,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12214,
											"end": 13130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 7208,
											"end": 7213,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7215,
											"end": 7222,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7224,
											"end": 7231,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7194,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 7194,
											"end": 7232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7269,
											"end": 7270,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7252,
											"end": 7257,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7321,
											"end": 7328,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 1,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 7298,
											"end": 7329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7409,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7411,
											"end": 7418,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 1,
											"value": "177E802F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 7375,
											"end": 7419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7082,
											"end": 7450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6483,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6533,
											"end": 6534,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6521,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6561,
											"end": 6568,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6557,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 6589,
											"end": 6594,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6596,
											"end": 6603,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6572,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 6572,
											"end": 6604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "tag",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "tag",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6633,
											"end": 6640,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 6621,
											"end": 6628,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6608,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 6608,
											"end": 6629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "tag",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "tag",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 15,
											"value": "336"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 15,
											"value": "337"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 15,
											"value": "338"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 15,
											"value": "339"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 15,
											"value": "340"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "388"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "339"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 15,
											"value": "388"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "389"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 15,
											"value": "389"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 15,
											"value": "341"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "391"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "340"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 15,
											"value": "391"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 15,
											"value": "26"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "393"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "394"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "337"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 15,
											"value": "394"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 15,
											"value": "393"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "395"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "341"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 15,
											"value": "395"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 15,
											"value": "342"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 15,
											"value": "343"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "398"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "342"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 15,
											"value": "398"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 15,
											"value": "29"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "400"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "343"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 15,
											"value": "400"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 15,
											"value": "344"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 15,
											"value": "345"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1798,
											"end": 2046,
											"name": "tag",
											"source": 15,
											"value": "346"
										},
										{
											"begin": 1798,
											"end": 2046,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1880,
											"end": 1881,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1890,
											"end": 2003,
											"name": "tag",
											"source": 15,
											"value": "404"
										},
										{
											"begin": 1890,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1904,
											"end": 1910,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1901,
											"end": 1902,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1898,
											"end": 1911,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 1890,
											"end": 2003,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1890,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "406"
										},
										{
											"begin": 1890,
											"end": 2003,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1989,
											"end": 1990,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1984,
											"end": 1987,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1980,
											"end": 1991,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1974,
											"end": 1992,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1970,
											"end": 1971,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1965,
											"end": 1968,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1961,
											"end": 1972,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1954,
											"end": 1993,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1926,
											"end": 1928,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1923,
											"end": 1924,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1919,
											"end": 1929,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1914,
											"end": 1929,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1914,
											"end": 1929,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1890,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "404"
										},
										{
											"begin": 1890,
											"end": 2003,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1890,
											"end": 2003,
											"name": "tag",
											"source": 15,
											"value": "406"
										},
										{
											"begin": 1890,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2037,
											"end": 2038,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2028,
											"end": 2034,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2023,
											"end": 2026,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2019,
											"end": 2035,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2012,
											"end": 2039,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1860,
											"end": 2046,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1798,
											"end": 2046,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1798,
											"end": 2046,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1798,
											"end": 2046,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1798,
											"end": 2046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2052,
											"end": 2154,
											"name": "tag",
											"source": 15,
											"value": "347"
										},
										{
											"begin": 2052,
											"end": 2154,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2093,
											"end": 2099,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2146,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 2140,
											"end": 2147,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 2135,
											"end": 2137,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 2128,
											"end": 2133,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2124,
											"end": 2138,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2120,
											"end": 2148,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2110,
											"end": 2148,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2110,
											"end": 2148,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2052,
											"end": 2154,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2052,
											"end": 2154,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2052,
											"end": 2154,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2052,
											"end": 2154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2160,
											"end": 2537,
											"name": "tag",
											"source": 15,
											"value": "348"
										},
										{
											"begin": 2160,
											"end": 2537,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2248,
											"end": 2251,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2276,
											"end": 2315,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "409"
										},
										{
											"begin": 2309,
											"end": 2314,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2276,
											"end": 2315,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "344"
										},
										{
											"begin": 2276,
											"end": 2315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2276,
											"end": 2315,
											"name": "tag",
											"source": 15,
											"value": "409"
										},
										{
											"begin": 2276,
											"end": 2315,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2331,
											"end": 2402,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "410"
										},
										{
											"begin": 2395,
											"end": 2401,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2390,
											"end": 2393,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2331,
											"end": 2402,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "345"
										},
										{
											"begin": 2331,
											"end": 2402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2331,
											"end": 2402,
											"name": "tag",
											"source": 15,
											"value": "410"
										},
										{
											"begin": 2331,
											"end": 2402,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2324,
											"end": 2402,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 2324,
											"end": 2402,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2411,
											"end": 2476,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "411"
										},
										{
											"begin": 2469,
											"end": 2475,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2464,
											"end": 2467,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2457,
											"end": 2461,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2450,
											"end": 2455,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2446,
											"end": 2462,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2411,
											"end": 2476,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "346"
										},
										{
											"begin": 2411,
											"end": 2476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2411,
											"end": 2476,
											"name": "tag",
											"source": 15,
											"value": "411"
										},
										{
											"begin": 2411,
											"end": 2476,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2501,
											"end": 2530,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "412"
										},
										{
											"begin": 2523,
											"end": 2529,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2501,
											"end": 2530,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "347"
										},
										{
											"begin": 2501,
											"end": 2530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2501,
											"end": 2530,
											"name": "tag",
											"source": 15,
											"value": "412"
										},
										{
											"begin": 2501,
											"end": 2530,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2496,
											"end": 2499,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2492,
											"end": 2531,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2485,
											"end": 2531,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2485,
											"end": 2531,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2252,
											"end": 2537,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2160,
											"end": 2537,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2160,
											"end": 2537,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2160,
											"end": 2537,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2160,
											"end": 2537,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2160,
											"end": 2537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2543,
											"end": 2856,
											"name": "tag",
											"source": 15,
											"value": "33"
										},
										{
											"begin": 2543,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2656,
											"end": 2660,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2694,
											"end": 2696,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2683,
											"end": 2692,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2679,
											"end": 2697,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2671,
											"end": 2697,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2671,
											"end": 2697,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2743,
											"end": 2752,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2737,
											"end": 2741,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2733,
											"end": 2753,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2729,
											"end": 2730,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2718,
											"end": 2727,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2714,
											"end": 2731,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2707,
											"end": 2754,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2771,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "414"
										},
										{
											"begin": 2844,
											"end": 2848,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2835,
											"end": 2841,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2771,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "348"
										},
										{
											"begin": 2771,
											"end": 2849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2771,
											"end": 2849,
											"name": "tag",
											"source": 15,
											"value": "414"
										},
										{
											"begin": 2771,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2763,
											"end": 2849,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2763,
											"end": 2849,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2543,
											"end": 2856,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2543,
											"end": 2856,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2543,
											"end": 2856,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2543,
											"end": 2856,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2543,
											"end": 2856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2862,
											"end": 2939,
											"name": "tag",
											"source": 15,
											"value": "349"
										},
										{
											"begin": 2862,
											"end": 2939,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2899,
											"end": 2906,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2928,
											"end": 2933,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2917,
											"end": 2933,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2917,
											"end": 2933,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2862,
											"end": 2939,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2862,
											"end": 2939,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2862,
											"end": 2939,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2862,
											"end": 2939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2945,
											"end": 3067,
											"name": "tag",
											"source": 15,
											"value": "350"
										},
										{
											"begin": 2945,
											"end": 3067,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3018,
											"end": 3042,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "417"
										},
										{
											"begin": 3036,
											"end": 3041,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3018,
											"end": 3042,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "349"
										},
										{
											"begin": 3018,
											"end": 3042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3018,
											"end": 3042,
											"name": "tag",
											"source": 15,
											"value": "417"
										},
										{
											"begin": 3018,
											"end": 3042,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3011,
											"end": 3016,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3008,
											"end": 3043,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 2998,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "418"
										},
										{
											"begin": 2998,
											"end": 3061,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3057,
											"end": 3058,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3054,
											"end": 3055,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3047,
											"end": 3059,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2998,
											"end": 3061,
											"name": "tag",
											"source": 15,
											"value": "418"
										},
										{
											"begin": 2998,
											"end": 3061,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2945,
											"end": 3067,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2945,
											"end": 3067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3073,
											"end": 3212,
											"name": "tag",
											"source": 15,
											"value": "351"
										},
										{
											"begin": 3073,
											"end": 3212,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3119,
											"end": 3124,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3157,
											"end": 3163,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3144,
											"end": 3164,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3135,
											"end": 3164,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3135,
											"end": 3164,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3173,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "420"
										},
										{
											"begin": 3200,
											"end": 3205,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3173,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "350"
										},
										{
											"begin": 3173,
											"end": 3206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3173,
											"end": 3206,
											"name": "tag",
											"source": 15,
											"value": "420"
										},
										{
											"begin": 3173,
											"end": 3206,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3073,
											"end": 3212,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3073,
											"end": 3212,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3073,
											"end": 3212,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3073,
											"end": 3212,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3073,
											"end": 3212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3218,
											"end": 3547,
											"name": "tag",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 3218,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3277,
											"end": 3283,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3326,
											"end": 3328,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3314,
											"end": 3323,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3305,
											"end": 3312,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3301,
											"end": 3324,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3297,
											"end": 3329,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 3294,
											"end": 3413,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3294,
											"end": 3413,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "422"
										},
										{
											"begin": 3294,
											"end": 3413,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3332,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "423"
										},
										{
											"begin": 3332,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "337"
										},
										{
											"begin": 3332,
											"end": 3411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3332,
											"end": 3411,
											"name": "tag",
											"source": 15,
											"value": "423"
										},
										{
											"begin": 3332,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3294,
											"end": 3413,
											"name": "tag",
											"source": 15,
											"value": "422"
										},
										{
											"begin": 3294,
											"end": 3413,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3452,
											"end": 3453,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3477,
											"end": 3530,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "424"
										},
										{
											"begin": 3522,
											"end": 3529,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3513,
											"end": 3519,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3502,
											"end": 3511,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3498,
											"end": 3520,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3477,
											"end": 3530,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "351"
										},
										{
											"begin": 3477,
											"end": 3530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3477,
											"end": 3530,
											"name": "tag",
											"source": 15,
											"value": "424"
										},
										{
											"begin": 3477,
											"end": 3530,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3467,
											"end": 3530,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3467,
											"end": 3530,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3423,
											"end": 3540,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3218,
											"end": 3547,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3218,
											"end": 3547,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3218,
											"end": 3547,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3218,
											"end": 3547,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3218,
											"end": 3547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3553,
											"end": 3679,
											"name": "tag",
											"source": 15,
											"value": "352"
										},
										{
											"begin": 3553,
											"end": 3679,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3590,
											"end": 3597,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3630,
											"end": 3672,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3623,
											"end": 3628,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3619,
											"end": 3673,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3608,
											"end": 3673,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3608,
											"end": 3673,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3553,
											"end": 3679,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3553,
											"end": 3679,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3553,
											"end": 3679,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3553,
											"end": 3679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3685,
											"end": 3781,
											"name": "tag",
											"source": 15,
											"value": "353"
										},
										{
											"begin": 3685,
											"end": 3781,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3722,
											"end": 3729,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3751,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "427"
										},
										{
											"begin": 3769,
											"end": 3774,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3751,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "352"
										},
										{
											"begin": 3751,
											"end": 3775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3751,
											"end": 3775,
											"name": "tag",
											"source": 15,
											"value": "427"
										},
										{
											"begin": 3751,
											"end": 3775,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3740,
											"end": 3775,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3740,
											"end": 3775,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3685,
											"end": 3781,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3685,
											"end": 3781,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3685,
											"end": 3781,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3685,
											"end": 3781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3787,
											"end": 3905,
											"name": "tag",
											"source": 15,
											"value": "354"
										},
										{
											"begin": 3787,
											"end": 3905,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3874,
											"end": 3898,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "429"
										},
										{
											"begin": 3892,
											"end": 3897,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3874,
											"end": 3898,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "353"
										},
										{
											"begin": 3874,
											"end": 3898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3874,
											"end": 3898,
											"name": "tag",
											"source": 15,
											"value": "429"
										},
										{
											"begin": 3874,
											"end": 3898,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3869,
											"end": 3872,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3862,
											"end": 3899,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3787,
											"end": 3905,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3787,
											"end": 3905,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3787,
											"end": 3905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3911,
											"end": 4133,
											"name": "tag",
											"source": 15,
											"value": "39"
										},
										{
											"begin": 3911,
											"end": 4133,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4004,
											"end": 4008,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4042,
											"end": 4044,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4031,
											"end": 4040,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4027,
											"end": 4045,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4019,
											"end": 4045,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4019,
											"end": 4045,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4055,
											"end": 4126,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "431"
										},
										{
											"begin": 4123,
											"end": 4124,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4112,
											"end": 4121,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4108,
											"end": 4125,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4099,
											"end": 4105,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4055,
											"end": 4126,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "354"
										},
										{
											"begin": 4055,
											"end": 4126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4055,
											"end": 4126,
											"name": "tag",
											"source": 15,
											"value": "431"
										},
										{
											"begin": 4055,
											"end": 4126,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3911,
											"end": 4133,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3911,
											"end": 4133,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3911,
											"end": 4133,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3911,
											"end": 4133,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3911,
											"end": 4133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4139,
											"end": 4261,
											"name": "tag",
											"source": 15,
											"value": "355"
										},
										{
											"begin": 4139,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4212,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "433"
										},
										{
											"begin": 4230,
											"end": 4235,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4212,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "353"
										},
										{
											"begin": 4212,
											"end": 4236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4212,
											"end": 4236,
											"name": "tag",
											"source": 15,
											"value": "433"
										},
										{
											"begin": 4212,
											"end": 4236,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4205,
											"end": 4210,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4202,
											"end": 4237,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 4192,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "434"
										},
										{
											"begin": 4192,
											"end": 4255,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4251,
											"end": 4252,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4248,
											"end": 4249,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4241,
											"end": 4253,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4192,
											"end": 4255,
											"name": "tag",
											"source": 15,
											"value": "434"
										},
										{
											"begin": 4192,
											"end": 4255,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4139,
											"end": 4261,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4139,
											"end": 4261,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4267,
											"end": 4406,
											"name": "tag",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 4267,
											"end": 4406,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4313,
											"end": 4318,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4351,
											"end": 4357,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4338,
											"end": 4358,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 4329,
											"end": 4358,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4329,
											"end": 4358,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4367,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "436"
										},
										{
											"begin": 4394,
											"end": 4399,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4367,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "355"
										},
										{
											"begin": 4367,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4367,
											"end": 4400,
											"name": "tag",
											"source": 15,
											"value": "436"
										},
										{
											"begin": 4367,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4267,
											"end": 4406,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4267,
											"end": 4406,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4267,
											"end": 4406,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4267,
											"end": 4406,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4267,
											"end": 4406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4412,
											"end": 4886,
											"name": "tag",
											"source": 15,
											"value": "42"
										},
										{
											"begin": 4412,
											"end": 4886,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4480,
											"end": 4486,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4488,
											"end": 4494,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4537,
											"end": 4539,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4525,
											"end": 4534,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4516,
											"end": 4523,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4512,
											"end": 4535,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4508,
											"end": 4540,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 4505,
											"end": 4624,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4505,
											"end": 4624,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "438"
										},
										{
											"begin": 4505,
											"end": 4624,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4543,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "439"
										},
										{
											"begin": 4543,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "337"
										},
										{
											"begin": 4543,
											"end": 4622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4543,
											"end": 4622,
											"name": "tag",
											"source": 15,
											"value": "439"
										},
										{
											"begin": 4543,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4505,
											"end": 4624,
											"name": "tag",
											"source": 15,
											"value": "438"
										},
										{
											"begin": 4505,
											"end": 4624,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4663,
											"end": 4664,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4688,
											"end": 4741,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "440"
										},
										{
											"begin": 4733,
											"end": 4740,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4724,
											"end": 4730,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4713,
											"end": 4722,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4709,
											"end": 4731,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4688,
											"end": 4741,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 4688,
											"end": 4741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4688,
											"end": 4741,
											"name": "tag",
											"source": 15,
											"value": "440"
										},
										{
											"begin": 4688,
											"end": 4741,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4678,
											"end": 4741,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4678,
											"end": 4741,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4634,
											"end": 4751,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4790,
											"end": 4792,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4816,
											"end": 4869,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "441"
										},
										{
											"begin": 4861,
											"end": 4868,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4852,
											"end": 4858,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4841,
											"end": 4850,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4837,
											"end": 4859,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4816,
											"end": 4869,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "351"
										},
										{
											"begin": 4816,
											"end": 4869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4816,
											"end": 4869,
											"name": "tag",
											"source": 15,
											"value": "441"
										},
										{
											"begin": 4816,
											"end": 4869,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4806,
											"end": 4869,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4806,
											"end": 4869,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4761,
											"end": 4879,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4412,
											"end": 4886,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4412,
											"end": 4886,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4412,
											"end": 4886,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4412,
											"end": 4886,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4412,
											"end": 4886,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4412,
											"end": 4886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4892,
											"end": 5010,
											"name": "tag",
											"source": 15,
											"value": "357"
										},
										{
											"begin": 4892,
											"end": 5010,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4979,
											"end": 5003,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "443"
										},
										{
											"begin": 4997,
											"end": 5002,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4979,
											"end": 5003,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "349"
										},
										{
											"begin": 4979,
											"end": 5003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4979,
											"end": 5003,
											"name": "tag",
											"source": 15,
											"value": "443"
										},
										{
											"begin": 4979,
											"end": 5003,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4974,
											"end": 4977,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4967,
											"end": 5004,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4892,
											"end": 5010,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4892,
											"end": 5010,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4892,
											"end": 5010,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5016,
											"end": 5238,
											"name": "tag",
											"source": 15,
											"value": "47"
										},
										{
											"begin": 5016,
											"end": 5238,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5109,
											"end": 5113,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5147,
											"end": 5149,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5136,
											"end": 5145,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5132,
											"end": 5150,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5124,
											"end": 5150,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5124,
											"end": 5150,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5160,
											"end": 5231,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "445"
										},
										{
											"begin": 5228,
											"end": 5229,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5217,
											"end": 5226,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5213,
											"end": 5230,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5204,
											"end": 5210,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5160,
											"end": 5231,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "357"
										},
										{
											"begin": 5160,
											"end": 5231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5160,
											"end": 5231,
											"name": "tag",
											"source": 15,
											"value": "445"
										},
										{
											"begin": 5160,
											"end": 5231,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5016,
											"end": 5238,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5016,
											"end": 5238,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5016,
											"end": 5238,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5016,
											"end": 5238,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5016,
											"end": 5238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5244,
											"end": 5863,
											"name": "tag",
											"source": 15,
											"value": "50"
										},
										{
											"begin": 5244,
											"end": 5863,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5321,
											"end": 5327,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5329,
											"end": 5335,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5337,
											"end": 5343,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5386,
											"end": 5388,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 5374,
											"end": 5383,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5365,
											"end": 5372,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 5361,
											"end": 5384,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 5357,
											"end": 5389,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 5354,
											"end": 5473,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5354,
											"end": 5473,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "447"
										},
										{
											"begin": 5354,
											"end": 5473,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5392,
											"end": 5471,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "448"
										},
										{
											"begin": 5392,
											"end": 5471,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "337"
										},
										{
											"begin": 5392,
											"end": 5471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5392,
											"end": 5471,
											"name": "tag",
											"source": 15,
											"value": "448"
										},
										{
											"begin": 5392,
											"end": 5471,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5354,
											"end": 5473,
											"name": "tag",
											"source": 15,
											"value": "447"
										},
										{
											"begin": 5354,
											"end": 5473,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5512,
											"end": 5513,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5537,
											"end": 5590,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "449"
										},
										{
											"begin": 5582,
											"end": 5589,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 5573,
											"end": 5579,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5562,
											"end": 5571,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 5558,
											"end": 5580,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5537,
											"end": 5590,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 5537,
											"end": 5590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5537,
											"end": 5590,
											"name": "tag",
											"source": 15,
											"value": "449"
										},
										{
											"begin": 5537,
											"end": 5590,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5527,
											"end": 5590,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 5527,
											"end": 5590,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5483,
											"end": 5600,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5639,
											"end": 5641,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5665,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "450"
										},
										{
											"begin": 5710,
											"end": 5717,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 5701,
											"end": 5707,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5690,
											"end": 5699,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 5686,
											"end": 5708,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5665,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 5665,
											"end": 5718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5665,
											"end": 5718,
											"name": "tag",
											"source": 15,
											"value": "450"
										},
										{
											"begin": 5665,
											"end": 5718,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5655,
											"end": 5718,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5655,
											"end": 5718,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5610,
											"end": 5728,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5767,
											"end": 5769,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5793,
											"end": 5846,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "451"
										},
										{
											"begin": 5838,
											"end": 5845,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 5829,
											"end": 5835,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5818,
											"end": 5827,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 5814,
											"end": 5836,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5793,
											"end": 5846,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "351"
										},
										{
											"begin": 5793,
											"end": 5846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5793,
											"end": 5846,
											"name": "tag",
											"source": 15,
											"value": "451"
										},
										{
											"begin": 5793,
											"end": 5846,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5783,
											"end": 5846,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5783,
											"end": 5846,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5738,
											"end": 5856,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5244,
											"end": 5863,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5244,
											"end": 5863,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5244,
											"end": 5863,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5244,
											"end": 5863,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5244,
											"end": 5863,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5244,
											"end": 5863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5869,
											"end": 6198,
											"name": "tag",
											"source": 15,
											"value": "75"
										},
										{
											"begin": 5869,
											"end": 6198,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5928,
											"end": 5934,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5977,
											"end": 5979,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5965,
											"end": 5974,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5956,
											"end": 5963,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5952,
											"end": 5975,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 5948,
											"end": 5980,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 5945,
											"end": 6064,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5945,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "453"
										},
										{
											"begin": 5945,
											"end": 6064,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5983,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "454"
										},
										{
											"begin": 5983,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "337"
										},
										{
											"begin": 5983,
											"end": 6062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5983,
											"end": 6062,
											"name": "tag",
											"source": 15,
											"value": "454"
										},
										{
											"begin": 5983,
											"end": 6062,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5945,
											"end": 6064,
											"name": "tag",
											"source": 15,
											"value": "453"
										},
										{
											"begin": 5945,
											"end": 6064,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6103,
											"end": 6104,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6128,
											"end": 6181,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "455"
										},
										{
											"begin": 6173,
											"end": 6180,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6164,
											"end": 6170,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6153,
											"end": 6162,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6149,
											"end": 6171,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6128,
											"end": 6181,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 6128,
											"end": 6181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6128,
											"end": 6181,
											"name": "tag",
											"source": 15,
											"value": "455"
										},
										{
											"begin": 6128,
											"end": 6181,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6118,
											"end": 6181,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6118,
											"end": 6181,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6074,
											"end": 6191,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5869,
											"end": 6198,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5869,
											"end": 6198,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5869,
											"end": 6198,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5869,
											"end": 6198,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5869,
											"end": 6198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6204,
											"end": 6320,
											"name": "tag",
											"source": 15,
											"value": "358"
										},
										{
											"begin": 6204,
											"end": 6320,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6274,
											"end": 6295,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "457"
										},
										{
											"begin": 6289,
											"end": 6294,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6274,
											"end": 6295,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "342"
										},
										{
											"begin": 6274,
											"end": 6295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6274,
											"end": 6295,
											"name": "tag",
											"source": 15,
											"value": "457"
										},
										{
											"begin": 6274,
											"end": 6295,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6267,
											"end": 6272,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6264,
											"end": 6296,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 6254,
											"end": 6314,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "458"
										},
										{
											"begin": 6254,
											"end": 6314,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6310,
											"end": 6311,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6308,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6300,
											"end": 6312,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6254,
											"end": 6314,
											"name": "tag",
											"source": 15,
											"value": "458"
										},
										{
											"begin": 6254,
											"end": 6314,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6204,
											"end": 6320,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6204,
											"end": 6320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6326,
											"end": 6459,
											"name": "tag",
											"source": 15,
											"value": "359"
										},
										{
											"begin": 6326,
											"end": 6459,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6369,
											"end": 6374,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6407,
											"end": 6413,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6394,
											"end": 6414,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 6385,
											"end": 6414,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6385,
											"end": 6414,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6423,
											"end": 6453,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "460"
										},
										{
											"begin": 6447,
											"end": 6452,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6423,
											"end": 6453,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "358"
										},
										{
											"begin": 6423,
											"end": 6453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6423,
											"end": 6453,
											"name": "tag",
											"source": 15,
											"value": "460"
										},
										{
											"begin": 6423,
											"end": 6453,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6326,
											"end": 6459,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6326,
											"end": 6459,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6326,
											"end": 6459,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6326,
											"end": 6459,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6326,
											"end": 6459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6465,
											"end": 6933,
											"name": "tag",
											"source": 15,
											"value": "83"
										},
										{
											"begin": 6465,
											"end": 6933,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6530,
											"end": 6536,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6538,
											"end": 6544,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6587,
											"end": 6589,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6575,
											"end": 6584,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6566,
											"end": 6573,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6562,
											"end": 6585,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 6558,
											"end": 6590,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 6555,
											"end": 6674,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6555,
											"end": 6674,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "462"
										},
										{
											"begin": 6555,
											"end": 6674,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6593,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "463"
										},
										{
											"begin": 6593,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "337"
										},
										{
											"begin": 6593,
											"end": 6672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6593,
											"end": 6672,
											"name": "tag",
											"source": 15,
											"value": "463"
										},
										{
											"begin": 6593,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6555,
											"end": 6674,
											"name": "tag",
											"source": 15,
											"value": "462"
										},
										{
											"begin": 6555,
											"end": 6674,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6713,
											"end": 6714,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6738,
											"end": 6791,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "464"
										},
										{
											"begin": 6783,
											"end": 6790,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6774,
											"end": 6780,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6763,
											"end": 6772,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 6759,
											"end": 6781,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6738,
											"end": 6791,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 6738,
											"end": 6791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6738,
											"end": 6791,
											"name": "tag",
											"source": 15,
											"value": "464"
										},
										{
											"begin": 6738,
											"end": 6791,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6728,
											"end": 6791,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6728,
											"end": 6791,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6684,
											"end": 6801,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6840,
											"end": 6842,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6916,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "465"
										},
										{
											"begin": 6908,
											"end": 6915,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6899,
											"end": 6905,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6888,
											"end": 6897,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 6884,
											"end": 6906,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6866,
											"end": 6916,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "359"
										},
										{
											"begin": 6866,
											"end": 6916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6866,
											"end": 6916,
											"name": "tag",
											"source": 15,
											"value": "465"
										},
										{
											"begin": 6866,
											"end": 6916,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6856,
											"end": 6916,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6856,
											"end": 6916,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6811,
											"end": 6926,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6465,
											"end": 6933,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6465,
											"end": 6933,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6465,
											"end": 6933,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6465,
											"end": 6933,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6465,
											"end": 6933,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6465,
											"end": 6933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6939,
											"end": 7056,
											"name": "tag",
											"source": 15,
											"value": "360"
										},
										{
											"begin": 6939,
											"end": 7056,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7048,
											"end": 7049,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7045,
											"end": 7046,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7038,
											"end": 7050,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7062,
											"end": 7179,
											"name": "tag",
											"source": 15,
											"value": "361"
										},
										{
											"begin": 7062,
											"end": 7179,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7171,
											"end": 7172,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7168,
											"end": 7169,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7161,
											"end": 7173,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7185,
											"end": 7365,
											"name": "tag",
											"source": 15,
											"value": "253"
										},
										{
											"begin": 7185,
											"end": 7365,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7233,
											"end": 7310,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7230,
											"end": 7231,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7223,
											"end": 7311,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7330,
											"end": 7334,
											"name": "PUSH",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 7327,
											"end": 7328,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 7320,
											"end": 7335,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7354,
											"end": 7358,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 7351,
											"end": 7352,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7344,
											"end": 7359,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7371,
											"end": 7652,
											"name": "tag",
											"source": 15,
											"value": "362"
										},
										{
											"begin": 7371,
											"end": 7652,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7454,
											"end": 7481,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "470"
										},
										{
											"begin": 7476,
											"end": 7480,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7454,
											"end": 7481,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "347"
										},
										{
											"begin": 7454,
											"end": 7481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7454,
											"end": 7481,
											"name": "tag",
											"source": 15,
											"value": "470"
										},
										{
											"begin": 7454,
											"end": 7481,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7446,
											"end": 7452,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7442,
											"end": 7482,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7584,
											"end": 7590,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7572,
											"end": 7582,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7569,
											"end": 7591,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 7548,
											"end": 7566,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7536,
											"end": 7546,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7533,
											"end": 7567,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 7530,
											"end": 7592,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 7527,
											"end": 7615,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7527,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "471"
										},
										{
											"begin": 7527,
											"end": 7615,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7595,
											"end": 7613,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "472"
										},
										{
											"begin": 7595,
											"end": 7613,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "253"
										},
										{
											"begin": 7595,
											"end": 7613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7595,
											"end": 7613,
											"name": "tag",
											"source": 15,
											"value": "472"
										},
										{
											"begin": 7595,
											"end": 7613,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7527,
											"end": 7615,
											"name": "tag",
											"source": 15,
											"value": "471"
										},
										{
											"begin": 7527,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7635,
											"end": 7645,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7631,
											"end": 7633,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 7624,
											"end": 7646,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7414,
											"end": 7652,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7371,
											"end": 7652,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7371,
											"end": 7652,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7371,
											"end": 7652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7658,
											"end": 7787,
											"name": "tag",
											"source": 15,
											"value": "363"
										},
										{
											"begin": 7658,
											"end": 7787,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7692,
											"end": 7698,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7719,
											"end": 7739,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "474"
										},
										{
											"begin": 7719,
											"end": 7739,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "336"
										},
										{
											"begin": 7719,
											"end": 7739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7719,
											"end": 7739,
											"name": "tag",
											"source": 15,
											"value": "474"
										},
										{
											"begin": 7719,
											"end": 7739,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7709,
											"end": 7739,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7709,
											"end": 7739,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7748,
											"end": 7781,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "475"
										},
										{
											"begin": 7776,
											"end": 7780,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7768,
											"end": 7774,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7748,
											"end": 7781,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "362"
										},
										{
											"begin": 7748,
											"end": 7781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7748,
											"end": 7781,
											"name": "tag",
											"source": 15,
											"value": "475"
										},
										{
											"begin": 7748,
											"end": 7781,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7658,
											"end": 7787,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7658,
											"end": 7787,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7658,
											"end": 7787,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7658,
											"end": 7787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7793,
											"end": 8100,
											"name": "tag",
											"source": 15,
											"value": "364"
										},
										{
											"begin": 7793,
											"end": 8100,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7854,
											"end": 7858,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7944,
											"end": 7962,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7936,
											"end": 7942,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7933,
											"end": 7963,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 7930,
											"end": 7986,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7930,
											"end": 7986,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "477"
										},
										{
											"begin": 7930,
											"end": 7986,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7966,
											"end": 7984,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "478"
										},
										{
											"begin": 7966,
											"end": 7984,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "253"
										},
										{
											"begin": 7966,
											"end": 7984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7966,
											"end": 7984,
											"name": "tag",
											"source": 15,
											"value": "478"
										},
										{
											"begin": 7966,
											"end": 7984,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7930,
											"end": 7986,
											"name": "tag",
											"source": 15,
											"value": "477"
										},
										{
											"begin": 7930,
											"end": 7986,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8004,
											"end": 8033,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "479"
										},
										{
											"begin": 8026,
											"end": 8032,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8004,
											"end": 8033,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "347"
										},
										{
											"begin": 8004,
											"end": 8033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8004,
											"end": 8033,
											"name": "tag",
											"source": 15,
											"value": "479"
										},
										{
											"begin": 8004,
											"end": 8033,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7996,
											"end": 8033,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7996,
											"end": 8033,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8088,
											"end": 8092,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8082,
											"end": 8086,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8078,
											"end": 8093,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8070,
											"end": 8093,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8070,
											"end": 8093,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7793,
											"end": 8100,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7793,
											"end": 8100,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7793,
											"end": 8100,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7793,
											"end": 8100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8106,
											"end": 8254,
											"name": "tag",
											"source": 15,
											"value": "365"
										},
										{
											"begin": 8106,
											"end": 8254,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8204,
											"end": 8210,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8199,
											"end": 8202,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8194,
											"end": 8197,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8181,
											"end": 8211,
											"name": "CALLDATACOPY",
											"source": 15
										},
										{
											"begin": 8245,
											"end": 8246,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8236,
											"end": 8242,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8231,
											"end": 8234,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8227,
											"end": 8243,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8220,
											"end": 8247,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8106,
											"end": 8254,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8106,
											"end": 8254,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8106,
											"end": 8254,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8106,
											"end": 8254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8260,
											"end": 8683,
											"name": "tag",
											"source": 15,
											"value": "366"
										},
										{
											"begin": 8260,
											"end": 8683,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8337,
											"end": 8342,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8362,
											"end": 8427,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "482"
										},
										{
											"begin": 8378,
											"end": 8426,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "483"
										},
										{
											"begin": 8419,
											"end": 8425,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8378,
											"end": 8426,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "364"
										},
										{
											"begin": 8378,
											"end": 8426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8378,
											"end": 8426,
											"name": "tag",
											"source": 15,
											"value": "483"
										},
										{
											"begin": 8378,
											"end": 8426,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8362,
											"end": 8427,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "363"
										},
										{
											"begin": 8362,
											"end": 8427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8362,
											"end": 8427,
											"name": "tag",
											"source": 15,
											"value": "482"
										},
										{
											"begin": 8362,
											"end": 8427,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8353,
											"end": 8427,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8353,
											"end": 8427,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8450,
											"end": 8456,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8443,
											"end": 8448,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8436,
											"end": 8457,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8488,
											"end": 8492,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8481,
											"end": 8486,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8477,
											"end": 8493,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8526,
											"end": 8529,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8517,
											"end": 8523,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8512,
											"end": 8515,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8508,
											"end": 8524,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8505,
											"end": 8530,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 8502,
											"end": 8614,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8502,
											"end": 8614,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "484"
										},
										{
											"begin": 8502,
											"end": 8614,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8533,
											"end": 8612,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "485"
										},
										{
											"begin": 8533,
											"end": 8612,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "361"
										},
										{
											"begin": 8533,
											"end": 8612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8533,
											"end": 8612,
											"name": "tag",
											"source": 15,
											"value": "485"
										},
										{
											"begin": 8533,
											"end": 8612,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8502,
											"end": 8614,
											"name": "tag",
											"source": 15,
											"value": "484"
										},
										{
											"begin": 8502,
											"end": 8614,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8623,
											"end": 8677,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "486"
										},
										{
											"begin": 8670,
											"end": 8676,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8665,
											"end": 8668,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8660,
											"end": 8663,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 8623,
											"end": 8677,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "365"
										},
										{
											"begin": 8623,
											"end": 8677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8623,
											"end": 8677,
											"name": "tag",
											"source": 15,
											"value": "486"
										},
										{
											"begin": 8623,
											"end": 8677,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8343,
											"end": 8683,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8260,
											"end": 8683,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 8260,
											"end": 8683,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8260,
											"end": 8683,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8260,
											"end": 8683,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8260,
											"end": 8683,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8260,
											"end": 8683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8702,
											"end": 9040,
											"name": "tag",
											"source": 15,
											"value": "367"
										},
										{
											"begin": 8702,
											"end": 9040,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8757,
											"end": 8762,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8806,
											"end": 8809,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8799,
											"end": 8803,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 8791,
											"end": 8797,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8787,
											"end": 8804,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8783,
											"end": 8810,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 8773,
											"end": 8895,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "488"
										},
										{
											"begin": 8773,
											"end": 8895,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8814,
											"end": 8893,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "489"
										},
										{
											"begin": 8814,
											"end": 8893,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "360"
										},
										{
											"begin": 8814,
											"end": 8893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8814,
											"end": 8893,
											"name": "tag",
											"source": 15,
											"value": "489"
										},
										{
											"begin": 8814,
											"end": 8893,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8773,
											"end": 8895,
											"name": "tag",
											"source": 15,
											"value": "488"
										},
										{
											"begin": 8773,
											"end": 8895,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8931,
											"end": 8937,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8918,
											"end": 8938,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 8956,
											"end": 9034,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "490"
										},
										{
											"begin": 9030,
											"end": 9033,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 9022,
											"end": 9028,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9015,
											"end": 9019,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9007,
											"end": 9013,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 9003,
											"end": 9020,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8956,
											"end": 9034,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "366"
										},
										{
											"begin": 8956,
											"end": 9034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8956,
											"end": 9034,
											"name": "tag",
											"source": 15,
											"value": "490"
										},
										{
											"begin": 8956,
											"end": 9034,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8947,
											"end": 9034,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8947,
											"end": 9034,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8763,
											"end": 9040,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8702,
											"end": 9040,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8702,
											"end": 9040,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8702,
											"end": 9040,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8702,
											"end": 9040,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8702,
											"end": 9040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9046,
											"end": 9989,
											"name": "tag",
											"source": 15,
											"value": "87"
										},
										{
											"begin": 9046,
											"end": 9989,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9141,
											"end": 9147,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9149,
											"end": 9155,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9157,
											"end": 9163,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9165,
											"end": 9171,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9214,
											"end": 9217,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 9202,
											"end": 9211,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 9193,
											"end": 9200,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 9189,
											"end": 9212,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 9185,
											"end": 9218,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 9182,
											"end": 9302,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9182,
											"end": 9302,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "492"
										},
										{
											"begin": 9182,
											"end": 9302,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9221,
											"end": 9300,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "493"
										},
										{
											"begin": 9221,
											"end": 9300,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "337"
										},
										{
											"begin": 9221,
											"end": 9300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9221,
											"end": 9300,
											"name": "tag",
											"source": 15,
											"value": "493"
										},
										{
											"begin": 9221,
											"end": 9300,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9182,
											"end": 9302,
											"name": "tag",
											"source": 15,
											"value": "492"
										},
										{
											"begin": 9182,
											"end": 9302,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9341,
											"end": 9342,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9366,
											"end": 9419,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "494"
										},
										{
											"begin": 9411,
											"end": 9418,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 9402,
											"end": 9408,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9391,
											"end": 9400,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 9387,
											"end": 9409,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9366,
											"end": 9419,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 9366,
											"end": 9419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9366,
											"end": 9419,
											"name": "tag",
											"source": 15,
											"value": "494"
										},
										{
											"begin": 9366,
											"end": 9419,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9356,
											"end": 9419,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 9356,
											"end": 9419,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9312,
											"end": 9429,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9468,
											"end": 9470,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9494,
											"end": 9547,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "495"
										},
										{
											"begin": 9539,
											"end": 9546,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 9530,
											"end": 9536,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9519,
											"end": 9528,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 9515,
											"end": 9537,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9494,
											"end": 9547,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 9494,
											"end": 9547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9494,
											"end": 9547,
											"name": "tag",
											"source": 15,
											"value": "495"
										},
										{
											"begin": 9494,
											"end": 9547,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9484,
											"end": 9547,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 9484,
											"end": 9547,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9439,
											"end": 9557,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9596,
											"end": 9598,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 9622,
											"end": 9675,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "496"
										},
										{
											"begin": 9667,
											"end": 9674,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 9658,
											"end": 9664,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9647,
											"end": 9656,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 9643,
											"end": 9665,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9622,
											"end": 9675,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "351"
										},
										{
											"begin": 9622,
											"end": 9675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9622,
											"end": 9675,
											"name": "tag",
											"source": 15,
											"value": "496"
										},
										{
											"begin": 9622,
											"end": 9675,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9612,
											"end": 9675,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9612,
											"end": 9675,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9567,
											"end": 9685,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9752,
											"end": 9754,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 9741,
											"end": 9750,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 9737,
											"end": 9755,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9724,
											"end": 9756,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 9783,
											"end": 9801,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9775,
											"end": 9781,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9772,
											"end": 9802,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 9769,
											"end": 9886,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9769,
											"end": 9886,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "497"
										},
										{
											"begin": 9769,
											"end": 9886,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9805,
											"end": 9884,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "498"
										},
										{
											"begin": 9805,
											"end": 9884,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "338"
										},
										{
											"begin": 9805,
											"end": 9884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9805,
											"end": 9884,
											"name": "tag",
											"source": 15,
											"value": "498"
										},
										{
											"begin": 9805,
											"end": 9884,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9769,
											"end": 9886,
											"name": "tag",
											"source": 15,
											"value": "497"
										},
										{
											"begin": 9769,
											"end": 9886,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9910,
											"end": 9972,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "499"
										},
										{
											"begin": 9964,
											"end": 9971,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 9955,
											"end": 9961,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9944,
											"end": 9953,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 9940,
											"end": 9962,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9910,
											"end": 9972,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "367"
										},
										{
											"begin": 9910,
											"end": 9972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9910,
											"end": 9972,
											"name": "tag",
											"source": 15,
											"value": "499"
										},
										{
											"begin": 9910,
											"end": 9972,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9900,
											"end": 9972,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9900,
											"end": 9972,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9695,
											"end": 9982,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9046,
											"end": 9989,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9046,
											"end": 9989,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 9046,
											"end": 9989,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9046,
											"end": 9989,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 9046,
											"end": 9989,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9046,
											"end": 9989,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9046,
											"end": 9989,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9046,
											"end": 9989,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9995,
											"end": 10469,
											"name": "tag",
											"source": 15,
											"value": "95"
										},
										{
											"begin": 9995,
											"end": 10469,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10063,
											"end": 10069,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10071,
											"end": 10077,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 10120,
											"end": 10122,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 10108,
											"end": 10117,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10099,
											"end": 10106,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 10095,
											"end": 10118,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 10091,
											"end": 10123,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 10088,
											"end": 10207,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10088,
											"end": 10207,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "501"
										},
										{
											"begin": 10088,
											"end": 10207,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10126,
											"end": 10205,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "502"
										},
										{
											"begin": 10126,
											"end": 10205,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "337"
										},
										{
											"begin": 10126,
											"end": 10205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10126,
											"end": 10205,
											"name": "tag",
											"source": 15,
											"value": "502"
										},
										{
											"begin": 10126,
											"end": 10205,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10088,
											"end": 10207,
											"name": "tag",
											"source": 15,
											"value": "501"
										},
										{
											"begin": 10088,
											"end": 10207,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10246,
											"end": 10247,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10271,
											"end": 10324,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "503"
										},
										{
											"begin": 10316,
											"end": 10323,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 10307,
											"end": 10313,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10296,
											"end": 10305,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 10292,
											"end": 10314,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10271,
											"end": 10324,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 10271,
											"end": 10324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10271,
											"end": 10324,
											"name": "tag",
											"source": 15,
											"value": "503"
										},
										{
											"begin": 10271,
											"end": 10324,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10261,
											"end": 10324,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 10261,
											"end": 10324,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10217,
											"end": 10334,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10373,
											"end": 10375,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10399,
											"end": 10452,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "504"
										},
										{
											"begin": 10444,
											"end": 10451,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 10435,
											"end": 10441,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10424,
											"end": 10433,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 10420,
											"end": 10442,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10399,
											"end": 10452,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 10399,
											"end": 10452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10399,
											"end": 10452,
											"name": "tag",
											"source": 15,
											"value": "504"
										},
										{
											"begin": 10399,
											"end": 10452,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10389,
											"end": 10452,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10389,
											"end": 10452,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10344,
											"end": 10462,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9995,
											"end": 10469,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9995,
											"end": 10469,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9995,
											"end": 10469,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9995,
											"end": 10469,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9995,
											"end": 10469,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9995,
											"end": 10469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10475,
											"end": 10655,
											"name": "tag",
											"source": 15,
											"value": "368"
										},
										{
											"begin": 10475,
											"end": 10655,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10523,
											"end": 10600,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10520,
											"end": 10521,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10513,
											"end": 10601,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10620,
											"end": 10624,
											"name": "PUSH",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 10617,
											"end": 10618,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 10610,
											"end": 10625,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10644,
											"end": 10648,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 10641,
											"end": 10642,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10634,
											"end": 10649,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 10661,
											"end": 10981,
											"name": "tag",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 10661,
											"end": 10981,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10705,
											"end": 10711,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10742,
											"end": 10743,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 10736,
											"end": 10740,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10732,
											"end": 10744,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 10722,
											"end": 10744,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10722,
											"end": 10744,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10789,
											"end": 10790,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 10783,
											"end": 10787,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10779,
											"end": 10791,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 10810,
											"end": 10828,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 10800,
											"end": 10881,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "507"
										},
										{
											"begin": 10800,
											"end": 10881,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10866,
											"end": 10870,
											"name": "PUSH",
											"source": 15,
											"value": "7F"
										},
										{
											"begin": 10858,
											"end": 10864,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10854,
											"end": 10871,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 10844,
											"end": 10871,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10844,
											"end": 10871,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10800,
											"end": 10881,
											"name": "tag",
											"source": 15,
											"value": "507"
										},
										{
											"begin": 10800,
											"end": 10881,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10928,
											"end": 10930,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10920,
											"end": 10926,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10917,
											"end": 10931,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 10897,
											"end": 10915,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10894,
											"end": 10932,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 10891,
											"end": 10975,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "508"
										},
										{
											"begin": 10891,
											"end": 10975,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10947,
											"end": 10965,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "509"
										},
										{
											"begin": 10947,
											"end": 10965,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "368"
										},
										{
											"begin": 10947,
											"end": 10965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10947,
											"end": 10965,
											"name": "tag",
											"source": 15,
											"value": "509"
										},
										{
											"begin": 10947,
											"end": 10965,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10891,
											"end": 10975,
											"name": "tag",
											"source": 15,
											"value": "508"
										},
										{
											"begin": 10891,
											"end": 10975,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10712,
											"end": 10981,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10661,
											"end": 10981,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10661,
											"end": 10981,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10661,
											"end": 10981,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10661,
											"end": 10981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10987,
											"end": 11429,
											"name": "tag",
											"source": 15,
											"value": "128"
										},
										{
											"begin": 10987,
											"end": 11429,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11136,
											"end": 11140,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11174,
											"end": 11176,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 11163,
											"end": 11172,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11159,
											"end": 11177,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11151,
											"end": 11177,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11151,
											"end": 11177,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11187,
											"end": 11258,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "511"
										},
										{
											"begin": 11255,
											"end": 11256,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11244,
											"end": 11253,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11240,
											"end": 11257,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11231,
											"end": 11237,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 11187,
											"end": 11258,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "354"
										},
										{
											"begin": 11187,
											"end": 11258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11187,
											"end": 11258,
											"name": "tag",
											"source": 15,
											"value": "511"
										},
										{
											"begin": 11187,
											"end": 11258,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11268,
											"end": 11340,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "512"
										},
										{
											"begin": 11336,
											"end": 11338,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11325,
											"end": 11334,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11321,
											"end": 11339,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11312,
											"end": 11318,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 11268,
											"end": 11340,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "357"
										},
										{
											"begin": 11268,
											"end": 11340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11268,
											"end": 11340,
											"name": "tag",
											"source": 15,
											"value": "512"
										},
										{
											"begin": 11268,
											"end": 11340,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11350,
											"end": 11422,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "513"
										},
										{
											"begin": 11418,
											"end": 11420,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 11407,
											"end": 11416,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11403,
											"end": 11421,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11394,
											"end": 11400,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 11350,
											"end": 11422,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "354"
										},
										{
											"begin": 11350,
											"end": 11422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11350,
											"end": 11422,
											"name": "tag",
											"source": 15,
											"value": "513"
										},
										{
											"begin": 11350,
											"end": 11422,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10987,
											"end": 11429,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 10987,
											"end": 11429,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 10987,
											"end": 11429,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10987,
											"end": 11429,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10987,
											"end": 11429,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10987,
											"end": 11429,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10987,
											"end": 11429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11435,
											"end": 11767,
											"name": "tag",
											"source": 15,
											"value": "133"
										},
										{
											"begin": 11435,
											"end": 11767,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11556,
											"end": 11560,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11594,
											"end": 11596,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 11583,
											"end": 11592,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11579,
											"end": 11597,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11571,
											"end": 11597,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11571,
											"end": 11597,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11607,
											"end": 11678,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "515"
										},
										{
											"begin": 11675,
											"end": 11676,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11664,
											"end": 11673,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11660,
											"end": 11677,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11651,
											"end": 11657,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 11607,
											"end": 11678,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "354"
										},
										{
											"begin": 11607,
											"end": 11678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11607,
											"end": 11678,
											"name": "tag",
											"source": 15,
											"value": "515"
										},
										{
											"begin": 11607,
											"end": 11678,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11688,
											"end": 11760,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "516"
										},
										{
											"begin": 11756,
											"end": 11758,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11745,
											"end": 11754,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11741,
											"end": 11759,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11732,
											"end": 11738,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 11688,
											"end": 11760,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "357"
										},
										{
											"begin": 11688,
											"end": 11760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11688,
											"end": 11760,
											"name": "tag",
											"source": 15,
											"value": "516"
										},
										{
											"begin": 11688,
											"end": 11760,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11435,
											"end": 11767,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 11435,
											"end": 11767,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11435,
											"end": 11767,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11435,
											"end": 11767,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11435,
											"end": 11767,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11435,
											"end": 11767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11773,
											"end": 11953,
											"name": "tag",
											"source": 15,
											"value": "142"
										},
										{
											"begin": 11773,
											"end": 11953,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11821,
											"end": 11898,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11818,
											"end": 11819,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11811,
											"end": 11899,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11918,
											"end": 11922,
											"name": "PUSH",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 11915,
											"end": 11916,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 11908,
											"end": 11923,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11942,
											"end": 11946,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 11939,
											"end": 11940,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11932,
											"end": 11947,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 11959,
											"end": 12139,
											"name": "tag",
											"source": 15,
											"value": "369"
										},
										{
											"begin": 11959,
											"end": 12139,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12007,
											"end": 12084,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12004,
											"end": 12005,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11997,
											"end": 12085,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12104,
											"end": 12108,
											"name": "PUSH",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 12101,
											"end": 12102,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 12094,
											"end": 12109,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12128,
											"end": 12132,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 12125,
											"end": 12126,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12118,
											"end": 12133,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 12145,
											"end": 12336,
											"name": "tag",
											"source": 15,
											"value": "147"
										},
										{
											"begin": 12145,
											"end": 12336,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12185,
											"end": 12188,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12204,
											"end": 12224,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "520"
										},
										{
											"begin": 12222,
											"end": 12223,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12204,
											"end": 12224,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "349"
										},
										{
											"begin": 12204,
											"end": 12224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12204,
											"end": 12224,
											"name": "tag",
											"source": 15,
											"value": "520"
										},
										{
											"begin": 12204,
											"end": 12224,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12199,
											"end": 12224,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12199,
											"end": 12224,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12238,
											"end": 12258,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "521"
										},
										{
											"begin": 12256,
											"end": 12257,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12238,
											"end": 12258,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "349"
										},
										{
											"begin": 12238,
											"end": 12258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12238,
											"end": 12258,
											"name": "tag",
											"source": 15,
											"value": "521"
										},
										{
											"begin": 12238,
											"end": 12258,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12233,
											"end": 12258,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12233,
											"end": 12258,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12281,
											"end": 12282,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12278,
											"end": 12279,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12274,
											"end": 12283,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12267,
											"end": 12283,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12267,
											"end": 12283,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12302,
											"end": 12305,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 12299,
											"end": 12300,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12296,
											"end": 12306,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 12293,
											"end": 12329,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 12293,
											"end": 12329,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "522"
										},
										{
											"begin": 12293,
											"end": 12329,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12309,
											"end": 12327,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "523"
										},
										{
											"begin": 12309,
											"end": 12327,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "369"
										},
										{
											"begin": 12309,
											"end": 12327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12309,
											"end": 12327,
											"name": "tag",
											"source": 15,
											"value": "523"
										},
										{
											"begin": 12309,
											"end": 12327,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12293,
											"end": 12329,
											"name": "tag",
											"source": 15,
											"value": "522"
										},
										{
											"begin": 12293,
											"end": 12329,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12145,
											"end": 12336,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12145,
											"end": 12336,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12145,
											"end": 12336,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12145,
											"end": 12336,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12145,
											"end": 12336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12342,
											"end": 12421,
											"name": "tag",
											"source": 15,
											"value": "370"
										},
										{
											"begin": 12342,
											"end": 12421,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12381,
											"end": 12388,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12410,
											"end": 12415,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12399,
											"end": 12415,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12399,
											"end": 12415,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12342,
											"end": 12421,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12342,
											"end": 12421,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12342,
											"end": 12421,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12342,
											"end": 12421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12427,
											"end": 12584,
											"name": "tag",
											"source": 15,
											"value": "371"
										},
										{
											"begin": 12427,
											"end": 12584,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12532,
											"end": 12577,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "526"
										},
										{
											"begin": 12552,
											"end": 12576,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "527"
										},
										{
											"begin": 12570,
											"end": 12575,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12552,
											"end": 12576,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "349"
										},
										{
											"begin": 12552,
											"end": 12576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12552,
											"end": 12576,
											"name": "tag",
											"source": 15,
											"value": "527"
										},
										{
											"begin": 12552,
											"end": 12576,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12532,
											"end": 12577,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "370"
										},
										{
											"begin": 12532,
											"end": 12577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12532,
											"end": 12577,
											"name": "tag",
											"source": 15,
											"value": "526"
										},
										{
											"begin": 12532,
											"end": 12577,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12527,
											"end": 12530,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12520,
											"end": 12578,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12427,
											"end": 12584,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12427,
											"end": 12584,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12427,
											"end": 12584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12590,
											"end": 12684,
											"name": "tag",
											"source": 15,
											"value": "372"
										},
										{
											"begin": 12590,
											"end": 12684,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12623,
											"end": 12631,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12671,
											"end": 12676,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12667,
											"end": 12669,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 12663,
											"end": 12677,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 12642,
											"end": 12677,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12642,
											"end": 12677,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12590,
											"end": 12684,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12590,
											"end": 12684,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12590,
											"end": 12684,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12590,
											"end": 12684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12690,
											"end": 12784,
											"name": "tag",
											"source": 15,
											"value": "373"
										},
										{
											"begin": 12690,
											"end": 12784,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12729,
											"end": 12736,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12758,
											"end": 12778,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "530"
										},
										{
											"begin": 12772,
											"end": 12777,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12758,
											"end": 12778,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "372"
										},
										{
											"begin": 12758,
											"end": 12778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12758,
											"end": 12778,
											"name": "tag",
											"source": 15,
											"value": "530"
										},
										{
											"begin": 12758,
											"end": 12778,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12747,
											"end": 12778,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12747,
											"end": 12778,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12690,
											"end": 12784,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12690,
											"end": 12784,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12690,
											"end": 12784,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12690,
											"end": 12784,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12790,
											"end": 12890,
											"name": "tag",
											"source": 15,
											"value": "374"
										},
										{
											"begin": 12790,
											"end": 12890,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12829,
											"end": 12836,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12858,
											"end": 12884,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "532"
										},
										{
											"begin": 12878,
											"end": 12883,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12858,
											"end": 12884,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "373"
										},
										{
											"begin": 12858,
											"end": 12884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12858,
											"end": 12884,
											"name": "tag",
											"source": 15,
											"value": "532"
										},
										{
											"begin": 12858,
											"end": 12884,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12847,
											"end": 12884,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12847,
											"end": 12884,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12790,
											"end": 12890,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12790,
											"end": 12890,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12790,
											"end": 12890,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12790,
											"end": 12890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12896,
											"end": 13053,
											"name": "tag",
											"source": 15,
											"value": "375"
										},
										{
											"begin": 12896,
											"end": 13053,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13001,
											"end": 13046,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "534"
										},
										{
											"begin": 13021,
											"end": 13045,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "535"
										},
										{
											"begin": 13039,
											"end": 13044,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13021,
											"end": 13045,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "353"
										},
										{
											"begin": 13021,
											"end": 13045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13021,
											"end": 13045,
											"name": "tag",
											"source": 15,
											"value": "535"
										},
										{
											"begin": 13021,
											"end": 13045,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13001,
											"end": 13046,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "374"
										},
										{
											"begin": 13001,
											"end": 13046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13001,
											"end": 13046,
											"name": "tag",
											"source": 15,
											"value": "534"
										},
										{
											"begin": 13001,
											"end": 13046,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12996,
											"end": 12999,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12989,
											"end": 13047,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12896,
											"end": 13053,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12896,
											"end": 13053,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12896,
											"end": 13053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13059,
											"end": 13597,
											"name": "tag",
											"source": 15,
											"value": "149"
										},
										{
											"begin": 13059,
											"end": 13597,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13227,
											"end": 13230,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13242,
											"end": 13317,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "537"
										},
										{
											"begin": 13313,
											"end": 13316,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13304,
											"end": 13310,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 13242,
											"end": 13317,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "371"
										},
										{
											"begin": 13242,
											"end": 13317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13242,
											"end": 13317,
											"name": "tag",
											"source": 15,
											"value": "537"
										},
										{
											"begin": 13242,
											"end": 13317,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13342,
											"end": 13344,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13337,
											"end": 13340,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13333,
											"end": 13345,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13326,
											"end": 13345,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13326,
											"end": 13345,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13355,
											"end": 13430,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "538"
										},
										{
											"begin": 13426,
											"end": 13429,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13417,
											"end": 13423,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 13355,
											"end": 13430,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "375"
										},
										{
											"begin": 13355,
											"end": 13430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13355,
											"end": 13430,
											"name": "tag",
											"source": 15,
											"value": "538"
										},
										{
											"begin": 13355,
											"end": 13430,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13455,
											"end": 13457,
											"name": "PUSH",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 13450,
											"end": 13453,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13446,
											"end": 13458,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13439,
											"end": 13458,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13439,
											"end": 13458,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13468,
											"end": 13543,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "539"
										},
										{
											"begin": 13539,
											"end": 13542,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13530,
											"end": 13536,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 13468,
											"end": 13543,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "371"
										},
										{
											"begin": 13468,
											"end": 13543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13468,
											"end": 13543,
											"name": "tag",
											"source": 15,
											"value": "539"
										},
										{
											"begin": 13468,
											"end": 13543,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13568,
											"end": 13570,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13563,
											"end": 13566,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13559,
											"end": 13571,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13552,
											"end": 13571,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13552,
											"end": 13571,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13588,
											"end": 13591,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13581,
											"end": 13591,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13581,
											"end": 13591,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13059,
											"end": 13597,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 13059,
											"end": 13597,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 13059,
											"end": 13597,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13059,
											"end": 13597,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13059,
											"end": 13597,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13059,
											"end": 13597,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13059,
											"end": 13597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13603,
											"end": 13783,
											"name": "tag",
											"source": 15,
											"value": "259"
										},
										{
											"begin": 13603,
											"end": 13783,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13651,
											"end": 13728,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13648,
											"end": 13649,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13641,
											"end": 13729,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13748,
											"end": 13752,
											"name": "PUSH",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 13745,
											"end": 13746,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 13738,
											"end": 13753,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13772,
											"end": 13776,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 13769,
											"end": 13770,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13762,
											"end": 13777,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 13789,
											"end": 13965,
											"name": "tag",
											"source": 15,
											"value": "151"
										},
										{
											"begin": 13789,
											"end": 13965,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13821,
											"end": 13822,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13838,
											"end": 13858,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "542"
										},
										{
											"begin": 13856,
											"end": 13857,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13838,
											"end": 13858,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "349"
										},
										{
											"begin": 13838,
											"end": 13858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13838,
											"end": 13858,
											"name": "tag",
											"source": 15,
											"value": "542"
										},
										{
											"begin": 13838,
											"end": 13858,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13833,
											"end": 13858,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13833,
											"end": 13858,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13872,
											"end": 13892,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "543"
										},
										{
											"begin": 13890,
											"end": 13891,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13872,
											"end": 13892,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "349"
										},
										{
											"begin": 13872,
											"end": 13892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13872,
											"end": 13892,
											"name": "tag",
											"source": 15,
											"value": "543"
										},
										{
											"begin": 13872,
											"end": 13892,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13867,
											"end": 13892,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 13867,
											"end": 13892,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13911,
											"end": 13912,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13901,
											"end": 13936,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "544"
										},
										{
											"begin": 13901,
											"end": 13936,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 13916,
											"end": 13934,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "545"
										},
										{
											"begin": 13916,
											"end": 13934,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "259"
										},
										{
											"begin": 13916,
											"end": 13934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13916,
											"end": 13934,
											"name": "tag",
											"source": 15,
											"value": "545"
										},
										{
											"begin": 13916,
											"end": 13934,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13901,
											"end": 13936,
											"name": "tag",
											"source": 15,
											"value": "544"
										},
										{
											"begin": 13901,
											"end": 13936,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13957,
											"end": 13958,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13954,
											"end": 13955,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13950,
											"end": 13959,
											"name": "MOD",
											"source": 15
										},
										{
											"begin": 13945,
											"end": 13959,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13945,
											"end": 13959,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13789,
											"end": 13965,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 13789,
											"end": 13965,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13789,
											"end": 13965,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13789,
											"end": 13965,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13789,
											"end": 13965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13971,
											"end": 14119,
											"name": "tag",
											"source": 15,
											"value": "376"
										},
										{
											"begin": 13971,
											"end": 14119,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14073,
											"end": 14084,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14110,
											"end": 14113,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14095,
											"end": 14113,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14095,
											"end": 14113,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13971,
											"end": 14119,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 13971,
											"end": 14119,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13971,
											"end": 14119,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13971,
											"end": 14119,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13971,
											"end": 14119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14125,
											"end": 14515,
											"name": "tag",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 14125,
											"end": 14515,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14231,
											"end": 14234,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14259,
											"end": 14298,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "548"
										},
										{
											"begin": 14292,
											"end": 14297,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14259,
											"end": 14298,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "344"
										},
										{
											"begin": 14259,
											"end": 14298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14259,
											"end": 14298,
											"name": "tag",
											"source": 15,
											"value": "548"
										},
										{
											"begin": 14259,
											"end": 14298,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14314,
											"end": 14403,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "549"
										},
										{
											"begin": 14396,
											"end": 14402,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14391,
											"end": 14394,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 14314,
											"end": 14403,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "376"
										},
										{
											"begin": 14314,
											"end": 14403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14314,
											"end": 14403,
											"name": "tag",
											"source": 15,
											"value": "549"
										},
										{
											"begin": 14314,
											"end": 14403,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14307,
											"end": 14403,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 14307,
											"end": 14403,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14412,
											"end": 14477,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "550"
										},
										{
											"begin": 14470,
											"end": 14476,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14465,
											"end": 14468,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 14458,
											"end": 14462,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 14451,
											"end": 14456,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 14447,
											"end": 14463,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14412,
											"end": 14477,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "346"
										},
										{
											"begin": 14412,
											"end": 14477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14412,
											"end": 14477,
											"name": "tag",
											"source": 15,
											"value": "550"
										},
										{
											"begin": 14412,
											"end": 14477,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14502,
											"end": 14508,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 14497,
											"end": 14500,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 14493,
											"end": 14509,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14486,
											"end": 14509,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14486,
											"end": 14509,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14235,
											"end": 14515,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14125,
											"end": 14515,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 14125,
											"end": 14515,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14125,
											"end": 14515,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14125,
											"end": 14515,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14125,
											"end": 14515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14521,
											"end": 14956,
											"name": "tag",
											"source": 15,
											"value": "183"
										},
										{
											"begin": 14521,
											"end": 14956,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14701,
											"end": 14704,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14723,
											"end": 14818,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "552"
										},
										{
											"begin": 14814,
											"end": 14817,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14805,
											"end": 14811,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 14723,
											"end": 14818,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 14723,
											"end": 14818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14723,
											"end": 14818,
											"name": "tag",
											"source": 15,
											"value": "552"
										},
										{
											"begin": 14723,
											"end": 14818,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14716,
											"end": 14818,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14716,
											"end": 14818,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14835,
											"end": 14930,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "553"
										},
										{
											"begin": 14926,
											"end": 14929,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14917,
											"end": 14923,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 14835,
											"end": 14930,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 14835,
											"end": 14930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14835,
											"end": 14930,
											"name": "tag",
											"source": 15,
											"value": "553"
										},
										{
											"begin": 14835,
											"end": 14930,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14828,
											"end": 14930,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14828,
											"end": 14930,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14947,
											"end": 14950,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14940,
											"end": 14950,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14940,
											"end": 14950,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14521,
											"end": 14956,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 14521,
											"end": 14956,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 14521,
											"end": 14956,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14521,
											"end": 14956,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14521,
											"end": 14956,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14521,
											"end": 14956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14962,
											"end": 15060,
											"name": "tag",
											"source": 15,
											"value": "378"
										},
										{
											"begin": 14962,
											"end": 15060,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15013,
											"end": 15019,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15047,
											"end": 15052,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15041,
											"end": 15053,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 15031,
											"end": 15053,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15031,
											"end": 15053,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14962,
											"end": 15060,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14962,
											"end": 15060,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14962,
											"end": 15060,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14962,
											"end": 15060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15066,
											"end": 15234,
											"name": "tag",
											"source": 15,
											"value": "379"
										},
										{
											"begin": 15066,
											"end": 15234,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15149,
											"end": 15160,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15183,
											"end": 15189,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15178,
											"end": 15181,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15171,
											"end": 15190,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15223,
											"end": 15227,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 15218,
											"end": 15221,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15214,
											"end": 15228,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15199,
											"end": 15228,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15199,
											"end": 15228,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15066,
											"end": 15234,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 15066,
											"end": 15234,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15066,
											"end": 15234,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15066,
											"end": 15234,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15066,
											"end": 15234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15240,
											"end": 15613,
											"name": "tag",
											"source": 15,
											"value": "380"
										},
										{
											"begin": 15240,
											"end": 15613,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15326,
											"end": 15329,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15354,
											"end": 15392,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "557"
										},
										{
											"begin": 15386,
											"end": 15391,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15354,
											"end": 15392,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "378"
										},
										{
											"begin": 15354,
											"end": 15392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15354,
											"end": 15392,
											"name": "tag",
											"source": 15,
											"value": "557"
										},
										{
											"begin": 15354,
											"end": 15392,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15408,
											"end": 15478,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "558"
										},
										{
											"begin": 15471,
											"end": 15477,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15466,
											"end": 15469,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 15408,
											"end": 15478,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "379"
										},
										{
											"begin": 15408,
											"end": 15478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15408,
											"end": 15478,
											"name": "tag",
											"source": 15,
											"value": "558"
										},
										{
											"begin": 15408,
											"end": 15478,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15401,
											"end": 15478,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 15401,
											"end": 15478,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15487,
											"end": 15552,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "559"
										},
										{
											"begin": 15545,
											"end": 15551,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15540,
											"end": 15543,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 15533,
											"end": 15537,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 15526,
											"end": 15531,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 15522,
											"end": 15538,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15487,
											"end": 15552,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "346"
										},
										{
											"begin": 15487,
											"end": 15552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15487,
											"end": 15552,
											"name": "tag",
											"source": 15,
											"value": "559"
										},
										{
											"begin": 15487,
											"end": 15552,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15577,
											"end": 15606,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "560"
										},
										{
											"begin": 15599,
											"end": 15605,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15577,
											"end": 15606,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "347"
										},
										{
											"begin": 15577,
											"end": 15606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15577,
											"end": 15606,
											"name": "tag",
											"source": 15,
											"value": "560"
										},
										{
											"begin": 15577,
											"end": 15606,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15572,
											"end": 15575,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 15568,
											"end": 15607,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15561,
											"end": 15607,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15561,
											"end": 15607,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15330,
											"end": 15613,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15240,
											"end": 15613,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 15240,
											"end": 15613,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15240,
											"end": 15613,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15240,
											"end": 15613,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15240,
											"end": 15613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15619,
											"end": 16259,
											"name": "tag",
											"source": 15,
											"value": "231"
										},
										{
											"begin": 15619,
											"end": 16259,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15814,
											"end": 15818,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15852,
											"end": 15855,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 15841,
											"end": 15850,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15837,
											"end": 15856,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15829,
											"end": 15856,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15829,
											"end": 15856,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15866,
											"end": 15937,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "562"
										},
										{
											"begin": 15934,
											"end": 15935,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15923,
											"end": 15932,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15919,
											"end": 15936,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15910,
											"end": 15916,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 15866,
											"end": 15937,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "354"
										},
										{
											"begin": 15866,
											"end": 15937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15866,
											"end": 15937,
											"name": "tag",
											"source": 15,
											"value": "562"
										},
										{
											"begin": 15866,
											"end": 15937,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15947,
											"end": 16019,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "563"
										},
										{
											"begin": 16015,
											"end": 16017,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 16004,
											"end": 16013,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16000,
											"end": 16018,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15991,
											"end": 15997,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 15947,
											"end": 16019,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "354"
										},
										{
											"begin": 15947,
											"end": 16019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15947,
											"end": 16019,
											"name": "tag",
											"source": 15,
											"value": "563"
										},
										{
											"begin": 15947,
											"end": 16019,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16029,
											"end": 16101,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "564"
										},
										{
											"begin": 16097,
											"end": 16099,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 16086,
											"end": 16095,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16082,
											"end": 16100,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16073,
											"end": 16079,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 16029,
											"end": 16101,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "357"
										},
										{
											"begin": 16029,
											"end": 16101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16029,
											"end": 16101,
											"name": "tag",
											"source": 15,
											"value": "564"
										},
										{
											"begin": 16029,
											"end": 16101,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16148,
											"end": 16157,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16142,
											"end": 16146,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16138,
											"end": 16158,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 16133,
											"end": 16135,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 16122,
											"end": 16131,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16118,
											"end": 16136,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16111,
											"end": 16159,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16176,
											"end": 16252,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "565"
										},
										{
											"begin": 16247,
											"end": 16251,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16238,
											"end": 16244,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 16176,
											"end": 16252,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "380"
										},
										{
											"begin": 16176,
											"end": 16252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16176,
											"end": 16252,
											"name": "tag",
											"source": 15,
											"value": "565"
										},
										{
											"begin": 16176,
											"end": 16252,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16168,
											"end": 16252,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16168,
											"end": 16252,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15619,
											"end": 16259,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 15619,
											"end": 16259,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 15619,
											"end": 16259,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15619,
											"end": 16259,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15619,
											"end": 16259,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15619,
											"end": 16259,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15619,
											"end": 16259,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15619,
											"end": 16259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16265,
											"end": 16406,
											"name": "tag",
											"source": 15,
											"value": "381"
										},
										{
											"begin": 16265,
											"end": 16406,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16321,
											"end": 16326,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16352,
											"end": 16358,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16346,
											"end": 16359,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 16337,
											"end": 16359,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16337,
											"end": 16359,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16368,
											"end": 16400,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "567"
										},
										{
											"begin": 16394,
											"end": 16399,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16368,
											"end": 16400,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "340"
										},
										{
											"begin": 16368,
											"end": 16400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16368,
											"end": 16400,
											"name": "tag",
											"source": 15,
											"value": "567"
										},
										{
											"begin": 16368,
											"end": 16400,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16265,
											"end": 16406,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 16265,
											"end": 16406,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16265,
											"end": 16406,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16265,
											"end": 16406,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16265,
											"end": 16406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16412,
											"end": 16761,
											"name": "tag",
											"source": 15,
											"value": "234"
										},
										{
											"begin": 16412,
											"end": 16761,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16481,
											"end": 16487,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16530,
											"end": 16532,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 16518,
											"end": 16527,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16509,
											"end": 16516,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 16505,
											"end": 16528,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 16501,
											"end": 16533,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 16498,
											"end": 16617,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 16498,
											"end": 16617,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "569"
										},
										{
											"begin": 16498,
											"end": 16617,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 16536,
											"end": 16615,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "570"
										},
										{
											"begin": 16536,
											"end": 16615,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "337"
										},
										{
											"begin": 16536,
											"end": 16615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16536,
											"end": 16615,
											"name": "tag",
											"source": 15,
											"value": "570"
										},
										{
											"begin": 16536,
											"end": 16615,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16498,
											"end": 16617,
											"name": "tag",
											"source": 15,
											"value": "569"
										},
										{
											"begin": 16498,
											"end": 16617,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16656,
											"end": 16657,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16681,
											"end": 16744,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "571"
										},
										{
											"begin": 16736,
											"end": 16743,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 16727,
											"end": 16733,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16716,
											"end": 16725,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 16712,
											"end": 16734,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16681,
											"end": 16744,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "381"
										},
										{
											"begin": 16681,
											"end": 16744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16681,
											"end": 16744,
											"name": "tag",
											"source": 15,
											"value": "571"
										},
										{
											"begin": 16681,
											"end": 16744,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16671,
											"end": 16744,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16671,
											"end": 16744,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16627,
											"end": 16754,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16412,
											"end": 16761,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 16412,
											"end": 16761,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16412,
											"end": 16761,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16412,
											"end": 16761,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16412,
											"end": 16761,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16767,
											"end": 16961,
											"name": "tag",
											"source": 15,
											"value": "288"
										},
										{
											"begin": 16767,
											"end": 16961,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16807,
											"end": 16811,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16827,
											"end": 16847,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "573"
										},
										{
											"begin": 16845,
											"end": 16846,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16827,
											"end": 16847,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "349"
										},
										{
											"begin": 16827,
											"end": 16847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16827,
											"end": 16847,
											"name": "tag",
											"source": 15,
											"value": "573"
										},
										{
											"begin": 16827,
											"end": 16847,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16822,
											"end": 16847,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16822,
											"end": 16847,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16861,
											"end": 16881,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "574"
										},
										{
											"begin": 16879,
											"end": 16880,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16861,
											"end": 16881,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "349"
										},
										{
											"begin": 16861,
											"end": 16881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16861,
											"end": 16881,
											"name": "tag",
											"source": 15,
											"value": "574"
										},
										{
											"begin": 16861,
											"end": 16881,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16856,
											"end": 16881,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 16856,
											"end": 16881,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16905,
											"end": 16906,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16902,
											"end": 16903,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16898,
											"end": 16907,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 16890,
											"end": 16907,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16890,
											"end": 16907,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16929,
											"end": 16930,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16923,
											"end": 16927,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16920,
											"end": 16931,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 16917,
											"end": 16954,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 16917,
											"end": 16954,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "575"
										},
										{
											"begin": 16917,
											"end": 16954,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 16934,
											"end": 16952,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "576"
										},
										{
											"begin": 16934,
											"end": 16952,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "369"
										},
										{
											"begin": 16934,
											"end": 16952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16934,
											"end": 16952,
											"name": "tag",
											"source": 15,
											"value": "576"
										},
										{
											"begin": 16934,
											"end": 16952,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16917,
											"end": 16954,
											"name": "tag",
											"source": 15,
											"value": "575"
										},
										{
											"begin": 16917,
											"end": 16954,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16767,
											"end": 16961,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 16767,
											"end": 16961,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16767,
											"end": 16961,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16767,
											"end": 16961,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16767,
											"end": 16961,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16967,
											"end": 17147,
											"name": "tag",
											"source": 15,
											"value": "297"
										},
										{
											"begin": 16967,
											"end": 17147,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17015,
											"end": 17092,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17012,
											"end": 17013,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17005,
											"end": 17093,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 17112,
											"end": 17116,
											"name": "PUSH",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 17109,
											"end": 17110,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 17102,
											"end": 17117,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 17136,
											"end": 17140,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 17133,
											"end": 17134,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17126,
											"end": 17141,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/MintAnimalToken.sol",
								"contracts/SaleAnimalToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"animalTypes(uint256)": "4e7fe41e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mintAnimalToken()": "62b4c27f",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ERC721EnumerableForbiddenBatchMint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"ERC721OutOfBoundsIndex\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"animalTypes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintAnimalToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721EnumerableForbiddenBatchMint()\":[{\"details\":\"Batch mint is not allowed.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721OutOfBoundsIndex(address,uint256)\":[{\"details\":\"An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MintAnimalToken.sol\":\"MintAnimalToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x36797469c391ea5ba27408e6ca8adf0824ba6f3adea9c139be18bd6f63232c16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0dcf8bb9f7c29d678de34a051b4a71cf27ae56464678696c6913cbbfc75d548a\",\"dweb:/ipfs/QmSfdgU9V2dXh9oajUxgF9hU1aPnpd1PEMtcchoANsCNmW\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x3d6954a93ac198a2ffa384fa58ccf18e7e235263e051a394328002eff4e073de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f58c799bd939d3951c94893e83ef86acd56989d1d7db7f9d180c515e29e28ff\",\"dweb:/ipfs/QmTgAxHAAys4kq9ZfU9YB24MWYoHLGAKSxnYUigPFrNW7g\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/MintAnimalToken.sol\":{\"keccak256\":\"0xc09ef542ce42bef54990cdec5490758496e7ffeae0953059eab9df43ce6c58c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://97b1e6e861b40954863d1cd420cbf58dfb279d88d0aea738c102bccf6ca65520\",\"dweb:/ipfs/QmQyJ8B9TCGvJmNmyD51new2iqGCaDpKvy1zwjMG41n6Za\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 169,
								"contract": "contracts/MintAnimalToken.sol:MintAnimalToken",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "contracts/MintAnimalToken.sol:MintAnimalToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 175,
								"contract": "contracts/MintAnimalToken.sol:MintAnimalToken",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 179,
								"contract": "contracts/MintAnimalToken.sol:MintAnimalToken",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 183,
								"contract": "contracts/MintAnimalToken.sol:MintAnimalToken",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 189,
								"contract": "contracts/MintAnimalToken.sol:MintAnimalToken",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1299,
								"contract": "contracts/MintAnimalToken.sol:MintAnimalToken",
								"label": "_ownedTokens",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							},
							{
								"astId": 1303,
								"contract": "contracts/MintAnimalToken.sol:MintAnimalToken",
								"label": "_ownedTokensIndex",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1306,
								"contract": "contracts/MintAnimalToken.sol:MintAnimalToken",
								"label": "_allTokens",
								"offset": 0,
								"slot": "8",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 1310,
								"contract": "contracts/MintAnimalToken.sol:MintAnimalToken",
								"label": "_allTokensIndex",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 3221,
								"contract": "contracts/MintAnimalToken.sol:MintAnimalToken",
								"label": "animalTypes",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_uint256,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SaleAnimalToken.sol": {
				"SaleAnimalToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_mintAnimalTolenAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "animalTokenPrices",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mintAnimalTokenAddress",
							"outputs": [
								{
									"internalType": "contract MintAnimalToken",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "onSaleAnimalTokenArray",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_animalTokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "setForSaleAnimalToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SaleAnimalToken.sol\":97:1344  contract SaleAnimalToken {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/SaleAnimalToken.sol\":183:312  constructor(address _mintAnimalTolenAddress) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/SaleAnimalToken.sol\":280:303  _mintAnimalTolenAddress */\n  dup1\n    /* \"contracts/SaleAnimalToken.sol\":239:261  mintAnimalTokenAddress */\n  0x00\n  dup1\n    /* \"contracts/SaleAnimalToken.sol\":239:304  mintAnimalTokenAddress = MintAnimalToken(_mintAnimalTolenAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/SaleAnimalToken.sol\":183:312  constructor(address _mintAnimalTolenAddress) {... */\n  pop\n    /* \"contracts/SaleAnimalToken.sol\":97:1344  contract SaleAnimalToken {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/SaleAnimalToken.sol\":97:1344  contract SaleAnimalToken {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SaleAnimalToken.sol\":97:1344  contract SaleAnimalToken {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x2dd7d12f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x498b520e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4d1d7d5f\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xc6ffd54e\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/SaleAnimalToken.sol\":370:422  mapping(uint256 => uint256) public animalTokenPrices */\n    tag_3:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SaleAnimalToken.sol\":556:1341  function setForSaleAnimalToken(uint256 _animalTokenId, uint256 _price) public {... */\n    tag_4:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      stop\n        /* \"contracts/SaleAnimalToken.sol\":431:470  uint256[] public onSaleAnimalTokenArray */\n    tag_5:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_18:\n      tag_19\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SaleAnimalToken.sol\":129:174  MintAnimalToken public mintAnimalTokenAddress */\n    tag_6:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SaleAnimalToken.sol\":370:422  mapping(uint256 => uint256) public animalTokenPrices */\n    tag_10:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/SaleAnimalToken.sol\":556:1341  function setForSaleAnimalToken(uint256 _animalTokenId, uint256 _price) public {... */\n    tag_16:\n        /* \"contracts/SaleAnimalToken.sol\":645:669  address animalTokenOwner */\n      0x00\n        /* \"contracts/SaleAnimalToken.sol\":672:694  mintAnimalTokenAddress */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SaleAnimalToken.sol\":672:702  mintAnimalTokenAddress.ownerOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6352211e\n        /* \"contracts/SaleAnimalToken.sol\":703:717  _animalTokenId */\n      dup5\n        /* \"contracts/SaleAnimalToken.sol\":672:718  mintAnimalTokenAddress.ownerOf(_animalTokenId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_26\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_26:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_28\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_28:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n        /* \"contracts/SaleAnimalToken.sol\":645:718  address animalTokenOwner = mintAnimalTokenAddress.ownerOf(_animalTokenId) */\n      swap1\n      pop\n        /* \"contracts/SaleAnimalToken.sol\":882:892  msg.sender */\n      caller\n        /* \"contracts/SaleAnimalToken.sol\":862:892  animalTokenOwner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SaleAnimalToken.sol\":862:878  animalTokenOwner */\n      dup2\n        /* \"contracts/SaleAnimalToken.sol\":862:892  animalTokenOwner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/SaleAnimalToken.sol\":854:930  require(animalTokenOwner == msg.sender, \"Caller is not animal token onwer.\") */\n      tag_31\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_32\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_31:\n        /* \"contracts/SaleAnimalToken.sol\":958:959  0 */\n      0x00\n        /* \"contracts/SaleAnimalToken.sol\":949:955  _price */\n      dup3\n        /* \"contracts/SaleAnimalToken.sol\":949:959  _price > 0 */\n      gt\n        /* \"contracts/SaleAnimalToken.sol\":941:987  require(_price > 0, \"Price is zero or lower.\") */\n      tag_34\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_35\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_34:\n        /* \"contracts/SaleAnimalToken.sol\":1043:1044  0 */\n      0x00\n        /* \"contracts/SaleAnimalToken.sol\":1006:1023  animalTokenPrices */\n      0x01\n        /* \"contracts/SaleAnimalToken.sol\":1006:1039  animalTokenPrices[_animalTokenId] */\n      0x00\n        /* \"contracts/SaleAnimalToken.sol\":1024:1038  _animalTokenId */\n      dup6\n        /* \"contracts/SaleAnimalToken.sol\":1006:1039  animalTokenPrices[_animalTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/SaleAnimalToken.sol\":1006:1044  animalTokenPrices[_animalTokenId] == 0 */\n      eq\n        /* \"contracts/SaleAnimalToken.sol\":998:1085  require(animalTokenPrices[_animalTokenId] == 0, \"This animalToken is already on sale.\") */\n      tag_37\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_38\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_37:\n        /* \"contracts/SaleAnimalToken.sol\":1104:1126  mintAnimalTokenAddress */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SaleAnimalToken.sol\":1104:1143  mintAnimalTokenAddress.isApprovedForAll */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe985e9c5\n        /* \"contracts/SaleAnimalToken.sol\":1144:1160  animalTokenOwner */\n      dup3\n        /* \"contracts/SaleAnimalToken.sol\":1170:1174  this */\n      address\n        /* \"contracts/SaleAnimalToken.sol\":1104:1176  mintAnimalTokenAddress.isApprovedForAll(animalTokenOwner, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_40\n      swap3\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_43\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_43:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n        /* \"contracts/SaleAnimalToken.sol\":1096:1222  require(mintAnimalTokenAddress.isApprovedForAll(animalTokenOwner, address(this)), \"Animal token owner did not approve tolen.\") */\n      tag_46\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_47\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_46:\n        /* \"contracts/SaleAnimalToken.sol\":1271:1277  _price */\n      dup2\n        /* \"contracts/SaleAnimalToken.sol\":1235:1252  animalTokenPrices */\n      0x01\n        /* \"contracts/SaleAnimalToken.sol\":1235:1268  animalTokenPrices[_animalTokenId] */\n      0x00\n        /* \"contracts/SaleAnimalToken.sol\":1253:1267  _animalTokenId */\n      dup6\n        /* \"contracts/SaleAnimalToken.sol\":1235:1268  animalTokenPrices[_animalTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SaleAnimalToken.sol\":1235:1277  animalTokenPrices[_animalTokenId] = _price */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/SaleAnimalToken.sol\":1290:1312  onSaleAnimalTokenArray */\n      0x02\n        /* \"contracts/SaleAnimalToken.sol\":1318:1332  _animalTokenId */\n      dup4\n        /* \"contracts/SaleAnimalToken.sol\":1290:1333  onSaleAnimalTokenArray.push(_animalTokenId) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n        /* \"contracts/SaleAnimalToken.sol\":634:1341  {... */\n      pop\n        /* \"contracts/SaleAnimalToken.sol\":556:1341  function setForSaleAnimalToken(uint256 _animalTokenId, uint256 _price) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SaleAnimalToken.sol\":431:470  uint256[] public onSaleAnimalTokenArray */\n    tag_19:\n      0x02\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/SaleAnimalToken.sol\":129:174  MintAnimalToken public mintAnimalTokenAddress */\n    tag_22:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_53:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_55:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_56:\n        /* \"#utility.yul\":490:514   */\n      tag_87\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_55\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_88\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_88:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_57:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_90\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_56\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_9:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_92\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_93\n      tag_53\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":766:885   */\n    tag_92:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_94\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_57\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_58:\n        /* \"#utility.yul\":1112:1136   */\n      tag_96\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_55\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1371   */\n    tag_12:\n        /* \"#utility.yul\":1242:1246   */\n      0x00\n        /* \"#utility.yul\":1280:1282   */\n      0x20\n        /* \"#utility.yul\":1269:1278   */\n      dup3\n        /* \"#utility.yul\":1265:1283   */\n      add\n        /* \"#utility.yul\":1257:1283   */\n      swap1\n      pop\n        /* \"#utility.yul\":1293:1364   */\n      tag_98\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1346:1363   */\n      add\n        /* \"#utility.yul\":1337:1343   */\n      dup5\n        /* \"#utility.yul\":1293:1364   */\n      tag_58\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":1149:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1851   */\n    tag_15:\n        /* \"#utility.yul\":1445:1451   */\n      0x00\n        /* \"#utility.yul\":1453:1459   */\n      dup1\n        /* \"#utility.yul\":1502:1504   */\n      0x40\n        /* \"#utility.yul\":1490:1499   */\n      dup4\n        /* \"#utility.yul\":1481:1488   */\n      dup6\n        /* \"#utility.yul\":1477:1500   */\n      sub\n        /* \"#utility.yul\":1473:1505   */\n      slt\n        /* \"#utility.yul\":1470:1589   */\n      iszero\n      tag_100\n      jumpi\n        /* \"#utility.yul\":1508:1587   */\n      tag_101\n      tag_53\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":1470:1589   */\n    tag_100:\n        /* \"#utility.yul\":1628:1629   */\n      0x00\n        /* \"#utility.yul\":1653:1706   */\n      tag_102\n        /* \"#utility.yul\":1698:1705   */\n      dup6\n        /* \"#utility.yul\":1689:1695   */\n      dup3\n        /* \"#utility.yul\":1678:1687   */\n      dup7\n        /* \"#utility.yul\":1674:1696   */\n      add\n        /* \"#utility.yul\":1653:1706   */\n      tag_57\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":1643:1706   */\n      swap3\n      pop\n        /* \"#utility.yul\":1599:1716   */\n      pop\n        /* \"#utility.yul\":1755:1757   */\n      0x20\n        /* \"#utility.yul\":1781:1834   */\n      tag_103\n        /* \"#utility.yul\":1826:1833   */\n      dup6\n        /* \"#utility.yul\":1817:1823   */\n      dup3\n        /* \"#utility.yul\":1806:1815   */\n      dup7\n        /* \"#utility.yul\":1802:1824   */\n      add\n        /* \"#utility.yul\":1781:1834   */\n      tag_57\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":1771:1834   */\n      swap2\n      pop\n        /* \"#utility.yul\":1726:1844   */\n      pop\n        /* \"#utility.yul\":1377:1851   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1857:1983   */\n    tag_59:\n        /* \"#utility.yul\":1894:1901   */\n      0x00\n        /* \"#utility.yul\":1934:1976   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1927:1932   */\n      dup3\n        /* \"#utility.yul\":1923:1977   */\n      and\n        /* \"#utility.yul\":1912:1977   */\n      swap1\n      pop\n        /* \"#utility.yul\":1857:1983   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1989:2049   */\n    tag_60:\n        /* \"#utility.yul\":2017:2020   */\n      0x00\n        /* \"#utility.yul\":2038:2043   */\n      dup2\n        /* \"#utility.yul\":2031:2043   */\n      swap1\n      pop\n        /* \"#utility.yul\":1989:2049   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2055:2197   */\n    tag_61:\n        /* \"#utility.yul\":2105:2114   */\n      0x00\n        /* \"#utility.yul\":2138:2191   */\n      tag_107\n        /* \"#utility.yul\":2156:2190   */\n      tag_108\n        /* \"#utility.yul\":2165:2189   */\n      tag_109\n        /* \"#utility.yul\":2183:2188   */\n      dup5\n        /* \"#utility.yul\":2165:2189   */\n      tag_59\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":2156:2190   */\n      tag_60\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":2138:2191   */\n      tag_59\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":2125:2191   */\n      swap1\n      pop\n        /* \"#utility.yul\":2055:2197   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2203:2329   */\n    tag_62:\n        /* \"#utility.yul\":2253:2262   */\n      0x00\n        /* \"#utility.yul\":2286:2323   */\n      tag_111\n        /* \"#utility.yul\":2317:2322   */\n      dup3\n        /* \"#utility.yul\":2286:2323   */\n      tag_61\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":2273:2323   */\n      swap1\n      pop\n        /* \"#utility.yul\":2203:2329   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2335:2485   */\n    tag_63:\n        /* \"#utility.yul\":2409:2418   */\n      0x00\n        /* \"#utility.yul\":2442:2479   */\n      tag_113\n        /* \"#utility.yul\":2473:2478   */\n      dup3\n        /* \"#utility.yul\":2442:2479   */\n      tag_62\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":2429:2479   */\n      swap1\n      pop\n        /* \"#utility.yul\":2335:2485   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2491:2670   */\n    tag_64:\n        /* \"#utility.yul\":2602:2663   */\n      tag_115\n        /* \"#utility.yul\":2657:2662   */\n      dup2\n        /* \"#utility.yul\":2602:2663   */\n      tag_63\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":2597:2600   */\n      dup3\n        /* \"#utility.yul\":2590:2664   */\n      mstore\n        /* \"#utility.yul\":2491:2670   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2676:2946   */\n    tag_24:\n        /* \"#utility.yul\":2793:2797   */\n      0x00\n        /* \"#utility.yul\":2831:2833   */\n      0x20\n        /* \"#utility.yul\":2820:2829   */\n      dup3\n        /* \"#utility.yul\":2816:2834   */\n      add\n        /* \"#utility.yul\":2808:2834   */\n      swap1\n      pop\n        /* \"#utility.yul\":2844:2939   */\n      tag_117\n        /* \"#utility.yul\":2936:2937   */\n      0x00\n        /* \"#utility.yul\":2925:2934   */\n      dup4\n        /* \"#utility.yul\":2921:2938   */\n      add\n        /* \"#utility.yul\":2912:2918   */\n      dup5\n        /* \"#utility.yul\":2844:2939   */\n      tag_64\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":2676:2946   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2952:3048   */\n    tag_65:\n        /* \"#utility.yul\":2989:2996   */\n      0x00\n        /* \"#utility.yul\":3018:3042   */\n      tag_119\n        /* \"#utility.yul\":3036:3041   */\n      dup3\n        /* \"#utility.yul\":3018:3042   */\n      tag_59\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":3007:3042   */\n      swap1\n      pop\n        /* \"#utility.yul\":2952:3048   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3054:3176   */\n    tag_66:\n        /* \"#utility.yul\":3127:3151   */\n      tag_121\n        /* \"#utility.yul\":3145:3150   */\n      dup2\n        /* \"#utility.yul\":3127:3151   */\n      tag_65\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":3120:3125   */\n      dup2\n        /* \"#utility.yul\":3117:3152   */\n      eq\n        /* \"#utility.yul\":3107:3170   */\n      tag_122\n      jumpi\n        /* \"#utility.yul\":3166:3167   */\n      0x00\n        /* \"#utility.yul\":3163:3164   */\n      dup1\n        /* \"#utility.yul\":3156:3168   */\n      revert\n        /* \"#utility.yul\":3107:3170   */\n    tag_122:\n        /* \"#utility.yul\":3054:3176   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3182:3325   */\n    tag_67:\n        /* \"#utility.yul\":3239:3244   */\n      0x00\n        /* \"#utility.yul\":3270:3276   */\n      dup2\n        /* \"#utility.yul\":3264:3277   */\n      mload\n        /* \"#utility.yul\":3255:3277   */\n      swap1\n      pop\n        /* \"#utility.yul\":3286:3319   */\n      tag_124\n        /* \"#utility.yul\":3313:3318   */\n      dup2\n        /* \"#utility.yul\":3286:3319   */\n      tag_66\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":3182:3325   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3331:3682   */\n    tag_30:\n        /* \"#utility.yul\":3401:3407   */\n      0x00\n        /* \"#utility.yul\":3450:3452   */\n      0x20\n        /* \"#utility.yul\":3438:3447   */\n      dup3\n        /* \"#utility.yul\":3429:3436   */\n      dup5\n        /* \"#utility.yul\":3425:3448   */\n      sub\n        /* \"#utility.yul\":3421:3453   */\n      slt\n        /* \"#utility.yul\":3418:3537   */\n      iszero\n      tag_126\n      jumpi\n        /* \"#utility.yul\":3456:3535   */\n      tag_127\n      tag_53\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":3418:3537   */\n    tag_126:\n        /* \"#utility.yul\":3576:3577   */\n      0x00\n        /* \"#utility.yul\":3601:3665   */\n      tag_128\n        /* \"#utility.yul\":3657:3664   */\n      dup5\n        /* \"#utility.yul\":3648:3654   */\n      dup3\n        /* \"#utility.yul\":3637:3646   */\n      dup6\n        /* \"#utility.yul\":3633:3655   */\n      add\n        /* \"#utility.yul\":3601:3665   */\n      tag_67\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":3591:3665   */\n      swap2\n      pop\n        /* \"#utility.yul\":3547:3675   */\n      pop\n        /* \"#utility.yul\":3331:3682   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3688:3857   */\n    tag_68:\n        /* \"#utility.yul\":3772:3783   */\n      0x00\n        /* \"#utility.yul\":3806:3812   */\n      dup3\n        /* \"#utility.yul\":3801:3804   */\n      dup3\n        /* \"#utility.yul\":3794:3813   */\n      mstore\n        /* \"#utility.yul\":3846:3850   */\n      0x20\n        /* \"#utility.yul\":3841:3844   */\n      dup3\n        /* \"#utility.yul\":3837:3851   */\n      add\n        /* \"#utility.yul\":3822:3851   */\n      swap1\n      pop\n        /* \"#utility.yul\":3688:3857   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3863:4083   */\n    tag_69:\n        /* \"#utility.yul\":4003:4037   */\n      0x43616c6c6572206973206e6f7420616e696d616c20746f6b656e206f6e776572\n        /* \"#utility.yul\":3999:4000   */\n      0x00\n        /* \"#utility.yul\":3991:3997   */\n      dup3\n        /* \"#utility.yul\":3987:4001   */\n      add\n        /* \"#utility.yul\":3980:4038   */\n      mstore\n        /* \"#utility.yul\":4072:4075   */\n      0x2e00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4067:4069   */\n      0x20\n        /* \"#utility.yul\":4059:4065   */\n      dup3\n        /* \"#utility.yul\":4055:4070   */\n      add\n        /* \"#utility.yul\":4048:4076   */\n      mstore\n        /* \"#utility.yul\":3863:4083   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4089:4455   */\n    tag_70:\n        /* \"#utility.yul\":4231:4234   */\n      0x00\n        /* \"#utility.yul\":4252:4319   */\n      tag_132\n        /* \"#utility.yul\":4316:4318   */\n      0x21\n        /* \"#utility.yul\":4311:4314   */\n      dup4\n        /* \"#utility.yul\":4252:4319   */\n      tag_68\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":4245:4319   */\n      swap2\n      pop\n        /* \"#utility.yul\":4328:4421   */\n      tag_133\n        /* \"#utility.yul\":4417:4420   */\n      dup3\n        /* \"#utility.yul\":4328:4421   */\n      tag_69\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":4446:4448   */\n      0x40\n        /* \"#utility.yul\":4441:4444   */\n      dup3\n        /* \"#utility.yul\":4437:4449   */\n      add\n        /* \"#utility.yul\":4430:4449   */\n      swap1\n      pop\n        /* \"#utility.yul\":4089:4455   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4461:4880   */\n    tag_33:\n        /* \"#utility.yul\":4627:4631   */\n      0x00\n        /* \"#utility.yul\":4665:4667   */\n      0x20\n        /* \"#utility.yul\":4654:4663   */\n      dup3\n        /* \"#utility.yul\":4650:4668   */\n      add\n        /* \"#utility.yul\":4642:4668   */\n      swap1\n      pop\n        /* \"#utility.yul\":4714:4723   */\n      dup2\n        /* \"#utility.yul\":4708:4712   */\n      dup2\n        /* \"#utility.yul\":4704:4724   */\n      sub\n        /* \"#utility.yul\":4700:4701   */\n      0x00\n        /* \"#utility.yul\":4689:4698   */\n      dup4\n        /* \"#utility.yul\":4685:4702   */\n      add\n        /* \"#utility.yul\":4678:4725   */\n      mstore\n        /* \"#utility.yul\":4742:4873   */\n      tag_135\n        /* \"#utility.yul\":4868:4872   */\n      dup2\n        /* \"#utility.yul\":4742:4873   */\n      tag_70\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":4734:4873   */\n      swap1\n      pop\n        /* \"#utility.yul\":4461:4880   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4886:5059   */\n    tag_71:\n        /* \"#utility.yul\":5026:5051   */\n      0x5072696365206973207a65726f206f72206c6f7765722e000000000000000000\n        /* \"#utility.yul\":5022:5023   */\n      0x00\n        /* \"#utility.yul\":5014:5020   */\n      dup3\n        /* \"#utility.yul\":5010:5024   */\n      add\n        /* \"#utility.yul\":5003:5052   */\n      mstore\n        /* \"#utility.yul\":4886:5059   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5065:5431   */\n    tag_72:\n        /* \"#utility.yul\":5207:5210   */\n      0x00\n        /* \"#utility.yul\":5228:5295   */\n      tag_138\n        /* \"#utility.yul\":5292:5294   */\n      0x17\n        /* \"#utility.yul\":5287:5290   */\n      dup4\n        /* \"#utility.yul\":5228:5295   */\n      tag_68\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":5221:5295   */\n      swap2\n      pop\n        /* \"#utility.yul\":5304:5397   */\n      tag_139\n        /* \"#utility.yul\":5393:5396   */\n      dup3\n        /* \"#utility.yul\":5304:5397   */\n      tag_71\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":5422:5424   */\n      0x20\n        /* \"#utility.yul\":5417:5420   */\n      dup3\n        /* \"#utility.yul\":5413:5425   */\n      add\n        /* \"#utility.yul\":5406:5425   */\n      swap1\n      pop\n        /* \"#utility.yul\":5065:5431   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5437:5856   */\n    tag_36:\n        /* \"#utility.yul\":5603:5607   */\n      0x00\n        /* \"#utility.yul\":5641:5643   */\n      0x20\n        /* \"#utility.yul\":5630:5639   */\n      dup3\n        /* \"#utility.yul\":5626:5644   */\n      add\n        /* \"#utility.yul\":5618:5644   */\n      swap1\n      pop\n        /* \"#utility.yul\":5690:5699   */\n      dup2\n        /* \"#utility.yul\":5684:5688   */\n      dup2\n        /* \"#utility.yul\":5680:5700   */\n      sub\n        /* \"#utility.yul\":5676:5677   */\n      0x00\n        /* \"#utility.yul\":5665:5674   */\n      dup4\n        /* \"#utility.yul\":5661:5678   */\n      add\n        /* \"#utility.yul\":5654:5701   */\n      mstore\n        /* \"#utility.yul\":5718:5849   */\n      tag_141\n        /* \"#utility.yul\":5844:5848   */\n      dup2\n        /* \"#utility.yul\":5718:5849   */\n      tag_72\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":5710:5849   */\n      swap1\n      pop\n        /* \"#utility.yul\":5437:5856   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5862:6085   */\n    tag_73:\n        /* \"#utility.yul\":6002:6036   */\n      0x5468697320616e696d616c546f6b656e20697320616c7265616479206f6e2073\n        /* \"#utility.yul\":5998:5999   */\n      0x00\n        /* \"#utility.yul\":5990:5996   */\n      dup3\n        /* \"#utility.yul\":5986:6000   */\n      add\n        /* \"#utility.yul\":5979:6037   */\n      mstore\n        /* \"#utility.yul\":6071:6077   */\n      0x616c652e00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6066:6068   */\n      0x20\n        /* \"#utility.yul\":6058:6064   */\n      dup3\n        /* \"#utility.yul\":6054:6069   */\n      add\n        /* \"#utility.yul\":6047:6078   */\n      mstore\n        /* \"#utility.yul\":5862:6085   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6091:6457   */\n    tag_74:\n        /* \"#utility.yul\":6233:6236   */\n      0x00\n        /* \"#utility.yul\":6254:6321   */\n      tag_144\n        /* \"#utility.yul\":6318:6320   */\n      0x24\n        /* \"#utility.yul\":6313:6316   */\n      dup4\n        /* \"#utility.yul\":6254:6321   */\n      tag_68\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":6247:6321   */\n      swap2\n      pop\n        /* \"#utility.yul\":6330:6423   */\n      tag_145\n        /* \"#utility.yul\":6419:6422   */\n      dup3\n        /* \"#utility.yul\":6330:6423   */\n      tag_73\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":6448:6450   */\n      0x40\n        /* \"#utility.yul\":6443:6446   */\n      dup3\n        /* \"#utility.yul\":6439:6451   */\n      add\n        /* \"#utility.yul\":6432:6451   */\n      swap1\n      pop\n        /* \"#utility.yul\":6091:6457   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6463:6882   */\n    tag_39:\n        /* \"#utility.yul\":6629:6633   */\n      0x00\n        /* \"#utility.yul\":6667:6669   */\n      0x20\n        /* \"#utility.yul\":6656:6665   */\n      dup3\n        /* \"#utility.yul\":6652:6670   */\n      add\n        /* \"#utility.yul\":6644:6670   */\n      swap1\n      pop\n        /* \"#utility.yul\":6716:6725   */\n      dup2\n        /* \"#utility.yul\":6710:6714   */\n      dup2\n        /* \"#utility.yul\":6706:6726   */\n      sub\n        /* \"#utility.yul\":6702:6703   */\n      0x00\n        /* \"#utility.yul\":6691:6700   */\n      dup4\n        /* \"#utility.yul\":6687:6704   */\n      add\n        /* \"#utility.yul\":6680:6727   */\n      mstore\n        /* \"#utility.yul\":6744:6875   */\n      tag_147\n        /* \"#utility.yul\":6870:6874   */\n      dup2\n        /* \"#utility.yul\":6744:6875   */\n      tag_74\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":6736:6875   */\n      swap1\n      pop\n        /* \"#utility.yul\":6463:6882   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6888:7006   */\n    tag_75:\n        /* \"#utility.yul\":6975:6999   */\n      tag_149\n        /* \"#utility.yul\":6993:6998   */\n      dup2\n        /* \"#utility.yul\":6975:6999   */\n      tag_65\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":6970:6973   */\n      dup3\n        /* \"#utility.yul\":6963:7000   */\n      mstore\n        /* \"#utility.yul\":6888:7006   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7012:7344   */\n    tag_41:\n        /* \"#utility.yul\":7133:7137   */\n      0x00\n        /* \"#utility.yul\":7171:7173   */\n      0x40\n        /* \"#utility.yul\":7160:7169   */\n      dup3\n        /* \"#utility.yul\":7156:7174   */\n      add\n        /* \"#utility.yul\":7148:7174   */\n      swap1\n      pop\n        /* \"#utility.yul\":7184:7255   */\n      tag_151\n        /* \"#utility.yul\":7252:7253   */\n      0x00\n        /* \"#utility.yul\":7241:7250   */\n      dup4\n        /* \"#utility.yul\":7237:7254   */\n      add\n        /* \"#utility.yul\":7228:7234   */\n      dup6\n        /* \"#utility.yul\":7184:7255   */\n      tag_75\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":7265:7337   */\n      tag_152\n        /* \"#utility.yul\":7333:7335   */\n      0x20\n        /* \"#utility.yul\":7322:7331   */\n      dup4\n        /* \"#utility.yul\":7318:7336   */\n      add\n        /* \"#utility.yul\":7309:7315   */\n      dup5\n        /* \"#utility.yul\":7265:7337   */\n      tag_75\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":7012:7344   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7350:7440   */\n    tag_76:\n        /* \"#utility.yul\":7384:7391   */\n      0x00\n        /* \"#utility.yul\":7427:7432   */\n      dup2\n        /* \"#utility.yul\":7420:7433   */\n      iszero\n        /* \"#utility.yul\":7413:7434   */\n      iszero\n        /* \"#utility.yul\":7402:7434   */\n      swap1\n      pop\n        /* \"#utility.yul\":7350:7440   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7446:7562   */\n    tag_77:\n        /* \"#utility.yul\":7516:7537   */\n      tag_155\n        /* \"#utility.yul\":7531:7536   */\n      dup2\n        /* \"#utility.yul\":7516:7537   */\n      tag_76\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":7509:7514   */\n      dup2\n        /* \"#utility.yul\":7506:7538   */\n      eq\n        /* \"#utility.yul\":7496:7556   */\n      tag_156\n      jumpi\n        /* \"#utility.yul\":7552:7553   */\n      0x00\n        /* \"#utility.yul\":7549:7550   */\n      dup1\n        /* \"#utility.yul\":7542:7554   */\n      revert\n        /* \"#utility.yul\":7496:7556   */\n    tag_156:\n        /* \"#utility.yul\":7446:7562   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7568:7705   */\n    tag_78:\n        /* \"#utility.yul\":7622:7627   */\n      0x00\n        /* \"#utility.yul\":7653:7659   */\n      dup2\n        /* \"#utility.yul\":7647:7660   */\n      mload\n        /* \"#utility.yul\":7638:7660   */\n      swap1\n      pop\n        /* \"#utility.yul\":7669:7699   */\n      tag_158\n        /* \"#utility.yul\":7693:7698   */\n      dup2\n        /* \"#utility.yul\":7669:7699   */\n      tag_77\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":7568:7705   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7711:8056   */\n    tag_45:\n        /* \"#utility.yul\":7778:7784   */\n      0x00\n        /* \"#utility.yul\":7827:7829   */\n      0x20\n        /* \"#utility.yul\":7815:7824   */\n      dup3\n        /* \"#utility.yul\":7806:7813   */\n      dup5\n        /* \"#utility.yul\":7802:7825   */\n      sub\n        /* \"#utility.yul\":7798:7830   */\n      slt\n        /* \"#utility.yul\":7795:7914   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":7833:7912   */\n      tag_161\n      tag_53\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":7795:7914   */\n    tag_160:\n        /* \"#utility.yul\":7953:7954   */\n      0x00\n        /* \"#utility.yul\":7978:8039   */\n      tag_162\n        /* \"#utility.yul\":8031:8038   */\n      dup5\n        /* \"#utility.yul\":8022:8028   */\n      dup3\n        /* \"#utility.yul\":8011:8020   */\n      dup6\n        /* \"#utility.yul\":8007:8029   */\n      add\n        /* \"#utility.yul\":7978:8039   */\n      tag_78\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":7968:8039   */\n      swap2\n      pop\n        /* \"#utility.yul\":7924:8049   */\n      pop\n        /* \"#utility.yul\":7711:8056   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8062:8290   */\n    tag_79:\n        /* \"#utility.yul\":8202:8236   */\n      0x416e696d616c20746f6b656e206f776e657220646964206e6f7420617070726f\n        /* \"#utility.yul\":8198:8199   */\n      0x00\n        /* \"#utility.yul\":8190:8196   */\n      dup3\n        /* \"#utility.yul\":8186:8200   */\n      add\n        /* \"#utility.yul\":8179:8237   */\n      mstore\n        /* \"#utility.yul\":8271:8282   */\n      0x766520746f6c656e2e0000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8266:8268   */\n      0x20\n        /* \"#utility.yul\":8258:8264   */\n      dup3\n        /* \"#utility.yul\":8254:8269   */\n      add\n        /* \"#utility.yul\":8247:8283   */\n      mstore\n        /* \"#utility.yul\":8062:8290   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8296:8662   */\n    tag_80:\n        /* \"#utility.yul\":8438:8441   */\n      0x00\n        /* \"#utility.yul\":8459:8526   */\n      tag_165\n        /* \"#utility.yul\":8523:8525   */\n      0x29\n        /* \"#utility.yul\":8518:8521   */\n      dup4\n        /* \"#utility.yul\":8459:8526   */\n      tag_68\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":8452:8526   */\n      swap2\n      pop\n        /* \"#utility.yul\":8535:8628   */\n      tag_166\n        /* \"#utility.yul\":8624:8627   */\n      dup3\n        /* \"#utility.yul\":8535:8628   */\n      tag_79\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":8653:8655   */\n      0x40\n        /* \"#utility.yul\":8648:8651   */\n      dup3\n        /* \"#utility.yul\":8644:8656   */\n      add\n        /* \"#utility.yul\":8637:8656   */\n      swap1\n      pop\n        /* \"#utility.yul\":8296:8662   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8668:9087   */\n    tag_48:\n        /* \"#utility.yul\":8834:8838   */\n      0x00\n        /* \"#utility.yul\":8872:8874   */\n      0x20\n        /* \"#utility.yul\":8861:8870   */\n      dup3\n        /* \"#utility.yul\":8857:8875   */\n      add\n        /* \"#utility.yul\":8849:8875   */\n      swap1\n      pop\n        /* \"#utility.yul\":8921:8930   */\n      dup2\n        /* \"#utility.yul\":8915:8919   */\n      dup2\n        /* \"#utility.yul\":8911:8931   */\n      sub\n        /* \"#utility.yul\":8907:8908   */\n      0x00\n        /* \"#utility.yul\":8896:8905   */\n      dup4\n        /* \"#utility.yul\":8892:8909   */\n      add\n        /* \"#utility.yul\":8885:8932   */\n      mstore\n        /* \"#utility.yul\":8949:9080   */\n      tag_168\n        /* \"#utility.yul\":9075:9079   */\n      dup2\n        /* \"#utility.yul\":8949:9080   */\n      tag_80\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":8941:9080   */\n      swap1\n      pop\n        /* \"#utility.yul\":8668:9087   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a2d7fd9227db0072f3fe6e7b6098eab05bb1eee3f1af5085e726140008271e9664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_3283": {
									"entryPoint": null,
									"id": 3283,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 125,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 120,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 175,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1199:15",
										"nodeType": "YulBlock",
										"src": "0:1199:15",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:15",
													"nodeType": "YulBlock",
													"src": "47:35:15",
													"statements": [
														{
															"nativeSrc": "57:19:15",
															"nodeType": "YulAssignment",
															"src": "57:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:15",
																		"nodeType": "YulLiteral",
																		"src": "73:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:15"
																},
																"nativeSrc": "67:9:15",
																"nodeType": "YulFunctionCall",
																"src": "67:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:15"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:15",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:15",
														"nodeType": "YulTypedName",
														"src": "40:6:15",
														"type": ""
													}
												],
												"src": "7:75:15"
											},
											{
												"body": {
													"nativeSrc": "177:28:15",
													"nodeType": "YulBlock",
													"src": "177:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:15",
																		"nodeType": "YulLiteral",
																		"src": "194:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:15",
																		"nodeType": "YulLiteral",
																		"src": "197:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:15"
																},
																"nativeSrc": "187:12:15",
																"nodeType": "YulFunctionCall",
																"src": "187:12:15"
															},
															"nativeSrc": "187:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:15"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:15"
											},
											{
												"body": {
													"nativeSrc": "300:28:15",
													"nodeType": "YulBlock",
													"src": "300:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:15",
																		"nodeType": "YulLiteral",
																		"src": "317:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:15",
																		"nodeType": "YulLiteral",
																		"src": "320:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:15"
																},
																"nativeSrc": "310:12:15",
																"nodeType": "YulFunctionCall",
																"src": "310:12:15"
															},
															"nativeSrc": "310:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:15"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:15"
											},
											{
												"body": {
													"nativeSrc": "379:81:15",
													"nodeType": "YulBlock",
													"src": "379:81:15",
													"statements": [
														{
															"nativeSrc": "389:65:15",
															"nodeType": "YulAssignment",
															"src": "389:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:15",
																		"nodeType": "YulLiteral",
																		"src": "411:42:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:15"
																},
																"nativeSrc": "400:54:15",
																"nodeType": "YulFunctionCall",
																"src": "400:54:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:15",
														"nodeType": "YulTypedName",
														"src": "361:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:15",
														"nodeType": "YulTypedName",
														"src": "371:7:15",
														"type": ""
													}
												],
												"src": "334:126:15"
											},
											{
												"body": {
													"nativeSrc": "511:51:15",
													"nodeType": "YulBlock",
													"src": "511:51:15",
													"statements": [
														{
															"nativeSrc": "521:35:15",
															"nodeType": "YulAssignment",
															"src": "521:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:15"
																},
																"nativeSrc": "532:24:15",
																"nodeType": "YulFunctionCall",
																"src": "532:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:15",
														"nodeType": "YulTypedName",
														"src": "493:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:15",
														"nodeType": "YulTypedName",
														"src": "503:7:15",
														"type": ""
													}
												],
												"src": "466:96:15"
											},
											{
												"body": {
													"nativeSrc": "611:79:15",
													"nodeType": "YulBlock",
													"src": "611:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:15",
																"nodeType": "YulBlock",
																"src": "668:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:15",
																					"nodeType": "YulLiteral",
																					"src": "677:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:15",
																					"nodeType": "YulLiteral",
																					"src": "680:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:15"
																			},
																			"nativeSrc": "670:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:15"
																		},
																		"nativeSrc": "670:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:15"
																				},
																				"nativeSrc": "641:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:15"
																		},
																		"nativeSrc": "631:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:15"
																},
																"nativeSrc": "624:43:15",
																"nodeType": "YulFunctionCall",
																"src": "624:43:15"
															},
															"nativeSrc": "621:63:15",
															"nodeType": "YulIf",
															"src": "621:63:15"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:15",
														"nodeType": "YulTypedName",
														"src": "604:5:15",
														"type": ""
													}
												],
												"src": "568:122:15"
											},
											{
												"body": {
													"nativeSrc": "759:80:15",
													"nodeType": "YulBlock",
													"src": "759:80:15",
													"statements": [
														{
															"nativeSrc": "769:22:15",
															"nodeType": "YulAssignment",
															"src": "769:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:15"
																},
																"nativeSrc": "778:13:15",
																"nodeType": "YulFunctionCall",
																"src": "778:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:15"
																},
																"nativeSrc": "800:33:15",
																"nodeType": "YulFunctionCall",
																"src": "800:33:15"
															},
															"nativeSrc": "800:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:15"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:15",
														"nodeType": "YulTypedName",
														"src": "737:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:15",
														"nodeType": "YulTypedName",
														"src": "745:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:15",
														"nodeType": "YulTypedName",
														"src": "753:5:15",
														"type": ""
													}
												],
												"src": "696:143:15"
											},
											{
												"body": {
													"nativeSrc": "922:274:15",
													"nodeType": "YulBlock",
													"src": "922:274:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:15",
																"nodeType": "YulBlock",
																"src": "968:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:15"
																			},
																			"nativeSrc": "970:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:15"
																		},
																		"nativeSrc": "970:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:15"
																		},
																		"nativeSrc": "939:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:15",
																		"nodeType": "YulLiteral",
																		"src": "964:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:15"
																},
																"nativeSrc": "935:32:15",
																"nodeType": "YulFunctionCall",
																"src": "935:32:15"
															},
															"nativeSrc": "932:119:15",
															"nodeType": "YulIf",
															"src": "932:119:15"
														},
														{
															"nativeSrc": "1061:128:15",
															"nodeType": "YulBlock",
															"src": "1061:128:15",
															"statements": [
																{
																	"nativeSrc": "1076:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:15",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:15",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:15"
																				},
																				"nativeSrc": "1147:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:15",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:15"
																		},
																		"nativeSrc": "1115:64:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:15",
														"nodeType": "YulTypedName",
														"src": "892:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:15",
														"nodeType": "YulTypedName",
														"src": "903:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:15",
														"nodeType": "YulTypedName",
														"src": "915:6:15",
														"type": ""
													}
												],
												"src": "845:351:15"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051610a06380380610a06833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b6108ef806101176000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632dd7d12f14610051578063498b520e146100815780634d1d7d5f1461009d578063c6ffd54e146100cd575b600080fd5b61006b6004803603810190610066919061044d565b6100eb565b6040516100789190610489565b60405180910390f35b61009b600480360381019061009691906104a4565b610103565b005b6100b760048036038101906100b2919061044d565b6103ca565b6040516100c49190610489565b60405180910390f35b6100d56103ee565b6040516100e29190610563565b60405180910390f35b60016020528060005260406000206000915090505481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b815260040161015f9190610489565b602060405180830381865afa15801561017c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a091906105bc565b90503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610210576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102079061066c565b60405180910390fd5b60008211610253576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024a906106d8565b60405180910390fd5b60006001600085815260200190815260200160002054146102a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a09061076a565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e985e9c582306040518363ffffffff1660e01b8152600401610304929190610799565b602060405180830381865afa158015610321573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034591906107fa565b610384576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037b90610899565b60405180910390fd5b8160016000858152602001908152602001600020819055506002839080600181540180825580915050600190039060005260206000200160009091909190915055505050565b600281815481106103da57600080fd5b906000526020600020016000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080fd5b6000819050919050565b61042a81610417565b811461043557600080fd5b50565b60008135905061044781610421565b92915050565b60006020828403121561046357610462610412565b5b600061047184828501610438565b91505092915050565b61048381610417565b82525050565b600060208201905061049e600083018461047a565b92915050565b600080604083850312156104bb576104ba610412565b5b60006104c985828601610438565b92505060206104da85828601610438565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061052961052461051f846104e4565b610504565b6104e4565b9050919050565b600061053b8261050e565b9050919050565b600061054d82610530565b9050919050565b61055d81610542565b82525050565b60006020820190506105786000830184610554565b92915050565b6000610589826104e4565b9050919050565b6105998161057e565b81146105a457600080fd5b50565b6000815190506105b681610590565b92915050565b6000602082840312156105d2576105d1610412565b5b60006105e0848285016105a7565b91505092915050565b600082825260208201905092915050565b7f43616c6c6572206973206e6f7420616e696d616c20746f6b656e206f6e77657260008201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b60006106566021836105e9565b9150610661826105fa565b604082019050919050565b6000602082019050818103600083015261068581610649565b9050919050565b7f5072696365206973207a65726f206f72206c6f7765722e000000000000000000600082015250565b60006106c26017836105e9565b91506106cd8261068c565b602082019050919050565b600060208201905081810360008301526106f1816106b5565b9050919050565b7f5468697320616e696d616c546f6b656e20697320616c7265616479206f6e207360008201527f616c652e00000000000000000000000000000000000000000000000000000000602082015250565b60006107546024836105e9565b915061075f826106f8565b604082019050919050565b6000602082019050818103600083015261078381610747565b9050919050565b6107938161057e565b82525050565b60006040820190506107ae600083018561078a565b6107bb602083018461078a565b9392505050565b60008115159050919050565b6107d7816107c2565b81146107e257600080fd5b50565b6000815190506107f4816107ce565b92915050565b6000602082840312156108105761080f610412565b5b600061081e848285016107e5565b91505092915050565b7f416e696d616c20746f6b656e206f776e657220646964206e6f7420617070726f60008201527f766520746f6c656e2e0000000000000000000000000000000000000000000000602082015250565b60006108836029836105e9565b915061088e82610827565b604082019050919050565b600060208201905081810360008301526108b281610876565b905091905056fea2646970667358221220a2d7fd9227db0072f3fe6e7b6098eab05bb1eee3f1af5085e726140008271e9664736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xA06 CODESIZE SUB DUP1 PUSH2 0xA06 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0xDB JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x108 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA8 DUP3 PUSH2 0x7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB8 DUP2 PUSH2 0x9D JUMP JUMPDEST DUP2 EQ PUSH2 0xC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xD5 DUP2 PUSH2 0xAF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF1 JUMPI PUSH2 0xF0 PUSH2 0x78 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFF DUP5 DUP3 DUP6 ADD PUSH2 0xC6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8EF DUP1 PUSH2 0x117 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2DD7D12F EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x498B520E EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x4D1D7D5F EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0xC6FFD54E EQ PUSH2 0xCD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x44D JUMP JUMPDEST PUSH2 0xEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x489 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x4A4 JUMP JUMPDEST PUSH2 0x103 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB2 SWAP2 SWAP1 PUSH2 0x44D JUMP JUMPDEST PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC4 SWAP2 SWAP1 PUSH2 0x489 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD5 PUSH2 0x3EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0x563 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x489 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x5BC JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x210 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x207 SWAP1 PUSH2 0x66C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x253 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24A SWAP1 PUSH2 0x6D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x2A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A0 SWAP1 PUSH2 0x76A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE985E9C5 DUP3 ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x304 SWAP3 SWAP2 SWAP1 PUSH2 0x799 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x321 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x345 SWAP2 SWAP1 PUSH2 0x7FA JUMP JUMPDEST PUSH2 0x384 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37B SWAP1 PUSH2 0x899 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x2 DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x3DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x42A DUP2 PUSH2 0x417 JUMP JUMPDEST DUP2 EQ PUSH2 0x435 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x447 DUP2 PUSH2 0x421 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x463 JUMPI PUSH2 0x462 PUSH2 0x412 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x471 DUP5 DUP3 DUP6 ADD PUSH2 0x438 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x483 DUP2 PUSH2 0x417 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x49E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x47A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4BB JUMPI PUSH2 0x4BA PUSH2 0x412 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4C9 DUP6 DUP3 DUP7 ADD PUSH2 0x438 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4DA DUP6 DUP3 DUP7 ADD PUSH2 0x438 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x529 PUSH2 0x524 PUSH2 0x51F DUP5 PUSH2 0x4E4 JUMP JUMPDEST PUSH2 0x504 JUMP JUMPDEST PUSH2 0x4E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53B DUP3 PUSH2 0x50E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x54D DUP3 PUSH2 0x530 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x55D DUP2 PUSH2 0x542 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x578 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x554 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x589 DUP3 PUSH2 0x4E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x599 DUP2 PUSH2 0x57E JUMP JUMPDEST DUP2 EQ PUSH2 0x5A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5B6 DUP2 PUSH2 0x590 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5D2 JUMPI PUSH2 0x5D1 PUSH2 0x412 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5E0 DUP5 DUP3 DUP6 ADD PUSH2 0x5A7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F7420616E696D616C20746F6B656E206F6E776572 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x656 PUSH1 0x21 DUP4 PUSH2 0x5E9 JUMP JUMPDEST SWAP2 POP PUSH2 0x661 DUP3 PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x685 DUP2 PUSH2 0x649 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5072696365206973207A65726F206F72206C6F7765722E000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6C2 PUSH1 0x17 DUP4 PUSH2 0x5E9 JUMP JUMPDEST SWAP2 POP PUSH2 0x6CD DUP3 PUSH2 0x68C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x6F1 DUP2 PUSH2 0x6B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5468697320616E696D616C546F6B656E20697320616C7265616479206F6E2073 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C652E00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x754 PUSH1 0x24 DUP4 PUSH2 0x5E9 JUMP JUMPDEST SWAP2 POP PUSH2 0x75F DUP3 PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x783 DUP2 PUSH2 0x747 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x793 DUP2 PUSH2 0x57E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7AE PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x78A JUMP JUMPDEST PUSH2 0x7BB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x78A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7D7 DUP2 PUSH2 0x7C2 JUMP JUMPDEST DUP2 EQ PUSH2 0x7E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x7F4 DUP2 PUSH2 0x7CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x810 JUMPI PUSH2 0x80F PUSH2 0x412 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x81E DUP5 DUP3 DUP6 ADD PUSH2 0x7E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416E696D616C20746F6B656E206F776E657220646964206E6F7420617070726F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x766520746F6C656E2E0000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x883 PUSH1 0x29 DUP4 PUSH2 0x5E9 JUMP JUMPDEST SWAP2 POP PUSH2 0x88E DUP3 PUSH2 0x827 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8B2 DUP2 PUSH2 0x876 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 0xD7 REVERT SWAP3 0x27 0xDB STOP PUSH19 0xF3FE6E7B6098EAB05BB1EEE3F1AF5085E72614 STOP ADDMOD 0x27 0x1E SWAP7 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "97:1247:14:-:0;;;183:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;280:23;239:22;;:65;;;;;;;;;;;;;;;;;;183:129;97:1247;;88:117:15;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;97:1247:14:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@animalTokenPrices_3287": {
									"entryPoint": 235,
									"id": 3287,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mintAnimalTokenAddress_3271": {
									"entryPoint": 1006,
									"id": 3271,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@onSaleAnimalTokenArray_3290": {
									"entryPoint": 970,
									"id": 3290,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setForSaleAnimalToken_3353": {
									"entryPoint": 259,
									"id": 3353,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1447,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 2021,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1080,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 1468,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2042,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1101,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 1188,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1930,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_MintAnimalToken_$3265_to_t_address_fromStack": {
									"entryPoint": 1364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_a6d4808755e48fdf37626e9a728d72f0fc49d60bd77dffba4f5b754673e0cf8e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2166,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e55848a2c79418aae567817e49c2f1512916dfd26abaeaa883e0e5dd1032d5c5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1609,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ee45af5e6adfe68b22d0cf095aa0e0331e653da1cebe089aea7cdb29bf06b415_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1863,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fa56a0634fb2d521a787ef3cdac325b3079949c554e101d0d44c9d87f0eeea33_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1717,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1146,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 1945,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_MintAnimalToken_$3265__to_t_address__fromStack_reversed": {
									"entryPoint": 1379,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a6d4808755e48fdf37626e9a728d72f0fc49d60bd77dffba4f5b754673e0cf8e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2201,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e55848a2c79418aae567817e49c2f1512916dfd26abaeaa883e0e5dd1032d5c5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1644,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ee45af5e6adfe68b22d0cf095aa0e0331e653da1cebe089aea7cdb29bf06b415__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1898,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fa56a0634fb2d521a787ef3cdac325b3079949c554e101d0d44c9d87f0eeea33__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1752,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1513,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1406,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1986,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1252,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1047,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_MintAnimalToken_$3265_to_t_address": {
									"entryPoint": 1346,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 1328,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 1294,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1284,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1042,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_a6d4808755e48fdf37626e9a728d72f0fc49d60bd77dffba4f5b754673e0cf8e": {
									"entryPoint": 2087,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e55848a2c79418aae567817e49c2f1512916dfd26abaeaa883e0e5dd1032d5c5": {
									"entryPoint": 1530,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ee45af5e6adfe68b22d0cf095aa0e0331e653da1cebe089aea7cdb29bf06b415": {
									"entryPoint": 1784,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fa56a0634fb2d521a787ef3cdac325b3079949c554e101d0d44c9d87f0eeea33": {
									"entryPoint": 1676,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1424,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1998,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1057,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9090:15",
										"nodeType": "YulBlock",
										"src": "0:9090:15",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:15",
													"nodeType": "YulBlock",
													"src": "47:35:15",
													"statements": [
														{
															"nativeSrc": "57:19:15",
															"nodeType": "YulAssignment",
															"src": "57:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:15",
																		"nodeType": "YulLiteral",
																		"src": "73:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:15"
																},
																"nativeSrc": "67:9:15",
																"nodeType": "YulFunctionCall",
																"src": "67:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:15"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:15",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:15",
														"nodeType": "YulTypedName",
														"src": "40:6:15",
														"type": ""
													}
												],
												"src": "7:75:15"
											},
											{
												"body": {
													"nativeSrc": "177:28:15",
													"nodeType": "YulBlock",
													"src": "177:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:15",
																		"nodeType": "YulLiteral",
																		"src": "194:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:15",
																		"nodeType": "YulLiteral",
																		"src": "197:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:15"
																},
																"nativeSrc": "187:12:15",
																"nodeType": "YulFunctionCall",
																"src": "187:12:15"
															},
															"nativeSrc": "187:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:15"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:15"
											},
											{
												"body": {
													"nativeSrc": "300:28:15",
													"nodeType": "YulBlock",
													"src": "300:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:15",
																		"nodeType": "YulLiteral",
																		"src": "317:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:15",
																		"nodeType": "YulLiteral",
																		"src": "320:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:15"
																},
																"nativeSrc": "310:12:15",
																"nodeType": "YulFunctionCall",
																"src": "310:12:15"
															},
															"nativeSrc": "310:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:15"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:15"
											},
											{
												"body": {
													"nativeSrc": "379:32:15",
													"nodeType": "YulBlock",
													"src": "379:32:15",
													"statements": [
														{
															"nativeSrc": "389:16:15",
															"nodeType": "YulAssignment",
															"src": "389:16:15",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:15",
																"nodeType": "YulIdentifier",
																"src": "400:5:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:15",
														"nodeType": "YulTypedName",
														"src": "361:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:15",
														"nodeType": "YulTypedName",
														"src": "371:7:15",
														"type": ""
													}
												],
												"src": "334:77:15"
											},
											{
												"body": {
													"nativeSrc": "460:79:15",
													"nodeType": "YulBlock",
													"src": "460:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:15",
																"nodeType": "YulBlock",
																"src": "517:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:15",
																					"nodeType": "YulLiteral",
																					"src": "526:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:15",
																					"nodeType": "YulLiteral",
																					"src": "529:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:15"
																			},
																			"nativeSrc": "519:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:15"
																		},
																		"nativeSrc": "519:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:15"
																				},
																				"nativeSrc": "490:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:15"
																		},
																		"nativeSrc": "480:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:15"
																},
																"nativeSrc": "473:43:15",
																"nodeType": "YulFunctionCall",
																"src": "473:43:15"
															},
															"nativeSrc": "470:63:15",
															"nodeType": "YulIf",
															"src": "470:63:15"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:15",
														"nodeType": "YulTypedName",
														"src": "453:5:15",
														"type": ""
													}
												],
												"src": "417:122:15"
											},
											{
												"body": {
													"nativeSrc": "597:87:15",
													"nodeType": "YulBlock",
													"src": "597:87:15",
													"statements": [
														{
															"nativeSrc": "607:29:15",
															"nodeType": "YulAssignment",
															"src": "607:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:15"
																},
																"nativeSrc": "616:20:15",
																"nodeType": "YulFunctionCall",
																"src": "616:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:15"
																},
																"nativeSrc": "645:33:15",
																"nodeType": "YulFunctionCall",
																"src": "645:33:15"
															},
															"nativeSrc": "645:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:15"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:15",
														"nodeType": "YulTypedName",
														"src": "575:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:15",
														"nodeType": "YulTypedName",
														"src": "583:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:15",
														"nodeType": "YulTypedName",
														"src": "591:5:15",
														"type": ""
													}
												],
												"src": "545:139:15"
											},
											{
												"body": {
													"nativeSrc": "756:263:15",
													"nodeType": "YulBlock",
													"src": "756:263:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:15",
																"nodeType": "YulBlock",
																"src": "802:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:15"
																			},
																			"nativeSrc": "804:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:15"
																		},
																		"nativeSrc": "804:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:15"
																		},
																		"nativeSrc": "773:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:15",
																		"nodeType": "YulLiteral",
																		"src": "798:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:15"
																},
																"nativeSrc": "769:32:15",
																"nodeType": "YulFunctionCall",
																"src": "769:32:15"
															},
															"nativeSrc": "766:119:15",
															"nodeType": "YulIf",
															"src": "766:119:15"
														},
														{
															"nativeSrc": "895:117:15",
															"nodeType": "YulBlock",
															"src": "895:117:15",
															"statements": [
																{
																	"nativeSrc": "910:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:15",
																		"nodeType": "YulLiteral",
																		"src": "924:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:15",
																			"nodeType": "YulTypedName",
																			"src": "914:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:15",
																	"nodeType": "YulAssignment",
																	"src": "939:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:15"
																				},
																				"nativeSrc": "970:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:15"
																		},
																		"nativeSrc": "949:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:15",
														"nodeType": "YulTypedName",
														"src": "726:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:15",
														"nodeType": "YulTypedName",
														"src": "737:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:15",
														"nodeType": "YulTypedName",
														"src": "749:6:15",
														"type": ""
													}
												],
												"src": "690:329:15"
											},
											{
												"body": {
													"nativeSrc": "1090:53:15",
													"nodeType": "YulBlock",
													"src": "1090:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1107:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1130:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1112:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:15"
																		},
																		"nativeSrc": "1112:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1100:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:15"
																},
																"nativeSrc": "1100:37:15",
																"nodeType": "YulFunctionCall",
																"src": "1100:37:15"
															},
															"nativeSrc": "1100:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:15"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1025:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1078:5:15",
														"nodeType": "YulTypedName",
														"src": "1078:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1085:3:15",
														"nodeType": "YulTypedName",
														"src": "1085:3:15",
														"type": ""
													}
												],
												"src": "1025:118:15"
											},
											{
												"body": {
													"nativeSrc": "1247:124:15",
													"nodeType": "YulBlock",
													"src": "1247:124:15",
													"statements": [
														{
															"nativeSrc": "1257:26:15",
															"nodeType": "YulAssignment",
															"src": "1257:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1269:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1269:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1280:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1265:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:15"
																},
																"nativeSrc": "1265:18:15",
																"nodeType": "YulFunctionCall",
																"src": "1265:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1257:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1337:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1350:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1361:1:15",
																				"nodeType": "YulLiteral",
																				"src": "1361:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1346:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:15"
																		},
																		"nativeSrc": "1346:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1293:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "1293:43:15"
																},
																"nativeSrc": "1293:71:15",
																"nodeType": "YulFunctionCall",
																"src": "1293:71:15"
															},
															"nativeSrc": "1293:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "1293:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1149:222:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1219:9:15",
														"nodeType": "YulTypedName",
														"src": "1219:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1231:6:15",
														"nodeType": "YulTypedName",
														"src": "1231:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1242:4:15",
														"nodeType": "YulTypedName",
														"src": "1242:4:15",
														"type": ""
													}
												],
												"src": "1149:222:15"
											},
											{
												"body": {
													"nativeSrc": "1460:391:15",
													"nodeType": "YulBlock",
													"src": "1460:391:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "1506:83:15",
																"nodeType": "YulBlock",
																"src": "1506:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1508:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "1508:77:15"
																			},
																			"nativeSrc": "1508:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1508:79:15"
																		},
																		"nativeSrc": "1508:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1508:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1481:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "1481:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1490:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1490:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1477:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1477:3:15"
																		},
																		"nativeSrc": "1477:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1477:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1502:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1502:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1473:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1473:3:15"
																},
																"nativeSrc": "1473:32:15",
																"nodeType": "YulFunctionCall",
																"src": "1473:32:15"
															},
															"nativeSrc": "1470:119:15",
															"nodeType": "YulIf",
															"src": "1470:119:15"
														},
														{
															"nativeSrc": "1599:117:15",
															"nodeType": "YulBlock",
															"src": "1599:117:15",
															"statements": [
																{
																	"nativeSrc": "1614:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1614:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1628:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1628:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1618:6:15",
																			"nodeType": "YulTypedName",
																			"src": "1618:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1643:63:15",
																	"nodeType": "YulAssignment",
																	"src": "1643:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1678:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "1678:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1689:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "1689:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1674:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1674:3:15"
																				},
																				"nativeSrc": "1674:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1674:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1698:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "1698:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1653:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "1653:20:15"
																		},
																		"nativeSrc": "1653:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1653:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1643:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "1643:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1726:118:15",
															"nodeType": "YulBlock",
															"src": "1726:118:15",
															"statements": [
																{
																	"nativeSrc": "1741:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1741:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1755:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1755:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1745:6:15",
																			"nodeType": "YulTypedName",
																			"src": "1745:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1771:63:15",
																	"nodeType": "YulAssignment",
																	"src": "1771:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1806:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "1806:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1817:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "1817:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1802:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1802:3:15"
																				},
																				"nativeSrc": "1802:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1802:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1826:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "1826:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1781:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "1781:20:15"
																		},
																		"nativeSrc": "1781:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1781:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1771:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "1771:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "1377:474:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1422:9:15",
														"nodeType": "YulTypedName",
														"src": "1422:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1433:7:15",
														"nodeType": "YulTypedName",
														"src": "1433:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1445:6:15",
														"nodeType": "YulTypedName",
														"src": "1445:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1453:6:15",
														"nodeType": "YulTypedName",
														"src": "1453:6:15",
														"type": ""
													}
												],
												"src": "1377:474:15"
											},
											{
												"body": {
													"nativeSrc": "1902:81:15",
													"nodeType": "YulBlock",
													"src": "1902:81:15",
													"statements": [
														{
															"nativeSrc": "1912:65:15",
															"nodeType": "YulAssignment",
															"src": "1912:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1927:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "1927:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1934:42:15",
																		"nodeType": "YulLiteral",
																		"src": "1934:42:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1923:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1923:3:15"
																},
																"nativeSrc": "1923:54:15",
																"nodeType": "YulFunctionCall",
																"src": "1923:54:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1912:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "1912:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1857:126:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1884:5:15",
														"nodeType": "YulTypedName",
														"src": "1884:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1894:7:15",
														"nodeType": "YulTypedName",
														"src": "1894:7:15",
														"type": ""
													}
												],
												"src": "1857:126:15"
											},
											{
												"body": {
													"nativeSrc": "2021:28:15",
													"nodeType": "YulBlock",
													"src": "2021:28:15",
													"statements": [
														{
															"nativeSrc": "2031:12:15",
															"nodeType": "YulAssignment",
															"src": "2031:12:15",
															"value": {
																"name": "value",
																"nativeSrc": "2038:5:15",
																"nodeType": "YulIdentifier",
																"src": "2038:5:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2031:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2031:3:15"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1989:60:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2007:5:15",
														"nodeType": "YulTypedName",
														"src": "2007:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2017:3:15",
														"nodeType": "YulTypedName",
														"src": "2017:3:15",
														"type": ""
													}
												],
												"src": "1989:60:15"
											},
											{
												"body": {
													"nativeSrc": "2115:82:15",
													"nodeType": "YulBlock",
													"src": "2115:82:15",
													"statements": [
														{
															"nativeSrc": "2125:66:15",
															"nodeType": "YulAssignment",
															"src": "2125:66:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2183:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "2183:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "2165:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "2165:17:15"
																				},
																				"nativeSrc": "2165:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2165:24:15"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2156:8:15",
																			"nodeType": "YulIdentifier",
																			"src": "2156:8:15"
																		},
																		"nativeSrc": "2156:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2156:34:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2138:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "2138:17:15"
																},
																"nativeSrc": "2138:53:15",
																"nodeType": "YulFunctionCall",
																"src": "2138:53:15"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2125:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "2125:9:15"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "2055:142:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2095:5:15",
														"nodeType": "YulTypedName",
														"src": "2095:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2105:9:15",
														"nodeType": "YulTypedName",
														"src": "2105:9:15",
														"type": ""
													}
												],
												"src": "2055:142:15"
											},
											{
												"body": {
													"nativeSrc": "2263:66:15",
													"nodeType": "YulBlock",
													"src": "2263:66:15",
													"statements": [
														{
															"nativeSrc": "2273:50:15",
															"nodeType": "YulAssignment",
															"src": "2273:50:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2317:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "2317:5:15"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "2286:30:15",
																	"nodeType": "YulIdentifier",
																	"src": "2286:30:15"
																},
																"nativeSrc": "2286:37:15",
																"nodeType": "YulFunctionCall",
																"src": "2286:37:15"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2273:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "2273:9:15"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "2203:126:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2243:5:15",
														"nodeType": "YulTypedName",
														"src": "2243:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2253:9:15",
														"nodeType": "YulTypedName",
														"src": "2253:9:15",
														"type": ""
													}
												],
												"src": "2203:126:15"
											},
											{
												"body": {
													"nativeSrc": "2419:66:15",
													"nodeType": "YulBlock",
													"src": "2419:66:15",
													"statements": [
														{
															"nativeSrc": "2429:50:15",
															"nodeType": "YulAssignment",
															"src": "2429:50:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2473:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "2473:5:15"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "2442:30:15",
																	"nodeType": "YulIdentifier",
																	"src": "2442:30:15"
																},
																"nativeSrc": "2442:37:15",
																"nodeType": "YulFunctionCall",
																"src": "2442:37:15"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2429:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "2429:9:15"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_MintAnimalToken_$3265_to_t_address",
												"nativeSrc": "2335:150:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2399:5:15",
														"nodeType": "YulTypedName",
														"src": "2399:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2409:9:15",
														"nodeType": "YulTypedName",
														"src": "2409:9:15",
														"type": ""
													}
												],
												"src": "2335:150:15"
											},
											{
												"body": {
													"nativeSrc": "2580:90:15",
													"nodeType": "YulBlock",
													"src": "2580:90:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2597:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2597:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2657:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "2657:5:15"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_MintAnimalToken_$3265_to_t_address",
																			"nativeSrc": "2602:54:15",
																			"nodeType": "YulIdentifier",
																			"src": "2602:54:15"
																		},
																		"nativeSrc": "2602:61:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2602:61:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2590:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2590:6:15"
																},
																"nativeSrc": "2590:74:15",
																"nodeType": "YulFunctionCall",
																"src": "2590:74:15"
															},
															"nativeSrc": "2590:74:15",
															"nodeType": "YulExpressionStatement",
															"src": "2590:74:15"
														}
													]
												},
												"name": "abi_encode_t_contract$_MintAnimalToken_$3265_to_t_address_fromStack",
												"nativeSrc": "2491:179:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2568:5:15",
														"nodeType": "YulTypedName",
														"src": "2568:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2575:3:15",
														"nodeType": "YulTypedName",
														"src": "2575:3:15",
														"type": ""
													}
												],
												"src": "2491:179:15"
											},
											{
												"body": {
													"nativeSrc": "2798:148:15",
													"nodeType": "YulBlock",
													"src": "2798:148:15",
													"statements": [
														{
															"nativeSrc": "2808:26:15",
															"nodeType": "YulAssignment",
															"src": "2808:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2820:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "2820:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2831:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2831:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2816:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2816:3:15"
																},
																"nativeSrc": "2816:18:15",
																"nodeType": "YulFunctionCall",
																"src": "2816:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2808:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "2808:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2912:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2912:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2925:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2925:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2936:1:15",
																				"nodeType": "YulLiteral",
																				"src": "2936:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2921:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2921:3:15"
																		},
																		"nativeSrc": "2921:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2921:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_MintAnimalToken_$3265_to_t_address_fromStack",
																	"nativeSrc": "2844:67:15",
																	"nodeType": "YulIdentifier",
																	"src": "2844:67:15"
																},
																"nativeSrc": "2844:95:15",
																"nodeType": "YulFunctionCall",
																"src": "2844:95:15"
															},
															"nativeSrc": "2844:95:15",
															"nodeType": "YulExpressionStatement",
															"src": "2844:95:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_MintAnimalToken_$3265__to_t_address__fromStack_reversed",
												"nativeSrc": "2676:270:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2770:9:15",
														"nodeType": "YulTypedName",
														"src": "2770:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2782:6:15",
														"nodeType": "YulTypedName",
														"src": "2782:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2793:4:15",
														"nodeType": "YulTypedName",
														"src": "2793:4:15",
														"type": ""
													}
												],
												"src": "2676:270:15"
											},
											{
												"body": {
													"nativeSrc": "2997:51:15",
													"nodeType": "YulBlock",
													"src": "2997:51:15",
													"statements": [
														{
															"nativeSrc": "3007:35:15",
															"nodeType": "YulAssignment",
															"src": "3007:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3036:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "3036:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3018:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "3018:17:15"
																},
																"nativeSrc": "3018:24:15",
																"nodeType": "YulFunctionCall",
																"src": "3018:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3007:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "3007:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2952:96:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2979:5:15",
														"nodeType": "YulTypedName",
														"src": "2979:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2989:7:15",
														"nodeType": "YulTypedName",
														"src": "2989:7:15",
														"type": ""
													}
												],
												"src": "2952:96:15"
											},
											{
												"body": {
													"nativeSrc": "3097:79:15",
													"nodeType": "YulBlock",
													"src": "3097:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "3154:16:15",
																"nodeType": "YulBlock",
																"src": "3154:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3163:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3163:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3166:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3166:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3156:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3156:6:15"
																			},
																			"nativeSrc": "3156:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3156:12:15"
																		},
																		"nativeSrc": "3156:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3156:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3120:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "3120:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3145:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "3145:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3127:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "3127:17:15"
																				},
																				"nativeSrc": "3127:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3127:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3117:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "3117:2:15"
																		},
																		"nativeSrc": "3117:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3117:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3110:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3110:6:15"
																},
																"nativeSrc": "3110:43:15",
																"nodeType": "YulFunctionCall",
																"src": "3110:43:15"
															},
															"nativeSrc": "3107:63:15",
															"nodeType": "YulIf",
															"src": "3107:63:15"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3054:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3090:5:15",
														"nodeType": "YulTypedName",
														"src": "3090:5:15",
														"type": ""
													}
												],
												"src": "3054:122:15"
											},
											{
												"body": {
													"nativeSrc": "3245:80:15",
													"nodeType": "YulBlock",
													"src": "3245:80:15",
													"statements": [
														{
															"nativeSrc": "3255:22:15",
															"nodeType": "YulAssignment",
															"src": "3255:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3270:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3270:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3264:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "3264:5:15"
																},
																"nativeSrc": "3264:13:15",
																"nodeType": "YulFunctionCall",
																"src": "3264:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3255:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "3255:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3313:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "3313:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3286:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "3286:26:15"
																},
																"nativeSrc": "3286:33:15",
																"nodeType": "YulFunctionCall",
																"src": "3286:33:15"
															},
															"nativeSrc": "3286:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "3286:33:15"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "3182:143:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3223:6:15",
														"nodeType": "YulTypedName",
														"src": "3223:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3231:3:15",
														"nodeType": "YulTypedName",
														"src": "3231:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3239:5:15",
														"nodeType": "YulTypedName",
														"src": "3239:5:15",
														"type": ""
													}
												],
												"src": "3182:143:15"
											},
											{
												"body": {
													"nativeSrc": "3408:274:15",
													"nodeType": "YulBlock",
													"src": "3408:274:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "3454:83:15",
																"nodeType": "YulBlock",
																"src": "3454:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3456:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "3456:77:15"
																			},
																			"nativeSrc": "3456:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3456:79:15"
																		},
																		"nativeSrc": "3456:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3456:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3429:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "3429:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3438:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3438:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3425:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3425:3:15"
																		},
																		"nativeSrc": "3425:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3425:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3450:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3450:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3421:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3421:3:15"
																},
																"nativeSrc": "3421:32:15",
																"nodeType": "YulFunctionCall",
																"src": "3421:32:15"
															},
															"nativeSrc": "3418:119:15",
															"nodeType": "YulIf",
															"src": "3418:119:15"
														},
														{
															"nativeSrc": "3547:128:15",
															"nodeType": "YulBlock",
															"src": "3547:128:15",
															"statements": [
																{
																	"nativeSrc": "3562:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3562:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3576:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3576:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3566:6:15",
																			"nodeType": "YulTypedName",
																			"src": "3566:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3591:74:15",
																	"nodeType": "YulAssignment",
																	"src": "3591:74:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3637:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "3637:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3648:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "3648:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3633:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3633:3:15"
																				},
																				"nativeSrc": "3633:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3633:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3657:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "3657:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "3601:31:15",
																			"nodeType": "YulIdentifier",
																			"src": "3601:31:15"
																		},
																		"nativeSrc": "3601:64:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3601:64:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3591:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "3591:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "3331:351:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3378:9:15",
														"nodeType": "YulTypedName",
														"src": "3378:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3389:7:15",
														"nodeType": "YulTypedName",
														"src": "3389:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3401:6:15",
														"nodeType": "YulTypedName",
														"src": "3401:6:15",
														"type": ""
													}
												],
												"src": "3331:351:15"
											},
											{
												"body": {
													"nativeSrc": "3784:73:15",
													"nodeType": "YulBlock",
													"src": "3784:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3801:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3801:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3806:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3806:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3794:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3794:6:15"
																},
																"nativeSrc": "3794:19:15",
																"nodeType": "YulFunctionCall",
																"src": "3794:19:15"
															},
															"nativeSrc": "3794:19:15",
															"nodeType": "YulExpressionStatement",
															"src": "3794:19:15"
														},
														{
															"nativeSrc": "3822:29:15",
															"nodeType": "YulAssignment",
															"src": "3822:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3841:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3841:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3846:4:15",
																		"nodeType": "YulLiteral",
																		"src": "3846:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3837:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3837:3:15"
																},
																"nativeSrc": "3837:14:15",
																"nodeType": "YulFunctionCall",
																"src": "3837:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3822:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "3822:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3688:169:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3756:3:15",
														"nodeType": "YulTypedName",
														"src": "3756:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3761:6:15",
														"nodeType": "YulTypedName",
														"src": "3761:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3772:11:15",
														"nodeType": "YulTypedName",
														"src": "3772:11:15",
														"type": ""
													}
												],
												"src": "3688:169:15"
											},
											{
												"body": {
													"nativeSrc": "3969:114:15",
													"nodeType": "YulBlock",
													"src": "3969:114:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3991:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3991:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3999:1:15",
																				"nodeType": "YulLiteral",
																				"src": "3999:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3987:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3987:3:15"
																		},
																		"nativeSrc": "3987:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3987:14:15"
																	},
																	{
																		"hexValue": "43616c6c6572206973206e6f7420616e696d616c20746f6b656e206f6e776572",
																		"kind": "string",
																		"nativeSrc": "4003:34:15",
																		"nodeType": "YulLiteral",
																		"src": "4003:34:15",
																		"type": "",
																		"value": "Caller is not animal token onwer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3980:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3980:6:15"
																},
																"nativeSrc": "3980:58:15",
																"nodeType": "YulFunctionCall",
																"src": "3980:58:15"
															},
															"nativeSrc": "3980:58:15",
															"nodeType": "YulExpressionStatement",
															"src": "3980:58:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4059:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4059:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4067:2:15",
																				"nodeType": "YulLiteral",
																				"src": "4067:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4055:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4055:3:15"
																		},
																		"nativeSrc": "4055:15:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4055:15:15"
																	},
																	{
																		"hexValue": "2e",
																		"kind": "string",
																		"nativeSrc": "4072:3:15",
																		"nodeType": "YulLiteral",
																		"src": "4072:3:15",
																		"type": "",
																		"value": "."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4048:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4048:6:15"
																},
																"nativeSrc": "4048:28:15",
																"nodeType": "YulFunctionCall",
																"src": "4048:28:15"
															},
															"nativeSrc": "4048:28:15",
															"nodeType": "YulExpressionStatement",
															"src": "4048:28:15"
														}
													]
												},
												"name": "store_literal_in_memory_e55848a2c79418aae567817e49c2f1512916dfd26abaeaa883e0e5dd1032d5c5",
												"nativeSrc": "3863:220:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3961:6:15",
														"nodeType": "YulTypedName",
														"src": "3961:6:15",
														"type": ""
													}
												],
												"src": "3863:220:15"
											},
											{
												"body": {
													"nativeSrc": "4235:220:15",
													"nodeType": "YulBlock",
													"src": "4235:220:15",
													"statements": [
														{
															"nativeSrc": "4245:74:15",
															"nodeType": "YulAssignment",
															"src": "4245:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4311:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "4311:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4316:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4316:2:15",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4252:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "4252:58:15"
																},
																"nativeSrc": "4252:67:15",
																"nodeType": "YulFunctionCall",
																"src": "4252:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4245:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4245:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4417:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "4417:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e55848a2c79418aae567817e49c2f1512916dfd26abaeaa883e0e5dd1032d5c5",
																	"nativeSrc": "4328:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "4328:88:15"
																},
																"nativeSrc": "4328:93:15",
																"nodeType": "YulFunctionCall",
																"src": "4328:93:15"
															},
															"nativeSrc": "4328:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "4328:93:15"
														},
														{
															"nativeSrc": "4430:19:15",
															"nodeType": "YulAssignment",
															"src": "4430:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4441:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "4441:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4446:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4446:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4437:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4437:3:15"
																},
																"nativeSrc": "4437:12:15",
																"nodeType": "YulFunctionCall",
																"src": "4437:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4430:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4430:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e55848a2c79418aae567817e49c2f1512916dfd26abaeaa883e0e5dd1032d5c5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4089:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4223:3:15",
														"nodeType": "YulTypedName",
														"src": "4223:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4231:3:15",
														"nodeType": "YulTypedName",
														"src": "4231:3:15",
														"type": ""
													}
												],
												"src": "4089:366:15"
											},
											{
												"body": {
													"nativeSrc": "4632:248:15",
													"nodeType": "YulBlock",
													"src": "4632:248:15",
													"statements": [
														{
															"nativeSrc": "4642:26:15",
															"nodeType": "YulAssignment",
															"src": "4642:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4654:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "4654:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4665:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4665:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4650:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4650:3:15"
																},
																"nativeSrc": "4650:18:15",
																"nodeType": "YulFunctionCall",
																"src": "4650:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4642:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "4642:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4689:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4689:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4700:1:15",
																				"nodeType": "YulLiteral",
																				"src": "4700:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4685:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4685:3:15"
																		},
																		"nativeSrc": "4685:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4685:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4708:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "4708:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4714:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4714:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4704:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4704:3:15"
																		},
																		"nativeSrc": "4704:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4704:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4678:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4678:6:15"
																},
																"nativeSrc": "4678:47:15",
																"nodeType": "YulFunctionCall",
																"src": "4678:47:15"
															},
															"nativeSrc": "4678:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "4678:47:15"
														},
														{
															"nativeSrc": "4734:139:15",
															"nodeType": "YulAssignment",
															"src": "4734:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4868:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "4868:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e55848a2c79418aae567817e49c2f1512916dfd26abaeaa883e0e5dd1032d5c5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4742:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "4742:124:15"
																},
																"nativeSrc": "4742:131:15",
																"nodeType": "YulFunctionCall",
																"src": "4742:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4734:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "4734:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e55848a2c79418aae567817e49c2f1512916dfd26abaeaa883e0e5dd1032d5c5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4461:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4612:9:15",
														"nodeType": "YulTypedName",
														"src": "4612:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4627:4:15",
														"nodeType": "YulTypedName",
														"src": "4627:4:15",
														"type": ""
													}
												],
												"src": "4461:419:15"
											},
											{
												"body": {
													"nativeSrc": "4992:67:15",
													"nodeType": "YulBlock",
													"src": "4992:67:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5014:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5014:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5022:1:15",
																				"nodeType": "YulLiteral",
																				"src": "5022:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5010:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5010:3:15"
																		},
																		"nativeSrc": "5010:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5010:14:15"
																	},
																	{
																		"hexValue": "5072696365206973207a65726f206f72206c6f7765722e",
																		"kind": "string",
																		"nativeSrc": "5026:25:15",
																		"nodeType": "YulLiteral",
																		"src": "5026:25:15",
																		"type": "",
																		"value": "Price is zero or lower."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5003:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5003:6:15"
																},
																"nativeSrc": "5003:49:15",
																"nodeType": "YulFunctionCall",
																"src": "5003:49:15"
															},
															"nativeSrc": "5003:49:15",
															"nodeType": "YulExpressionStatement",
															"src": "5003:49:15"
														}
													]
												},
												"name": "store_literal_in_memory_fa56a0634fb2d521a787ef3cdac325b3079949c554e101d0d44c9d87f0eeea33",
												"nativeSrc": "4886:173:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4984:6:15",
														"nodeType": "YulTypedName",
														"src": "4984:6:15",
														"type": ""
													}
												],
												"src": "4886:173:15"
											},
											{
												"body": {
													"nativeSrc": "5211:220:15",
													"nodeType": "YulBlock",
													"src": "5211:220:15",
													"statements": [
														{
															"nativeSrc": "5221:74:15",
															"nodeType": "YulAssignment",
															"src": "5221:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5287:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "5287:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5292:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5292:2:15",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5228:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "5228:58:15"
																},
																"nativeSrc": "5228:67:15",
																"nodeType": "YulFunctionCall",
																"src": "5228:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5221:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5221:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5393:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "5393:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fa56a0634fb2d521a787ef3cdac325b3079949c554e101d0d44c9d87f0eeea33",
																	"nativeSrc": "5304:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "5304:88:15"
																},
																"nativeSrc": "5304:93:15",
																"nodeType": "YulFunctionCall",
																"src": "5304:93:15"
															},
															"nativeSrc": "5304:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "5304:93:15"
														},
														{
															"nativeSrc": "5406:19:15",
															"nodeType": "YulAssignment",
															"src": "5406:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5417:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "5417:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5422:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5422:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5413:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5413:3:15"
																},
																"nativeSrc": "5413:12:15",
																"nodeType": "YulFunctionCall",
																"src": "5413:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5406:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5406:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fa56a0634fb2d521a787ef3cdac325b3079949c554e101d0d44c9d87f0eeea33_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5065:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5199:3:15",
														"nodeType": "YulTypedName",
														"src": "5199:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5207:3:15",
														"nodeType": "YulTypedName",
														"src": "5207:3:15",
														"type": ""
													}
												],
												"src": "5065:366:15"
											},
											{
												"body": {
													"nativeSrc": "5608:248:15",
													"nodeType": "YulBlock",
													"src": "5608:248:15",
													"statements": [
														{
															"nativeSrc": "5618:26:15",
															"nodeType": "YulAssignment",
															"src": "5618:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5630:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "5630:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5641:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5641:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5626:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5626:3:15"
																},
																"nativeSrc": "5626:18:15",
																"nodeType": "YulFunctionCall",
																"src": "5626:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5618:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "5618:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5665:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5665:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5676:1:15",
																				"nodeType": "YulLiteral",
																				"src": "5676:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5661:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5661:3:15"
																		},
																		"nativeSrc": "5661:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5661:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5684:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "5684:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5690:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5690:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5680:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5680:3:15"
																		},
																		"nativeSrc": "5680:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5680:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5654:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5654:6:15"
																},
																"nativeSrc": "5654:47:15",
																"nodeType": "YulFunctionCall",
																"src": "5654:47:15"
															},
															"nativeSrc": "5654:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "5654:47:15"
														},
														{
															"nativeSrc": "5710:139:15",
															"nodeType": "YulAssignment",
															"src": "5710:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5844:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "5844:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fa56a0634fb2d521a787ef3cdac325b3079949c554e101d0d44c9d87f0eeea33_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5718:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "5718:124:15"
																},
																"nativeSrc": "5718:131:15",
																"nodeType": "YulFunctionCall",
																"src": "5718:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5710:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "5710:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fa56a0634fb2d521a787ef3cdac325b3079949c554e101d0d44c9d87f0eeea33__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5437:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5588:9:15",
														"nodeType": "YulTypedName",
														"src": "5588:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5603:4:15",
														"nodeType": "YulTypedName",
														"src": "5603:4:15",
														"type": ""
													}
												],
												"src": "5437:419:15"
											},
											{
												"body": {
													"nativeSrc": "5968:117:15",
													"nodeType": "YulBlock",
													"src": "5968:117:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5990:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5990:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5998:1:15",
																				"nodeType": "YulLiteral",
																				"src": "5998:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5986:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5986:3:15"
																		},
																		"nativeSrc": "5986:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5986:14:15"
																	},
																	{
																		"hexValue": "5468697320616e696d616c546f6b656e20697320616c7265616479206f6e2073",
																		"kind": "string",
																		"nativeSrc": "6002:34:15",
																		"nodeType": "YulLiteral",
																		"src": "6002:34:15",
																		"type": "",
																		"value": "This animalToken is already on s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5979:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5979:6:15"
																},
																"nativeSrc": "5979:58:15",
																"nodeType": "YulFunctionCall",
																"src": "5979:58:15"
															},
															"nativeSrc": "5979:58:15",
															"nodeType": "YulExpressionStatement",
															"src": "5979:58:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6058:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6058:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6066:2:15",
																				"nodeType": "YulLiteral",
																				"src": "6066:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6054:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6054:3:15"
																		},
																		"nativeSrc": "6054:15:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6054:15:15"
																	},
																	{
																		"hexValue": "616c652e",
																		"kind": "string",
																		"nativeSrc": "6071:6:15",
																		"nodeType": "YulLiteral",
																		"src": "6071:6:15",
																		"type": "",
																		"value": "ale."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6047:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6047:6:15"
																},
																"nativeSrc": "6047:31:15",
																"nodeType": "YulFunctionCall",
																"src": "6047:31:15"
															},
															"nativeSrc": "6047:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "6047:31:15"
														}
													]
												},
												"name": "store_literal_in_memory_ee45af5e6adfe68b22d0cf095aa0e0331e653da1cebe089aea7cdb29bf06b415",
												"nativeSrc": "5862:223:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5960:6:15",
														"nodeType": "YulTypedName",
														"src": "5960:6:15",
														"type": ""
													}
												],
												"src": "5862:223:15"
											},
											{
												"body": {
													"nativeSrc": "6237:220:15",
													"nodeType": "YulBlock",
													"src": "6237:220:15",
													"statements": [
														{
															"nativeSrc": "6247:74:15",
															"nodeType": "YulAssignment",
															"src": "6247:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6313:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6313:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6318:2:15",
																		"nodeType": "YulLiteral",
																		"src": "6318:2:15",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6254:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "6254:58:15"
																},
																"nativeSrc": "6254:67:15",
																"nodeType": "YulFunctionCall",
																"src": "6254:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6247:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6247:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6419:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6419:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ee45af5e6adfe68b22d0cf095aa0e0331e653da1cebe089aea7cdb29bf06b415",
																	"nativeSrc": "6330:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "6330:88:15"
																},
																"nativeSrc": "6330:93:15",
																"nodeType": "YulFunctionCall",
																"src": "6330:93:15"
															},
															"nativeSrc": "6330:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "6330:93:15"
														},
														{
															"nativeSrc": "6432:19:15",
															"nodeType": "YulAssignment",
															"src": "6432:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6443:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6443:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6448:2:15",
																		"nodeType": "YulLiteral",
																		"src": "6448:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6439:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6439:3:15"
																},
																"nativeSrc": "6439:12:15",
																"nodeType": "YulFunctionCall",
																"src": "6439:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6432:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6432:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ee45af5e6adfe68b22d0cf095aa0e0331e653da1cebe089aea7cdb29bf06b415_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6091:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6225:3:15",
														"nodeType": "YulTypedName",
														"src": "6225:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6233:3:15",
														"nodeType": "YulTypedName",
														"src": "6233:3:15",
														"type": ""
													}
												],
												"src": "6091:366:15"
											},
											{
												"body": {
													"nativeSrc": "6634:248:15",
													"nodeType": "YulBlock",
													"src": "6634:248:15",
													"statements": [
														{
															"nativeSrc": "6644:26:15",
															"nodeType": "YulAssignment",
															"src": "6644:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6656:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "6656:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6667:2:15",
																		"nodeType": "YulLiteral",
																		"src": "6667:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6652:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6652:3:15"
																},
																"nativeSrc": "6652:18:15",
																"nodeType": "YulFunctionCall",
																"src": "6652:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6644:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "6644:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6691:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6691:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6702:1:15",
																				"nodeType": "YulLiteral",
																				"src": "6702:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6687:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6687:3:15"
																		},
																		"nativeSrc": "6687:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6687:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6710:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "6710:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6716:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6716:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6706:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6706:3:15"
																		},
																		"nativeSrc": "6706:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6706:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6680:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6680:6:15"
																},
																"nativeSrc": "6680:47:15",
																"nodeType": "YulFunctionCall",
																"src": "6680:47:15"
															},
															"nativeSrc": "6680:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "6680:47:15"
														},
														{
															"nativeSrc": "6736:139:15",
															"nodeType": "YulAssignment",
															"src": "6736:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6870:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "6870:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ee45af5e6adfe68b22d0cf095aa0e0331e653da1cebe089aea7cdb29bf06b415_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6744:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "6744:124:15"
																},
																"nativeSrc": "6744:131:15",
																"nodeType": "YulFunctionCall",
																"src": "6744:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6736:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "6736:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ee45af5e6adfe68b22d0cf095aa0e0331e653da1cebe089aea7cdb29bf06b415__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6463:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6614:9:15",
														"nodeType": "YulTypedName",
														"src": "6614:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6629:4:15",
														"nodeType": "YulTypedName",
														"src": "6629:4:15",
														"type": ""
													}
												],
												"src": "6463:419:15"
											},
											{
												"body": {
													"nativeSrc": "6953:53:15",
													"nodeType": "YulBlock",
													"src": "6953:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6970:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6970:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6993:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "6993:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6975:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "6975:17:15"
																		},
																		"nativeSrc": "6975:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6975:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6963:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6963:6:15"
																},
																"nativeSrc": "6963:37:15",
																"nodeType": "YulFunctionCall",
																"src": "6963:37:15"
															},
															"nativeSrc": "6963:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "6963:37:15"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6888:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6941:5:15",
														"nodeType": "YulTypedName",
														"src": "6941:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6948:3:15",
														"nodeType": "YulTypedName",
														"src": "6948:3:15",
														"type": ""
													}
												],
												"src": "6888:118:15"
											},
											{
												"body": {
													"nativeSrc": "7138:206:15",
													"nodeType": "YulBlock",
													"src": "7138:206:15",
													"statements": [
														{
															"nativeSrc": "7148:26:15",
															"nodeType": "YulAssignment",
															"src": "7148:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7160:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "7160:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7171:2:15",
																		"nodeType": "YulLiteral",
																		"src": "7171:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7156:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7156:3:15"
																},
																"nativeSrc": "7156:18:15",
																"nodeType": "YulFunctionCall",
																"src": "7156:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7148:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "7148:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7228:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7228:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7241:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "7241:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7252:1:15",
																				"nodeType": "YulLiteral",
																				"src": "7252:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7237:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7237:3:15"
																		},
																		"nativeSrc": "7237:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7237:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7184:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "7184:43:15"
																},
																"nativeSrc": "7184:71:15",
																"nodeType": "YulFunctionCall",
																"src": "7184:71:15"
															},
															"nativeSrc": "7184:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "7184:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7309:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7309:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7322:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "7322:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7333:2:15",
																				"nodeType": "YulLiteral",
																				"src": "7333:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7318:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7318:3:15"
																		},
																		"nativeSrc": "7318:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7318:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7265:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "7265:43:15"
																},
																"nativeSrc": "7265:72:15",
																"nodeType": "YulFunctionCall",
																"src": "7265:72:15"
															},
															"nativeSrc": "7265:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "7265:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "7012:332:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7102:9:15",
														"nodeType": "YulTypedName",
														"src": "7102:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7114:6:15",
														"nodeType": "YulTypedName",
														"src": "7114:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7122:6:15",
														"nodeType": "YulTypedName",
														"src": "7122:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7133:4:15",
														"nodeType": "YulTypedName",
														"src": "7133:4:15",
														"type": ""
													}
												],
												"src": "7012:332:15"
											},
											{
												"body": {
													"nativeSrc": "7392:48:15",
													"nodeType": "YulBlock",
													"src": "7392:48:15",
													"statements": [
														{
															"nativeSrc": "7402:32:15",
															"nodeType": "YulAssignment",
															"src": "7402:32:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7427:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "7427:5:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "7420:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "7420:6:15"
																		},
																		"nativeSrc": "7420:13:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7420:13:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7413:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7413:6:15"
																},
																"nativeSrc": "7413:21:15",
																"nodeType": "YulFunctionCall",
																"src": "7413:21:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7402:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "7402:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "7350:90:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7374:5:15",
														"nodeType": "YulTypedName",
														"src": "7374:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7384:7:15",
														"nodeType": "YulTypedName",
														"src": "7384:7:15",
														"type": ""
													}
												],
												"src": "7350:90:15"
											},
											{
												"body": {
													"nativeSrc": "7486:76:15",
													"nodeType": "YulBlock",
													"src": "7486:76:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "7540:16:15",
																"nodeType": "YulBlock",
																"src": "7540:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7549:1:15",
																					"nodeType": "YulLiteral",
																					"src": "7549:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7552:1:15",
																					"nodeType": "YulLiteral",
																					"src": "7552:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7542:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "7542:6:15"
																			},
																			"nativeSrc": "7542:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7542:12:15"
																		},
																		"nativeSrc": "7542:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "7542:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7509:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "7509:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7531:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "7531:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "7516:14:15",
																					"nodeType": "YulIdentifier",
																					"src": "7516:14:15"
																				},
																				"nativeSrc": "7516:21:15",
																				"nodeType": "YulFunctionCall",
																				"src": "7516:21:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7506:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "7506:2:15"
																		},
																		"nativeSrc": "7506:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7506:32:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7499:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7499:6:15"
																},
																"nativeSrc": "7499:40:15",
																"nodeType": "YulFunctionCall",
																"src": "7499:40:15"
															},
															"nativeSrc": "7496:60:15",
															"nodeType": "YulIf",
															"src": "7496:60:15"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "7446:116:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7479:5:15",
														"nodeType": "YulTypedName",
														"src": "7479:5:15",
														"type": ""
													}
												],
												"src": "7446:116:15"
											},
											{
												"body": {
													"nativeSrc": "7628:77:15",
													"nodeType": "YulBlock",
													"src": "7628:77:15",
													"statements": [
														{
															"nativeSrc": "7638:22:15",
															"nodeType": "YulAssignment",
															"src": "7638:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7653:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7653:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7647:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "7647:5:15"
																},
																"nativeSrc": "7647:13:15",
																"nodeType": "YulFunctionCall",
																"src": "7647:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7638:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "7638:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7693:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "7693:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "7669:23:15",
																	"nodeType": "YulIdentifier",
																	"src": "7669:23:15"
																},
																"nativeSrc": "7669:30:15",
																"nodeType": "YulFunctionCall",
																"src": "7669:30:15"
															},
															"nativeSrc": "7669:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "7669:30:15"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "7568:137:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7606:6:15",
														"nodeType": "YulTypedName",
														"src": "7606:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7614:3:15",
														"nodeType": "YulTypedName",
														"src": "7614:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7622:5:15",
														"nodeType": "YulTypedName",
														"src": "7622:5:15",
														"type": ""
													}
												],
												"src": "7568:137:15"
											},
											{
												"body": {
													"nativeSrc": "7785:271:15",
													"nodeType": "YulBlock",
													"src": "7785:271:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "7831:83:15",
																"nodeType": "YulBlock",
																"src": "7831:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7833:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "7833:77:15"
																			},
																			"nativeSrc": "7833:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7833:79:15"
																		},
																		"nativeSrc": "7833:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "7833:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7806:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "7806:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7815:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "7815:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7802:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7802:3:15"
																		},
																		"nativeSrc": "7802:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7802:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7827:2:15",
																		"nodeType": "YulLiteral",
																		"src": "7827:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7798:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7798:3:15"
																},
																"nativeSrc": "7798:32:15",
																"nodeType": "YulFunctionCall",
																"src": "7798:32:15"
															},
															"nativeSrc": "7795:119:15",
															"nodeType": "YulIf",
															"src": "7795:119:15"
														},
														{
															"nativeSrc": "7924:125:15",
															"nodeType": "YulBlock",
															"src": "7924:125:15",
															"statements": [
																{
																	"nativeSrc": "7939:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7939:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7953:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7953:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7943:6:15",
																			"nodeType": "YulTypedName",
																			"src": "7943:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7968:71:15",
																	"nodeType": "YulAssignment",
																	"src": "7968:71:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8011:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "8011:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8022:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "8022:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8007:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "8007:3:15"
																				},
																				"nativeSrc": "8007:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "8007:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8031:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "8031:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "7978:28:15",
																			"nodeType": "YulIdentifier",
																			"src": "7978:28:15"
																		},
																		"nativeSrc": "7978:61:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7978:61:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7968:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "7968:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "7711:345:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7755:9:15",
														"nodeType": "YulTypedName",
														"src": "7755:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7766:7:15",
														"nodeType": "YulTypedName",
														"src": "7766:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7778:6:15",
														"nodeType": "YulTypedName",
														"src": "7778:6:15",
														"type": ""
													}
												],
												"src": "7711:345:15"
											},
											{
												"body": {
													"nativeSrc": "8168:122:15",
													"nodeType": "YulBlock",
													"src": "8168:122:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8190:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "8190:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8198:1:15",
																				"nodeType": "YulLiteral",
																				"src": "8198:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8186:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8186:3:15"
																		},
																		"nativeSrc": "8186:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8186:14:15"
																	},
																	{
																		"hexValue": "416e696d616c20746f6b656e206f776e657220646964206e6f7420617070726f",
																		"kind": "string",
																		"nativeSrc": "8202:34:15",
																		"nodeType": "YulLiteral",
																		"src": "8202:34:15",
																		"type": "",
																		"value": "Animal token owner did not appro"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8179:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8179:6:15"
																},
																"nativeSrc": "8179:58:15",
																"nodeType": "YulFunctionCall",
																"src": "8179:58:15"
															},
															"nativeSrc": "8179:58:15",
															"nodeType": "YulExpressionStatement",
															"src": "8179:58:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8258:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "8258:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8266:2:15",
																				"nodeType": "YulLiteral",
																				"src": "8266:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8254:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8254:3:15"
																		},
																		"nativeSrc": "8254:15:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8254:15:15"
																	},
																	{
																		"hexValue": "766520746f6c656e2e",
																		"kind": "string",
																		"nativeSrc": "8271:11:15",
																		"nodeType": "YulLiteral",
																		"src": "8271:11:15",
																		"type": "",
																		"value": "ve tolen."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8247:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8247:6:15"
																},
																"nativeSrc": "8247:36:15",
																"nodeType": "YulFunctionCall",
																"src": "8247:36:15"
															},
															"nativeSrc": "8247:36:15",
															"nodeType": "YulExpressionStatement",
															"src": "8247:36:15"
														}
													]
												},
												"name": "store_literal_in_memory_a6d4808755e48fdf37626e9a728d72f0fc49d60bd77dffba4f5b754673e0cf8e",
												"nativeSrc": "8062:228:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8160:6:15",
														"nodeType": "YulTypedName",
														"src": "8160:6:15",
														"type": ""
													}
												],
												"src": "8062:228:15"
											},
											{
												"body": {
													"nativeSrc": "8442:220:15",
													"nodeType": "YulBlock",
													"src": "8442:220:15",
													"statements": [
														{
															"nativeSrc": "8452:74:15",
															"nodeType": "YulAssignment",
															"src": "8452:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8518:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "8518:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8523:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8523:2:15",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8459:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "8459:58:15"
																},
																"nativeSrc": "8459:67:15",
																"nodeType": "YulFunctionCall",
																"src": "8459:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8452:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8452:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8624:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "8624:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a6d4808755e48fdf37626e9a728d72f0fc49d60bd77dffba4f5b754673e0cf8e",
																	"nativeSrc": "8535:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "8535:88:15"
																},
																"nativeSrc": "8535:93:15",
																"nodeType": "YulFunctionCall",
																"src": "8535:93:15"
															},
															"nativeSrc": "8535:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "8535:93:15"
														},
														{
															"nativeSrc": "8637:19:15",
															"nodeType": "YulAssignment",
															"src": "8637:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8648:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "8648:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8653:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8653:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8644:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8644:3:15"
																},
																"nativeSrc": "8644:12:15",
																"nodeType": "YulFunctionCall",
																"src": "8644:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8637:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8637:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a6d4808755e48fdf37626e9a728d72f0fc49d60bd77dffba4f5b754673e0cf8e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8296:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8430:3:15",
														"nodeType": "YulTypedName",
														"src": "8430:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8438:3:15",
														"nodeType": "YulTypedName",
														"src": "8438:3:15",
														"type": ""
													}
												],
												"src": "8296:366:15"
											},
											{
												"body": {
													"nativeSrc": "8839:248:15",
													"nodeType": "YulBlock",
													"src": "8839:248:15",
													"statements": [
														{
															"nativeSrc": "8849:26:15",
															"nodeType": "YulAssignment",
															"src": "8849:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8861:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "8861:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8872:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8872:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8857:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8857:3:15"
																},
																"nativeSrc": "8857:18:15",
																"nodeType": "YulFunctionCall",
																"src": "8857:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8849:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "8849:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8896:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8896:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8907:1:15",
																				"nodeType": "YulLiteral",
																				"src": "8907:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8892:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8892:3:15"
																		},
																		"nativeSrc": "8892:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8892:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8915:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "8915:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8921:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8921:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8911:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8911:3:15"
																		},
																		"nativeSrc": "8911:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8911:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8885:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8885:6:15"
																},
																"nativeSrc": "8885:47:15",
																"nodeType": "YulFunctionCall",
																"src": "8885:47:15"
															},
															"nativeSrc": "8885:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "8885:47:15"
														},
														{
															"nativeSrc": "8941:139:15",
															"nodeType": "YulAssignment",
															"src": "8941:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9075:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "9075:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a6d4808755e48fdf37626e9a728d72f0fc49d60bd77dffba4f5b754673e0cf8e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8949:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "8949:124:15"
																},
																"nativeSrc": "8949:131:15",
																"nodeType": "YulFunctionCall",
																"src": "8949:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8941:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "8941:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a6d4808755e48fdf37626e9a728d72f0fc49d60bd77dffba4f5b754673e0cf8e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8668:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8819:9:15",
														"nodeType": "YulTypedName",
														"src": "8819:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8834:4:15",
														"nodeType": "YulTypedName",
														"src": "8834:4:15",
														"type": ""
													}
												],
												"src": "8668:419:15"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_MintAnimalToken_$3265_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_MintAnimalToken_$3265_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_MintAnimalToken_$3265_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_MintAnimalToken_$3265__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_MintAnimalToken_$3265_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_e55848a2c79418aae567817e49c2f1512916dfd26abaeaa883e0e5dd1032d5c5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Caller is not animal token onwer\")\n\n        mstore(add(memPtr, 32), \".\")\n\n    }\n\n    function abi_encode_t_stringliteral_e55848a2c79418aae567817e49c2f1512916dfd26abaeaa883e0e5dd1032d5c5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_e55848a2c79418aae567817e49c2f1512916dfd26abaeaa883e0e5dd1032d5c5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e55848a2c79418aae567817e49c2f1512916dfd26abaeaa883e0e5dd1032d5c5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e55848a2c79418aae567817e49c2f1512916dfd26abaeaa883e0e5dd1032d5c5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fa56a0634fb2d521a787ef3cdac325b3079949c554e101d0d44c9d87f0eeea33(memPtr) {\n\n        mstore(add(memPtr, 0), \"Price is zero or lower.\")\n\n    }\n\n    function abi_encode_t_stringliteral_fa56a0634fb2d521a787ef3cdac325b3079949c554e101d0d44c9d87f0eeea33_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_fa56a0634fb2d521a787ef3cdac325b3079949c554e101d0d44c9d87f0eeea33(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fa56a0634fb2d521a787ef3cdac325b3079949c554e101d0d44c9d87f0eeea33__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fa56a0634fb2d521a787ef3cdac325b3079949c554e101d0d44c9d87f0eeea33_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ee45af5e6adfe68b22d0cf095aa0e0331e653da1cebe089aea7cdb29bf06b415(memPtr) {\n\n        mstore(add(memPtr, 0), \"This animalToken is already on s\")\n\n        mstore(add(memPtr, 32), \"ale.\")\n\n    }\n\n    function abi_encode_t_stringliteral_ee45af5e6adfe68b22d0cf095aa0e0331e653da1cebe089aea7cdb29bf06b415_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_ee45af5e6adfe68b22d0cf095aa0e0331e653da1cebe089aea7cdb29bf06b415(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ee45af5e6adfe68b22d0cf095aa0e0331e653da1cebe089aea7cdb29bf06b415__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ee45af5e6adfe68b22d0cf095aa0e0331e653da1cebe089aea7cdb29bf06b415_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_a6d4808755e48fdf37626e9a728d72f0fc49d60bd77dffba4f5b754673e0cf8e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Animal token owner did not appro\")\n\n        mstore(add(memPtr, 32), \"ve tolen.\")\n\n    }\n\n    function abi_encode_t_stringliteral_a6d4808755e48fdf37626e9a728d72f0fc49d60bd77dffba4f5b754673e0cf8e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_a6d4808755e48fdf37626e9a728d72f0fc49d60bd77dffba4f5b754673e0cf8e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a6d4808755e48fdf37626e9a728d72f0fc49d60bd77dffba4f5b754673e0cf8e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a6d4808755e48fdf37626e9a728d72f0fc49d60bd77dffba4f5b754673e0cf8e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80632dd7d12f14610051578063498b520e146100815780634d1d7d5f1461009d578063c6ffd54e146100cd575b600080fd5b61006b6004803603810190610066919061044d565b6100eb565b6040516100789190610489565b60405180910390f35b61009b600480360381019061009691906104a4565b610103565b005b6100b760048036038101906100b2919061044d565b6103ca565b6040516100c49190610489565b60405180910390f35b6100d56103ee565b6040516100e29190610563565b60405180910390f35b60016020528060005260406000206000915090505481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b815260040161015f9190610489565b602060405180830381865afa15801561017c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a091906105bc565b90503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610210576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102079061066c565b60405180910390fd5b60008211610253576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024a906106d8565b60405180910390fd5b60006001600085815260200190815260200160002054146102a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a09061076a565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e985e9c582306040518363ffffffff1660e01b8152600401610304929190610799565b602060405180830381865afa158015610321573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034591906107fa565b610384576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037b90610899565b60405180910390fd5b8160016000858152602001908152602001600020819055506002839080600181540180825580915050600190039060005260206000200160009091909190915055505050565b600281815481106103da57600080fd5b906000526020600020016000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080fd5b6000819050919050565b61042a81610417565b811461043557600080fd5b50565b60008135905061044781610421565b92915050565b60006020828403121561046357610462610412565b5b600061047184828501610438565b91505092915050565b61048381610417565b82525050565b600060208201905061049e600083018461047a565b92915050565b600080604083850312156104bb576104ba610412565b5b60006104c985828601610438565b92505060206104da85828601610438565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061052961052461051f846104e4565b610504565b6104e4565b9050919050565b600061053b8261050e565b9050919050565b600061054d82610530565b9050919050565b61055d81610542565b82525050565b60006020820190506105786000830184610554565b92915050565b6000610589826104e4565b9050919050565b6105998161057e565b81146105a457600080fd5b50565b6000815190506105b681610590565b92915050565b6000602082840312156105d2576105d1610412565b5b60006105e0848285016105a7565b91505092915050565b600082825260208201905092915050565b7f43616c6c6572206973206e6f7420616e696d616c20746f6b656e206f6e77657260008201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b60006106566021836105e9565b9150610661826105fa565b604082019050919050565b6000602082019050818103600083015261068581610649565b9050919050565b7f5072696365206973207a65726f206f72206c6f7765722e000000000000000000600082015250565b60006106c26017836105e9565b91506106cd8261068c565b602082019050919050565b600060208201905081810360008301526106f1816106b5565b9050919050565b7f5468697320616e696d616c546f6b656e20697320616c7265616479206f6e207360008201527f616c652e00000000000000000000000000000000000000000000000000000000602082015250565b60006107546024836105e9565b915061075f826106f8565b604082019050919050565b6000602082019050818103600083015261078381610747565b9050919050565b6107938161057e565b82525050565b60006040820190506107ae600083018561078a565b6107bb602083018461078a565b9392505050565b60008115159050919050565b6107d7816107c2565b81146107e257600080fd5b50565b6000815190506107f4816107ce565b92915050565b6000602082840312156108105761080f610412565b5b600061081e848285016107e5565b91505092915050565b7f416e696d616c20746f6b656e206f776e657220646964206e6f7420617070726f60008201527f766520746f6c656e2e0000000000000000000000000000000000000000000000602082015250565b60006108836029836105e9565b915061088e82610827565b604082019050919050565b600060208201905081810360008301526108b281610876565b905091905056fea2646970667358221220a2d7fd9227db0072f3fe6e7b6098eab05bb1eee3f1af5085e726140008271e9664736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2DD7D12F EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x498B520E EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x4D1D7D5F EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0xC6FFD54E EQ PUSH2 0xCD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x44D JUMP JUMPDEST PUSH2 0xEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x489 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x4A4 JUMP JUMPDEST PUSH2 0x103 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB2 SWAP2 SWAP1 PUSH2 0x44D JUMP JUMPDEST PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC4 SWAP2 SWAP1 PUSH2 0x489 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD5 PUSH2 0x3EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0x563 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x489 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x5BC JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x210 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x207 SWAP1 PUSH2 0x66C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x253 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24A SWAP1 PUSH2 0x6D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x2A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A0 SWAP1 PUSH2 0x76A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE985E9C5 DUP3 ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x304 SWAP3 SWAP2 SWAP1 PUSH2 0x799 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x321 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x345 SWAP2 SWAP1 PUSH2 0x7FA JUMP JUMPDEST PUSH2 0x384 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37B SWAP1 PUSH2 0x899 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x2 DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x3DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x42A DUP2 PUSH2 0x417 JUMP JUMPDEST DUP2 EQ PUSH2 0x435 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x447 DUP2 PUSH2 0x421 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x463 JUMPI PUSH2 0x462 PUSH2 0x412 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x471 DUP5 DUP3 DUP6 ADD PUSH2 0x438 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x483 DUP2 PUSH2 0x417 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x49E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x47A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4BB JUMPI PUSH2 0x4BA PUSH2 0x412 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4C9 DUP6 DUP3 DUP7 ADD PUSH2 0x438 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4DA DUP6 DUP3 DUP7 ADD PUSH2 0x438 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x529 PUSH2 0x524 PUSH2 0x51F DUP5 PUSH2 0x4E4 JUMP JUMPDEST PUSH2 0x504 JUMP JUMPDEST PUSH2 0x4E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53B DUP3 PUSH2 0x50E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x54D DUP3 PUSH2 0x530 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x55D DUP2 PUSH2 0x542 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x578 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x554 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x589 DUP3 PUSH2 0x4E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x599 DUP2 PUSH2 0x57E JUMP JUMPDEST DUP2 EQ PUSH2 0x5A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5B6 DUP2 PUSH2 0x590 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5D2 JUMPI PUSH2 0x5D1 PUSH2 0x412 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5E0 DUP5 DUP3 DUP6 ADD PUSH2 0x5A7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F7420616E696D616C20746F6B656E206F6E776572 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x656 PUSH1 0x21 DUP4 PUSH2 0x5E9 JUMP JUMPDEST SWAP2 POP PUSH2 0x661 DUP3 PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x685 DUP2 PUSH2 0x649 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5072696365206973207A65726F206F72206C6F7765722E000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6C2 PUSH1 0x17 DUP4 PUSH2 0x5E9 JUMP JUMPDEST SWAP2 POP PUSH2 0x6CD DUP3 PUSH2 0x68C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x6F1 DUP2 PUSH2 0x6B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5468697320616E696D616C546F6B656E20697320616C7265616479206F6E2073 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C652E00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x754 PUSH1 0x24 DUP4 PUSH2 0x5E9 JUMP JUMPDEST SWAP2 POP PUSH2 0x75F DUP3 PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x783 DUP2 PUSH2 0x747 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x793 DUP2 PUSH2 0x57E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7AE PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x78A JUMP JUMPDEST PUSH2 0x7BB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x78A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7D7 DUP2 PUSH2 0x7C2 JUMP JUMPDEST DUP2 EQ PUSH2 0x7E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x7F4 DUP2 PUSH2 0x7CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x810 JUMPI PUSH2 0x80F PUSH2 0x412 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x81E DUP5 DUP3 DUP6 ADD PUSH2 0x7E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416E696D616C20746F6B656E206F776E657220646964206E6F7420617070726F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x766520746F6C656E2E0000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x883 PUSH1 0x29 DUP4 PUSH2 0x5E9 JUMP JUMPDEST SWAP2 POP PUSH2 0x88E DUP3 PUSH2 0x827 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8B2 DUP2 PUSH2 0x876 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 0xD7 REVERT SWAP3 0x27 0xDB STOP PUSH19 0xF3FE6E7B6098EAB05BB1EEE3F1AF5085E72614 STOP ADDMOD 0x27 0x1E SWAP7 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "97:1247:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;370:52;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;556:785;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;431:39;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;129:45;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;370:52;;;;;;;;;;;;;;;;;:::o;556:785::-;645:24;672:22;;;;;;;;;;;:30;;;703:14;672:46;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;645:73;;882:10;862:30;;:16;:30;;;854:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;958:1;949:6;:10;941:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;1043:1;1006:17;:33;1024:14;1006:33;;;;;;;;;;;;:38;998:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;1104:22;;;;;;;;;;:39;;;1144:16;1170:4;1104:72;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1096:126;;;;;;;;;;;;:::i;:::-;;;;;;;;;1271:6;1235:17;:33;1253:14;1235:33;;;;;;;;;;;:42;;;;1290:22;1318:14;1290:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;634:707;556:785;;:::o;431:39::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;129:45::-;;;;;;;;;;;;:::o;88:117:15:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o;1377:474::-;1445:6;1453;1502:2;1490:9;1481:7;1477:23;1473:32;1470:119;;;1508:79;;:::i;:::-;1470:119;1628:1;1653:53;1698:7;1689:6;1678:9;1674:22;1653:53;:::i;:::-;1643:63;;1599:117;1755:2;1781:53;1826:7;1817:6;1806:9;1802:22;1781:53;:::i;:::-;1771:63;;1726:118;1377:474;;;;;:::o;1857:126::-;1894:7;1934:42;1927:5;1923:54;1912:65;;1857:126;;;:::o;1989:60::-;2017:3;2038:5;2031:12;;1989:60;;;:::o;2055:142::-;2105:9;2138:53;2156:34;2165:24;2183:5;2165:24;:::i;:::-;2156:34;:::i;:::-;2138:53;:::i;:::-;2125:66;;2055:142;;;:::o;2203:126::-;2253:9;2286:37;2317:5;2286:37;:::i;:::-;2273:50;;2203:126;;;:::o;2335:150::-;2409:9;2442:37;2473:5;2442:37;:::i;:::-;2429:50;;2335:150;;;:::o;2491:179::-;2602:61;2657:5;2602:61;:::i;:::-;2597:3;2590:74;2491:179;;:::o;2676:270::-;2793:4;2831:2;2820:9;2816:18;2808:26;;2844:95;2936:1;2925:9;2921:17;2912:6;2844:95;:::i;:::-;2676:270;;;;:::o;2952:96::-;2989:7;3018:24;3036:5;3018:24;:::i;:::-;3007:35;;2952:96;;;:::o;3054:122::-;3127:24;3145:5;3127:24;:::i;:::-;3120:5;3117:35;3107:63;;3166:1;3163;3156:12;3107:63;3054:122;:::o;3182:143::-;3239:5;3270:6;3264:13;3255:22;;3286:33;3313:5;3286:33;:::i;:::-;3182:143;;;;:::o;3331:351::-;3401:6;3450:2;3438:9;3429:7;3425:23;3421:32;3418:119;;;3456:79;;:::i;:::-;3418:119;3576:1;3601:64;3657:7;3648:6;3637:9;3633:22;3601:64;:::i;:::-;3591:74;;3547:128;3331:351;;;;:::o;3688:169::-;3772:11;3806:6;3801:3;3794:19;3846:4;3841:3;3837:14;3822:29;;3688:169;;;;:::o;3863:220::-;4003:34;3999:1;3991:6;3987:14;3980:58;4072:3;4067:2;4059:6;4055:15;4048:28;3863:220;:::o;4089:366::-;4231:3;4252:67;4316:2;4311:3;4252:67;:::i;:::-;4245:74;;4328:93;4417:3;4328:93;:::i;:::-;4446:2;4441:3;4437:12;4430:19;;4089:366;;;:::o;4461:419::-;4627:4;4665:2;4654:9;4650:18;4642:26;;4714:9;4708:4;4704:20;4700:1;4689:9;4685:17;4678:47;4742:131;4868:4;4742:131;:::i;:::-;4734:139;;4461:419;;;:::o;4886:173::-;5026:25;5022:1;5014:6;5010:14;5003:49;4886:173;:::o;5065:366::-;5207:3;5228:67;5292:2;5287:3;5228:67;:::i;:::-;5221:74;;5304:93;5393:3;5304:93;:::i;:::-;5422:2;5417:3;5413:12;5406:19;;5065:366;;;:::o;5437:419::-;5603:4;5641:2;5630:9;5626:18;5618:26;;5690:9;5684:4;5680:20;5676:1;5665:9;5661:17;5654:47;5718:131;5844:4;5718:131;:::i;:::-;5710:139;;5437:419;;;:::o;5862:223::-;6002:34;5998:1;5990:6;5986:14;5979:58;6071:6;6066:2;6058:6;6054:15;6047:31;5862:223;:::o;6091:366::-;6233:3;6254:67;6318:2;6313:3;6254:67;:::i;:::-;6247:74;;6330:93;6419:3;6330:93;:::i;:::-;6448:2;6443:3;6439:12;6432:19;;6091:366;;;:::o;6463:419::-;6629:4;6667:2;6656:9;6652:18;6644:26;;6716:9;6710:4;6706:20;6702:1;6691:9;6687:17;6680:47;6744:131;6870:4;6744:131;:::i;:::-;6736:139;;6463:419;;;:::o;6888:118::-;6975:24;6993:5;6975:24;:::i;:::-;6970:3;6963:37;6888:118;;:::o;7012:332::-;7133:4;7171:2;7160:9;7156:18;7148:26;;7184:71;7252:1;7241:9;7237:17;7228:6;7184:71;:::i;:::-;7265:72;7333:2;7322:9;7318:18;7309:6;7265:72;:::i;:::-;7012:332;;;;;:::o;7350:90::-;7384:7;7427:5;7420:13;7413:21;7402:32;;7350:90;;;:::o;7446:116::-;7516:21;7531:5;7516:21;:::i;:::-;7509:5;7506:32;7496:60;;7552:1;7549;7542:12;7496:60;7446:116;:::o;7568:137::-;7622:5;7653:6;7647:13;7638:22;;7669:30;7693:5;7669:30;:::i;:::-;7568:137;;;;:::o;7711:345::-;7778:6;7827:2;7815:9;7806:7;7802:23;7798:32;7795:119;;;7833:79;;:::i;:::-;7795:119;7953:1;7978:61;8031:7;8022:6;8011:9;8007:22;7978:61;:::i;:::-;7968:71;;7924:125;7711:345;;;;:::o;8062:228::-;8202:34;8198:1;8190:6;8186:14;8179:58;8271:11;8266:2;8258:6;8254:15;8247:36;8062:228;:::o;8296:366::-;8438:3;8459:67;8523:2;8518:3;8459:67;:::i;:::-;8452:74;;8535:93;8624:3;8535:93;:::i;:::-;8653:2;8648:3;8644:12;8637:19;;8296:366;;;:::o;8668:419::-;8834:4;8872:2;8861:9;8857:18;8849:26;;8921:9;8915:4;8911:20;8907:1;8896:9;8892:17;8885:47;8949:131;9075:4;8949:131;:::i;:::-;8941:139;;8668:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "457400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"animalTokenPrices(uint256)": "infinite",
								"mintAnimalTokenAddress()": "infinite",
								"onSaleAnimalTokenArray(uint256)": "infinite",
								"setForSaleAnimalToken(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 97,
									"end": 1344,
									"name": "PUSH",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 97,
									"end": 1344,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 97,
									"end": 1344,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 183,
									"end": 312,
									"name": "CALLVALUE",
									"source": 14
								},
								{
									"begin": 183,
									"end": 312,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 183,
									"end": 312,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 183,
									"end": 312,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 183,
									"end": 312,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 183,
									"end": 312,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 312,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 183,
									"end": 312,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 183,
									"end": 312,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 183,
									"end": 312,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 183,
									"end": 312,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 183,
									"end": 312,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 183,
									"end": 312,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 183,
									"end": 312,
									"name": "PUSHSIZE",
									"source": 14
								},
								{
									"begin": 183,
									"end": 312,
									"name": "CODESIZE",
									"source": 14
								},
								{
									"begin": 183,
									"end": 312,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 183,
									"end": 312,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 183,
									"end": 312,
									"name": "PUSHSIZE",
									"source": 14
								},
								{
									"begin": 183,
									"end": 312,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 183,
									"end": 312,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 183,
									"end": 312,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 183,
									"end": 312,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 183,
									"end": 312,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 183,
									"end": 312,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 183,
									"end": 312,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 183,
									"end": 312,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 183,
									"end": 312,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 183,
									"end": 312,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 183,
									"end": 312,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 183,
									"end": 312,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 183,
									"end": 312,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 183,
									"end": 312,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 183,
									"end": 312,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 183,
									"end": 312,
									"name": "tag",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 183,
									"end": 312,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 280,
									"end": 303,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 239,
									"end": 261,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 239,
									"end": 261,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 239,
									"end": 304,
									"name": "PUSH",
									"source": 14,
									"value": "100"
								},
								{
									"begin": 239,
									"end": 304,
									"name": "EXP",
									"source": 14
								},
								{
									"begin": 239,
									"end": 304,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 239,
									"end": 304,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 239,
									"end": 304,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 239,
									"end": 304,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 239,
									"end": 304,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 239,
									"end": 304,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 239,
									"end": 304,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 239,
									"end": 304,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 239,
									"end": 304,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 239,
									"end": 304,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 239,
									"end": 304,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 239,
									"end": 304,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 239,
									"end": 304,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 239,
									"end": 304,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 239,
									"end": 304,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 239,
									"end": 304,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 183,
									"end": 312,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 97,
									"end": 1344,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "6"
								},
								{
									"begin": 97,
									"end": 1344,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 15,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 15,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 15,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 15,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 15,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 15,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 15,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 15
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 15,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 15,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 15,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 97,
									"end": 1344,
									"name": "tag",
									"source": 14,
									"value": "6"
								},
								{
									"begin": 97,
									"end": 1344,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 97,
									"end": 1344,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 97,
									"end": 1344,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 97,
									"end": 1344,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 97,
									"end": 1344,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 97,
									"end": 1344,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 97,
									"end": 1344,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 97,
									"end": 1344,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a2d7fd9227db0072f3fe6e7b6098eab05bb1eee3f1af5085e726140008271e9664736f6c634300081a0033",
									".code": [
										{
											"begin": 97,
											"end": 1344,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 97,
											"end": 1344,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 97,
											"end": 1344,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 97,
											"end": 1344,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 97,
											"end": 1344,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 97,
											"end": 1344,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 97,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 97,
											"end": 1344,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 97,
											"end": 1344,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 97,
											"end": 1344,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 97,
											"end": 1344,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 97,
											"end": 1344,
											"name": "tag",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 97,
											"end": 1344,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 97,
											"end": 1344,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 97,
											"end": 1344,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 97,
											"end": 1344,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 97,
											"end": 1344,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 97,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 97,
											"end": 1344,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 97,
											"end": 1344,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 97,
											"end": 1344,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 97,
											"end": 1344,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 97,
											"end": 1344,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 97,
											"end": 1344,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 97,
											"end": 1344,
											"name": "PUSH",
											"source": 14,
											"value": "2DD7D12F"
										},
										{
											"begin": 97,
											"end": 1344,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 97,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 97,
											"end": 1344,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 97,
											"end": 1344,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 97,
											"end": 1344,
											"name": "PUSH",
											"source": 14,
											"value": "498B520E"
										},
										{
											"begin": 97,
											"end": 1344,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 97,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 97,
											"end": 1344,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 97,
											"end": 1344,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 97,
											"end": 1344,
											"name": "PUSH",
											"source": 14,
											"value": "4D1D7D5F"
										},
										{
											"begin": 97,
											"end": 1344,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 97,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 97,
											"end": 1344,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 97,
											"end": 1344,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 97,
											"end": 1344,
											"name": "PUSH",
											"source": 14,
											"value": "C6FFD54E"
										},
										{
											"begin": 97,
											"end": 1344,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 97,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 97,
											"end": 1344,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 97,
											"end": 1344,
											"name": "tag",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 97,
											"end": 1344,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 97,
											"end": 1344,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 97,
											"end": 1344,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 97,
											"end": 1344,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 370,
											"end": 422,
											"name": "tag",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 370,
											"end": 422,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 370,
											"end": 422,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 370,
											"end": 422,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 370,
											"end": 422,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 370,
											"end": 422,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 370,
											"end": 422,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 370,
											"end": 422,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 370,
											"end": 422,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 370,
											"end": 422,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 370,
											"end": 422,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 370,
											"end": 422,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 370,
											"end": 422,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 370,
											"end": 422,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 370,
											"end": 422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 370,
											"end": 422,
											"name": "tag",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 370,
											"end": 422,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 370,
											"end": 422,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 370,
											"end": 422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 370,
											"end": 422,
											"name": "tag",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 370,
											"end": 422,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 370,
											"end": 422,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 370,
											"end": 422,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 370,
											"end": 422,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 370,
											"end": 422,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 370,
											"end": 422,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 370,
											"end": 422,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 370,
											"end": 422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 370,
											"end": 422,
											"name": "tag",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 370,
											"end": 422,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 370,
											"end": 422,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 370,
											"end": 422,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 370,
											"end": 422,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 370,
											"end": 422,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 370,
											"end": 422,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 370,
											"end": 422,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 370,
											"end": 422,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 556,
											"end": 1341,
											"name": "tag",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 556,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 556,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 556,
											"end": 1341,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 556,
											"end": 1341,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 556,
											"end": 1341,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 556,
											"end": 1341,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 556,
											"end": 1341,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 556,
											"end": 1341,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 556,
											"end": 1341,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 556,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 556,
											"end": 1341,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 556,
											"end": 1341,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 556,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "15"
										},
										{
											"begin": 556,
											"end": 1341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 556,
											"end": 1341,
											"name": "tag",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 556,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 556,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 556,
											"end": 1341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 556,
											"end": 1341,
											"name": "tag",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 556,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 556,
											"end": 1341,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 431,
											"end": 470,
											"name": "tag",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 431,
											"end": 470,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 431,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 431,
											"end": 470,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 431,
											"end": 470,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 431,
											"end": 470,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 431,
											"end": 470,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 431,
											"end": 470,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 431,
											"end": 470,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 431,
											"end": 470,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 431,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 431,
											"end": 470,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 431,
											"end": 470,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 431,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 431,
											"end": 470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 431,
											"end": 470,
											"name": "tag",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 431,
											"end": 470,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 431,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 431,
											"end": 470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 431,
											"end": 470,
											"name": "tag",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 431,
											"end": 470,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 431,
											"end": 470,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 431,
											"end": 470,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 431,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 431,
											"end": 470,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 431,
											"end": 470,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 431,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 431,
											"end": 470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 431,
											"end": 470,
											"name": "tag",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 431,
											"end": 470,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 431,
											"end": 470,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 431,
											"end": 470,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 431,
											"end": 470,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 431,
											"end": 470,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 431,
											"end": 470,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 431,
											"end": 470,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 431,
											"end": 470,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 129,
											"end": 174,
											"name": "tag",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 129,
											"end": 174,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 129,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "21"
										},
										{
											"begin": 129,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 129,
											"end": 174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 129,
											"end": 174,
											"name": "tag",
											"source": 14,
											"value": "21"
										},
										{
											"begin": 129,
											"end": 174,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 129,
											"end": 174,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 129,
											"end": 174,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 129,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "23"
										},
										{
											"begin": 129,
											"end": 174,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 129,
											"end": 174,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 129,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 129,
											"end": 174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 129,
											"end": 174,
											"name": "tag",
											"source": 14,
											"value": "23"
										},
										{
											"begin": 129,
											"end": 174,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 129,
											"end": 174,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 129,
											"end": 174,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 129,
											"end": 174,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 129,
											"end": 174,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 129,
											"end": 174,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 129,
											"end": 174,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 129,
											"end": 174,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 370,
											"end": 422,
											"name": "tag",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 370,
											"end": 422,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 370,
											"end": 422,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 370,
											"end": 422,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 370,
											"end": 422,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 370,
											"end": 422,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 370,
											"end": 422,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 422,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 370,
											"end": 422,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 370,
											"end": 422,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 422,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 370,
											"end": 422,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 422,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 370,
											"end": 422,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 370,
											"end": 422,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 370,
											"end": 422,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 370,
											"end": 422,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 370,
											"end": 422,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 370,
											"end": 422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 556,
											"end": 1341,
											"name": "tag",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 556,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 645,
											"end": 669,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 694,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 672,
											"end": 694,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 694,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 672,
											"end": 694,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 672,
											"end": 694,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 672,
											"end": 694,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 672,
											"end": 694,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 672,
											"end": 694,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 672,
											"end": 694,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 672,
											"end": 694,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 672,
											"end": 694,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 672,
											"end": 702,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 672,
											"end": 702,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 672,
											"end": 702,
											"name": "PUSH",
											"source": 14,
											"value": "6352211E"
										},
										{
											"begin": 703,
											"end": 717,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 672,
											"end": 718,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 672,
											"end": 718,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 672,
											"end": 718,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 672,
											"end": 718,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 672,
											"end": 718,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 672,
											"end": 718,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 672,
											"end": 718,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 672,
											"end": 718,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 672,
											"end": 718,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 672,
											"end": 718,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 672,
											"end": 718,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 672,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 672,
											"end": 718,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 672,
											"end": 718,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 672,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 672,
											"end": 718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 672,
											"end": 718,
											"name": "tag",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 672,
											"end": 718,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 672,
											"end": 718,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 672,
											"end": 718,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 672,
											"end": 718,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 672,
											"end": 718,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 672,
											"end": 718,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 672,
											"end": 718,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 672,
											"end": 718,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 672,
											"end": 718,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 672,
											"end": 718,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 672,
											"end": 718,
											"name": "STATICCALL",
											"source": 14
										},
										{
											"begin": 672,
											"end": 718,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 672,
											"end": 718,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 672,
											"end": 718,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 672,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 672,
											"end": 718,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 672,
											"end": 718,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 672,
											"end": 718,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 718,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 672,
											"end": 718,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 672,
											"end": 718,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 672,
											"end": 718,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 718,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 672,
											"end": 718,
											"name": "tag",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 672,
											"end": 718,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 672,
											"end": 718,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 672,
											"end": 718,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 672,
											"end": 718,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 672,
											"end": 718,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 672,
											"end": 718,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 672,
											"end": 718,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 672,
											"end": 718,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 672,
											"end": 718,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 672,
											"end": 718,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 672,
											"end": 718,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 672,
											"end": 718,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 672,
											"end": 718,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 672,
											"end": 718,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 672,
											"end": 718,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 672,
											"end": 718,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 672,
											"end": 718,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 672,
											"end": 718,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 672,
											"end": 718,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 672,
											"end": 718,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 672,
											"end": 718,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 672,
											"end": 718,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 672,
											"end": 718,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 672,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 672,
											"end": 718,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 672,
											"end": 718,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 672,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 672,
											"end": 718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 672,
											"end": 718,
											"name": "tag",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 672,
											"end": 718,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 645,
											"end": 718,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 645,
											"end": 718,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 882,
											"end": 892,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 862,
											"end": 892,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 892,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 862,
											"end": 878,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 862,
											"end": 892,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 892,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 862,
											"end": 892,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 854,
											"end": 930,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 854,
											"end": 930,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 854,
											"end": 930,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 854,
											"end": 930,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 854,
											"end": 930,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 854,
											"end": 930,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 854,
											"end": 930,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 854,
											"end": 930,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 854,
											"end": 930,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 854,
											"end": 930,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 854,
											"end": 930,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 854,
											"end": 930,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 854,
											"end": 930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 854,
											"end": 930,
											"name": "tag",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 854,
											"end": 930,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 854,
											"end": 930,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 854,
											"end": 930,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 854,
											"end": 930,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 854,
											"end": 930,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 854,
											"end": 930,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 854,
											"end": 930,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 854,
											"end": 930,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 854,
											"end": 930,
											"name": "tag",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 854,
											"end": 930,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 958,
											"end": 959,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 955,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 949,
											"end": 959,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 941,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "34"
										},
										{
											"begin": 941,
											"end": 987,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 941,
											"end": 987,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 941,
											"end": 987,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 941,
											"end": 987,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 941,
											"end": 987,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 941,
											"end": 987,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 941,
											"end": 987,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 941,
											"end": 987,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 941,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "35"
										},
										{
											"begin": 941,
											"end": 987,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 941,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "36"
										},
										{
											"begin": 941,
											"end": 987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 941,
											"end": 987,
											"name": "tag",
											"source": 14,
											"value": "35"
										},
										{
											"begin": 941,
											"end": 987,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 941,
											"end": 987,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 941,
											"end": 987,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 941,
											"end": 987,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 941,
											"end": 987,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 941,
											"end": 987,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 941,
											"end": 987,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 941,
											"end": 987,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 941,
											"end": 987,
											"name": "tag",
											"source": 14,
											"value": "34"
										},
										{
											"begin": 941,
											"end": 987,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1043,
											"end": 1044,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1006,
											"end": 1023,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 1006,
											"end": 1039,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1024,
											"end": 1038,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1006,
											"end": 1039,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1006,
											"end": 1039,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1006,
											"end": 1039,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1006,
											"end": 1039,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1006,
											"end": 1039,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1006,
											"end": 1039,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1006,
											"end": 1039,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1006,
											"end": 1039,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1006,
											"end": 1039,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1006,
											"end": 1039,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1006,
											"end": 1039,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 1006,
											"end": 1039,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1006,
											"end": 1044,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 998,
											"end": 1085,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "37"
										},
										{
											"begin": 998,
											"end": 1085,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 998,
											"end": 1085,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 998,
											"end": 1085,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 998,
											"end": 1085,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 998,
											"end": 1085,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 998,
											"end": 1085,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 998,
											"end": 1085,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 998,
											"end": 1085,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 998,
											"end": 1085,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "38"
										},
										{
											"begin": 998,
											"end": 1085,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 998,
											"end": 1085,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "39"
										},
										{
											"begin": 998,
											"end": 1085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 998,
											"end": 1085,
											"name": "tag",
											"source": 14,
											"value": "38"
										},
										{
											"begin": 998,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 998,
											"end": 1085,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 998,
											"end": 1085,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 998,
											"end": 1085,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 998,
											"end": 1085,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 998,
											"end": 1085,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 998,
											"end": 1085,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 998,
											"end": 1085,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 998,
											"end": 1085,
											"name": "tag",
											"source": 14,
											"value": "37"
										},
										{
											"begin": 998,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1126,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1104,
											"end": 1126,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1126,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1126,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1126,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 1104,
											"end": 1126,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1126,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1126,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1126,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1104,
											"end": 1126,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1143,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1104,
											"end": 1143,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1143,
											"name": "PUSH",
											"source": 14,
											"value": "E985E9C5"
										},
										{
											"begin": 1144,
											"end": 1160,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1170,
											"end": 1174,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 1104,
											"end": 1176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "tag",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "STATICCALL",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "43"
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "tag",
											"source": 14,
											"value": "43"
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "45"
										},
										{
											"begin": 1104,
											"end": 1176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "tag",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 1104,
											"end": 1176,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1096,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "46"
										},
										{
											"begin": 1096,
											"end": 1222,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1096,
											"end": 1222,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1096,
											"end": 1222,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1096,
											"end": 1222,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1096,
											"end": 1222,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1096,
											"end": 1222,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1096,
											"end": 1222,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1096,
											"end": 1222,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1096,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "47"
										},
										{
											"begin": 1096,
											"end": 1222,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1096,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "48"
										},
										{
											"begin": 1096,
											"end": 1222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1096,
											"end": 1222,
											"name": "tag",
											"source": 14,
											"value": "47"
										},
										{
											"begin": 1096,
											"end": 1222,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1096,
											"end": 1222,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1096,
											"end": 1222,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1096,
											"end": 1222,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1096,
											"end": 1222,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1096,
											"end": 1222,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1096,
											"end": 1222,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1096,
											"end": 1222,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1096,
											"end": 1222,
											"name": "tag",
											"source": 14,
											"value": "46"
										},
										{
											"begin": 1096,
											"end": 1222,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1271,
											"end": 1277,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1235,
											"end": 1252,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 1235,
											"end": 1268,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1267,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1235,
											"end": 1268,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1235,
											"end": 1268,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1235,
											"end": 1268,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1235,
											"end": 1268,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1235,
											"end": 1268,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1235,
											"end": 1268,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1235,
											"end": 1268,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1235,
											"end": 1268,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1235,
											"end": 1268,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1235,
											"end": 1268,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1235,
											"end": 1268,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 1235,
											"end": 1277,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1235,
											"end": 1277,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1235,
											"end": 1277,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 1235,
											"end": 1277,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1312,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 1318,
											"end": 1332,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1333,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1333,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1333,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 1290,
											"end": 1333,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1333,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1333,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1333,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1333,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1333,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1333,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1333,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1333,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1333,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1333,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 1290,
											"end": 1333,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1333,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1333,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1333,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1290,
											"end": 1333,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1333,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1290,
											"end": 1333,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1290,
											"end": 1333,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1333,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1333,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1290,
											"end": 1333,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1333,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1333,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1333,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1333,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1333,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1333,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1333,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 634,
											"end": 1341,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 556,
											"end": 1341,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 556,
											"end": 1341,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 556,
											"end": 1341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 431,
											"end": 470,
											"name": "tag",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 431,
											"end": 470,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 431,
											"end": 470,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 431,
											"end": 470,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 431,
											"end": 470,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 431,
											"end": 470,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 431,
											"end": 470,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 431,
											"end": 470,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 431,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "50"
										},
										{
											"begin": 431,
											"end": 470,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 431,
											"end": 470,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 431,
											"end": 470,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 431,
											"end": 470,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 431,
											"end": 470,
											"name": "tag",
											"source": 14,
											"value": "50"
										},
										{
											"begin": 431,
											"end": 470,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 431,
											"end": 470,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 431,
											"end": 470,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 431,
											"end": 470,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 431,
											"end": 470,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 431,
											"end": 470,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 431,
											"end": 470,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 431,
											"end": 470,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 431,
											"end": 470,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 431,
											"end": 470,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 431,
											"end": 470,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 431,
											"end": 470,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 431,
											"end": 470,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 431,
											"end": 470,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 431,
											"end": 470,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 431,
											"end": 470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 129,
											"end": 174,
											"name": "tag",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 129,
											"end": 174,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 129,
											"end": 174,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 129,
											"end": 174,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 129,
											"end": 174,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 129,
											"end": 174,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 129,
											"end": 174,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 129,
											"end": 174,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 129,
											"end": 174,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 129,
											"end": 174,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 129,
											"end": 174,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 129,
											"end": 174,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 129,
											"end": 174,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 129,
											"end": 174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 15,
											"value": "53"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 15,
											"value": "55"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 15,
											"value": "56"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "87"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "55"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 15,
											"value": "87"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "88"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 15,
											"value": "88"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 15,
											"value": "57"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "90"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "56"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 15,
											"value": "90"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "92"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "93"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "53"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 15,
											"value": "93"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 15,
											"value": "92"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "94"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "57"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 15,
											"value": "94"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 15,
											"value": "58"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "96"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "55"
										},
										{
											"begin": 1112,
											"end": 1136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 15,
											"value": "96"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1025,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "tag",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1278,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "98"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "58"
										},
										{
											"begin": 1293,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "tag",
											"source": 15,
											"value": "98"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1149,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1377,
											"end": 1851,
											"name": "tag",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 1377,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1445,
											"end": 1451,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1453,
											"end": 1459,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1502,
											"end": 1504,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1490,
											"end": 1499,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1481,
											"end": 1488,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1477,
											"end": 1500,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1473,
											"end": 1505,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 1470,
											"end": 1589,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1470,
											"end": 1589,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 1470,
											"end": 1589,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1508,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "101"
										},
										{
											"begin": 1508,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "53"
										},
										{
											"begin": 1508,
											"end": 1587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1508,
											"end": 1587,
											"name": "tag",
											"source": 15,
											"value": "101"
										},
										{
											"begin": 1508,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1470,
											"end": 1589,
											"name": "tag",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 1470,
											"end": 1589,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1628,
											"end": 1629,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1653,
											"end": 1706,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "102"
										},
										{
											"begin": 1698,
											"end": 1705,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1689,
											"end": 1695,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1678,
											"end": 1687,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1674,
											"end": 1696,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1653,
											"end": 1706,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "57"
										},
										{
											"begin": 1653,
											"end": 1706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1653,
											"end": 1706,
											"name": "tag",
											"source": 15,
											"value": "102"
										},
										{
											"begin": 1653,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1643,
											"end": 1706,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1643,
											"end": 1706,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1599,
											"end": 1716,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1755,
											"end": 1757,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1781,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "103"
										},
										{
											"begin": 1826,
											"end": 1833,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1817,
											"end": 1823,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1806,
											"end": 1815,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1802,
											"end": 1824,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1781,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "57"
										},
										{
											"begin": 1781,
											"end": 1834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1781,
											"end": 1834,
											"name": "tag",
											"source": 15,
											"value": "103"
										},
										{
											"begin": 1781,
											"end": 1834,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1771,
											"end": 1834,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1771,
											"end": 1834,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1726,
											"end": 1844,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1377,
											"end": 1851,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1377,
											"end": 1851,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1377,
											"end": 1851,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1377,
											"end": 1851,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1377,
											"end": 1851,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1377,
											"end": 1851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1857,
											"end": 1983,
											"name": "tag",
											"source": 15,
											"value": "59"
										},
										{
											"begin": 1857,
											"end": 1983,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1894,
											"end": 1901,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1934,
											"end": 1976,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1927,
											"end": 1932,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1923,
											"end": 1977,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1912,
											"end": 1977,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1912,
											"end": 1977,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1857,
											"end": 1983,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1857,
											"end": 1983,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1857,
											"end": 1983,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1857,
											"end": 1983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1989,
											"end": 2049,
											"name": "tag",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 1989,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2017,
											"end": 2020,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2038,
											"end": 2043,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2031,
											"end": 2043,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2031,
											"end": 2043,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1989,
											"end": 2049,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1989,
											"end": 2049,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1989,
											"end": 2049,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1989,
											"end": 2049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2055,
											"end": 2197,
											"name": "tag",
											"source": 15,
											"value": "61"
										},
										{
											"begin": 2055,
											"end": 2197,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2105,
											"end": 2114,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2138,
											"end": 2191,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "107"
										},
										{
											"begin": 2156,
											"end": 2190,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "108"
										},
										{
											"begin": 2165,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "109"
										},
										{
											"begin": 2183,
											"end": 2188,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2165,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "59"
										},
										{
											"begin": 2165,
											"end": 2189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2165,
											"end": 2189,
											"name": "tag",
											"source": 15,
											"value": "109"
										},
										{
											"begin": 2165,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2156,
											"end": 2190,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 2156,
											"end": 2190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2156,
											"end": 2190,
											"name": "tag",
											"source": 15,
											"value": "108"
										},
										{
											"begin": 2156,
											"end": 2190,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2138,
											"end": 2191,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "59"
										},
										{
											"begin": 2138,
											"end": 2191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2138,
											"end": 2191,
											"name": "tag",
											"source": 15,
											"value": "107"
										},
										{
											"begin": 2138,
											"end": 2191,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2125,
											"end": 2191,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2125,
											"end": 2191,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2055,
											"end": 2197,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2055,
											"end": 2197,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2055,
											"end": 2197,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2055,
											"end": 2197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2203,
											"end": 2329,
											"name": "tag",
											"source": 15,
											"value": "62"
										},
										{
											"begin": 2203,
											"end": 2329,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2253,
											"end": 2262,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2286,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "111"
										},
										{
											"begin": 2317,
											"end": 2322,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2286,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "61"
										},
										{
											"begin": 2286,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2286,
											"end": 2323,
											"name": "tag",
											"source": 15,
											"value": "111"
										},
										{
											"begin": 2286,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2273,
											"end": 2323,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2273,
											"end": 2323,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2203,
											"end": 2329,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2203,
											"end": 2329,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2203,
											"end": 2329,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2203,
											"end": 2329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2335,
											"end": 2485,
											"name": "tag",
											"source": 15,
											"value": "63"
										},
										{
											"begin": 2335,
											"end": 2485,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2409,
											"end": 2418,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2442,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "113"
										},
										{
											"begin": 2473,
											"end": 2478,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2442,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "62"
										},
										{
											"begin": 2442,
											"end": 2479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2442,
											"end": 2479,
											"name": "tag",
											"source": 15,
											"value": "113"
										},
										{
											"begin": 2442,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2429,
											"end": 2479,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2429,
											"end": 2479,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2335,
											"end": 2485,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2335,
											"end": 2485,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2335,
											"end": 2485,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2335,
											"end": 2485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2491,
											"end": 2670,
											"name": "tag",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 2491,
											"end": 2670,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2602,
											"end": 2663,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "115"
										},
										{
											"begin": 2657,
											"end": 2662,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2602,
											"end": 2663,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "63"
										},
										{
											"begin": 2602,
											"end": 2663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2602,
											"end": 2663,
											"name": "tag",
											"source": 15,
											"value": "115"
										},
										{
											"begin": 2602,
											"end": 2663,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2597,
											"end": 2600,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2590,
											"end": 2664,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2491,
											"end": 2670,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2491,
											"end": 2670,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2491,
											"end": 2670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2676,
											"end": 2946,
											"name": "tag",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 2676,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2793,
											"end": 2797,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2831,
											"end": 2833,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2829,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2816,
											"end": 2834,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2808,
											"end": 2834,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2808,
											"end": 2834,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2844,
											"end": 2939,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "117"
										},
										{
											"begin": 2936,
											"end": 2937,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2925,
											"end": 2934,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2921,
											"end": 2938,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2912,
											"end": 2918,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2844,
											"end": 2939,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 2844,
											"end": 2939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2844,
											"end": 2939,
											"name": "tag",
											"source": 15,
											"value": "117"
										},
										{
											"begin": 2844,
											"end": 2939,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2676,
											"end": 2946,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2676,
											"end": 2946,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2676,
											"end": 2946,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2676,
											"end": 2946,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2676,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2952,
											"end": 3048,
											"name": "tag",
											"source": 15,
											"value": "65"
										},
										{
											"begin": 2952,
											"end": 3048,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2989,
											"end": 2996,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3042,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "119"
										},
										{
											"begin": 3036,
											"end": 3041,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3018,
											"end": 3042,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "59"
										},
										{
											"begin": 3018,
											"end": 3042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3018,
											"end": 3042,
											"name": "tag",
											"source": 15,
											"value": "119"
										},
										{
											"begin": 3018,
											"end": 3042,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3007,
											"end": 3042,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3007,
											"end": 3042,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2952,
											"end": 3048,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2952,
											"end": 3048,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2952,
											"end": 3048,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2952,
											"end": 3048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3054,
											"end": 3176,
											"name": "tag",
											"source": 15,
											"value": "66"
										},
										{
											"begin": 3054,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3127,
											"end": 3151,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "121"
										},
										{
											"begin": 3145,
											"end": 3150,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3127,
											"end": 3151,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "65"
										},
										{
											"begin": 3127,
											"end": 3151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3127,
											"end": 3151,
											"name": "tag",
											"source": 15,
											"value": "121"
										},
										{
											"begin": 3127,
											"end": 3151,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3120,
											"end": 3125,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3117,
											"end": 3152,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 3107,
											"end": 3170,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "122"
										},
										{
											"begin": 3107,
											"end": 3170,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3166,
											"end": 3167,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3163,
											"end": 3164,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3156,
											"end": 3168,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3107,
											"end": 3170,
											"name": "tag",
											"source": 15,
											"value": "122"
										},
										{
											"begin": 3107,
											"end": 3170,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3054,
											"end": 3176,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3054,
											"end": 3176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3325,
											"name": "tag",
											"source": 15,
											"value": "67"
										},
										{
											"begin": 3182,
											"end": 3325,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3239,
											"end": 3244,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3270,
											"end": 3276,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3264,
											"end": 3277,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 3255,
											"end": 3277,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3255,
											"end": 3277,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3286,
											"end": 3319,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "124"
										},
										{
											"begin": 3313,
											"end": 3318,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3286,
											"end": 3319,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "66"
										},
										{
											"begin": 3286,
											"end": 3319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3286,
											"end": 3319,
											"name": "tag",
											"source": 15,
											"value": "124"
										},
										{
											"begin": 3286,
											"end": 3319,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3325,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3325,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3325,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3325,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3331,
											"end": 3682,
											"name": "tag",
											"source": 15,
											"value": "30"
										},
										{
											"begin": 3331,
											"end": 3682,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3401,
											"end": 3407,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3450,
											"end": 3452,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3429,
											"end": 3436,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3425,
											"end": 3448,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3421,
											"end": 3453,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 3418,
											"end": 3537,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3418,
											"end": 3537,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "126"
										},
										{
											"begin": 3418,
											"end": 3537,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3456,
											"end": 3535,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "127"
										},
										{
											"begin": 3456,
											"end": 3535,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "53"
										},
										{
											"begin": 3456,
											"end": 3535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3456,
											"end": 3535,
											"name": "tag",
											"source": 15,
											"value": "127"
										},
										{
											"begin": 3456,
											"end": 3535,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3418,
											"end": 3537,
											"name": "tag",
											"source": 15,
											"value": "126"
										},
										{
											"begin": 3418,
											"end": 3537,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3576,
											"end": 3577,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3601,
											"end": 3665,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "128"
										},
										{
											"begin": 3657,
											"end": 3664,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3648,
											"end": 3654,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3637,
											"end": 3646,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3633,
											"end": 3655,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3601,
											"end": 3665,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "67"
										},
										{
											"begin": 3601,
											"end": 3665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3601,
											"end": 3665,
											"name": "tag",
											"source": 15,
											"value": "128"
										},
										{
											"begin": 3601,
											"end": 3665,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3591,
											"end": 3665,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3591,
											"end": 3665,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3547,
											"end": 3675,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3331,
											"end": 3682,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3331,
											"end": 3682,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3331,
											"end": 3682,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3331,
											"end": 3682,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3331,
											"end": 3682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3688,
											"end": 3857,
											"name": "tag",
											"source": 15,
											"value": "68"
										},
										{
											"begin": 3688,
											"end": 3857,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3772,
											"end": 3783,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3806,
											"end": 3812,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3801,
											"end": 3804,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3794,
											"end": 3813,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3846,
											"end": 3850,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3841,
											"end": 3844,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3837,
											"end": 3851,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3822,
											"end": 3851,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3822,
											"end": 3851,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3688,
											"end": 3857,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3688,
											"end": 3857,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3688,
											"end": 3857,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3688,
											"end": 3857,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3688,
											"end": 3857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3863,
											"end": 4083,
											"name": "tag",
											"source": 15,
											"value": "69"
										},
										{
											"begin": 3863,
											"end": 4083,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4003,
											"end": 4037,
											"name": "PUSH",
											"source": 15,
											"value": "43616C6C6572206973206E6F7420616E696D616C20746F6B656E206F6E776572"
										},
										{
											"begin": 3999,
											"end": 4000,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3991,
											"end": 3997,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3987,
											"end": 4001,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3980,
											"end": 4038,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4072,
											"end": 4075,
											"name": "PUSH",
											"source": 15,
											"value": "2E00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4067,
											"end": 4069,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4059,
											"end": 4065,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4055,
											"end": 4070,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4048,
											"end": 4076,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3863,
											"end": 4083,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3863,
											"end": 4083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4089,
											"end": 4455,
											"name": "tag",
											"source": 15,
											"value": "70"
										},
										{
											"begin": 4089,
											"end": 4455,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4231,
											"end": 4234,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4252,
											"end": 4319,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "132"
										},
										{
											"begin": 4316,
											"end": 4318,
											"name": "PUSH",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 4311,
											"end": 4314,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4252,
											"end": 4319,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "68"
										},
										{
											"begin": 4252,
											"end": 4319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4252,
											"end": 4319,
											"name": "tag",
											"source": 15,
											"value": "132"
										},
										{
											"begin": 4252,
											"end": 4319,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4245,
											"end": 4319,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4245,
											"end": 4319,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4328,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "133"
										},
										{
											"begin": 4417,
											"end": 4420,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4328,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "69"
										},
										{
											"begin": 4328,
											"end": 4421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4328,
											"end": 4421,
											"name": "tag",
											"source": 15,
											"value": "133"
										},
										{
											"begin": 4328,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4446,
											"end": 4448,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4441,
											"end": 4444,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4437,
											"end": 4449,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4430,
											"end": 4449,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4430,
											"end": 4449,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4089,
											"end": 4455,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4089,
											"end": 4455,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4089,
											"end": 4455,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4089,
											"end": 4455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4461,
											"end": 4880,
											"name": "tag",
											"source": 15,
											"value": "33"
										},
										{
											"begin": 4461,
											"end": 4880,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4627,
											"end": 4631,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4665,
											"end": 4667,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4654,
											"end": 4663,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4650,
											"end": 4668,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4642,
											"end": 4668,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4642,
											"end": 4668,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4714,
											"end": 4723,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4708,
											"end": 4712,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4704,
											"end": 4724,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4700,
											"end": 4701,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4689,
											"end": 4698,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4685,
											"end": 4702,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4678,
											"end": 4725,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4742,
											"end": 4873,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "135"
										},
										{
											"begin": 4868,
											"end": 4872,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4742,
											"end": 4873,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "70"
										},
										{
											"begin": 4742,
											"end": 4873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4742,
											"end": 4873,
											"name": "tag",
											"source": 15,
											"value": "135"
										},
										{
											"begin": 4742,
											"end": 4873,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4734,
											"end": 4873,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4734,
											"end": 4873,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4461,
											"end": 4880,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4461,
											"end": 4880,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4461,
											"end": 4880,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4461,
											"end": 4880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4886,
											"end": 5059,
											"name": "tag",
											"source": 15,
											"value": "71"
										},
										{
											"begin": 4886,
											"end": 5059,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5026,
											"end": 5051,
											"name": "PUSH",
											"source": 15,
											"value": "5072696365206973207A65726F206F72206C6F7765722E000000000000000000"
										},
										{
											"begin": 5022,
											"end": 5023,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5014,
											"end": 5020,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5010,
											"end": 5024,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5003,
											"end": 5052,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4886,
											"end": 5059,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4886,
											"end": 5059,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5065,
											"end": 5431,
											"name": "tag",
											"source": 15,
											"value": "72"
										},
										{
											"begin": 5065,
											"end": 5431,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5207,
											"end": 5210,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5228,
											"end": 5295,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "138"
										},
										{
											"begin": 5292,
											"end": 5294,
											"name": "PUSH",
											"source": 15,
											"value": "17"
										},
										{
											"begin": 5287,
											"end": 5290,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5228,
											"end": 5295,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "68"
										},
										{
											"begin": 5228,
											"end": 5295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5228,
											"end": 5295,
											"name": "tag",
											"source": 15,
											"value": "138"
										},
										{
											"begin": 5228,
											"end": 5295,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5221,
											"end": 5295,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5221,
											"end": 5295,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5304,
											"end": 5397,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "139"
										},
										{
											"begin": 5393,
											"end": 5396,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5304,
											"end": 5397,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "71"
										},
										{
											"begin": 5304,
											"end": 5397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5304,
											"end": 5397,
											"name": "tag",
											"source": 15,
											"value": "139"
										},
										{
											"begin": 5304,
											"end": 5397,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5422,
											"end": 5424,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5417,
											"end": 5420,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5413,
											"end": 5425,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5406,
											"end": 5425,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5406,
											"end": 5425,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5065,
											"end": 5431,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5065,
											"end": 5431,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5065,
											"end": 5431,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5065,
											"end": 5431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5437,
											"end": 5856,
											"name": "tag",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 5437,
											"end": 5856,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5603,
											"end": 5607,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5641,
											"end": 5643,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5630,
											"end": 5639,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5626,
											"end": 5644,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5618,
											"end": 5644,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5618,
											"end": 5644,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5690,
											"end": 5699,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5684,
											"end": 5688,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5680,
											"end": 5700,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 5676,
											"end": 5677,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5665,
											"end": 5674,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5661,
											"end": 5678,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5654,
											"end": 5701,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5718,
											"end": 5849,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "141"
										},
										{
											"begin": 5844,
											"end": 5848,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5718,
											"end": 5849,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "72"
										},
										{
											"begin": 5718,
											"end": 5849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5718,
											"end": 5849,
											"name": "tag",
											"source": 15,
											"value": "141"
										},
										{
											"begin": 5718,
											"end": 5849,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5710,
											"end": 5849,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5710,
											"end": 5849,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5437,
											"end": 5856,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5437,
											"end": 5856,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5437,
											"end": 5856,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5437,
											"end": 5856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5862,
											"end": 6085,
											"name": "tag",
											"source": 15,
											"value": "73"
										},
										{
											"begin": 5862,
											"end": 6085,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6002,
											"end": 6036,
											"name": "PUSH",
											"source": 15,
											"value": "5468697320616E696D616C546F6B656E20697320616C7265616479206F6E2073"
										},
										{
											"begin": 5998,
											"end": 5999,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5990,
											"end": 5996,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5986,
											"end": 6000,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5979,
											"end": 6037,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6071,
											"end": 6077,
											"name": "PUSH",
											"source": 15,
											"value": "616C652E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6066,
											"end": 6068,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6058,
											"end": 6064,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6054,
											"end": 6069,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6047,
											"end": 6078,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5862,
											"end": 6085,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5862,
											"end": 6085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6091,
											"end": 6457,
											"name": "tag",
											"source": 15,
											"value": "74"
										},
										{
											"begin": 6091,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6233,
											"end": 6236,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6254,
											"end": 6321,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "144"
										},
										{
											"begin": 6318,
											"end": 6320,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 6313,
											"end": 6316,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6254,
											"end": 6321,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "68"
										},
										{
											"begin": 6254,
											"end": 6321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6254,
											"end": 6321,
											"name": "tag",
											"source": 15,
											"value": "144"
										},
										{
											"begin": 6254,
											"end": 6321,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6247,
											"end": 6321,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6247,
											"end": 6321,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6330,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "145"
										},
										{
											"begin": 6419,
											"end": 6422,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6330,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "73"
										},
										{
											"begin": 6330,
											"end": 6423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6330,
											"end": 6423,
											"name": "tag",
											"source": 15,
											"value": "145"
										},
										{
											"begin": 6330,
											"end": 6423,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6448,
											"end": 6450,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6443,
											"end": 6446,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6439,
											"end": 6451,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6432,
											"end": 6451,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6432,
											"end": 6451,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6091,
											"end": 6457,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6091,
											"end": 6457,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6091,
											"end": 6457,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6091,
											"end": 6457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6463,
											"end": 6882,
											"name": "tag",
											"source": 15,
											"value": "39"
										},
										{
											"begin": 6463,
											"end": 6882,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6629,
											"end": 6633,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6667,
											"end": 6669,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6656,
											"end": 6665,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6652,
											"end": 6670,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6644,
											"end": 6670,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6644,
											"end": 6670,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6716,
											"end": 6725,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6710,
											"end": 6714,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6706,
											"end": 6726,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 6702,
											"end": 6703,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6691,
											"end": 6700,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6687,
											"end": 6704,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6680,
											"end": 6727,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6744,
											"end": 6875,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "147"
										},
										{
											"begin": 6870,
											"end": 6874,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6744,
											"end": 6875,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "74"
										},
										{
											"begin": 6744,
											"end": 6875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6744,
											"end": 6875,
											"name": "tag",
											"source": 15,
											"value": "147"
										},
										{
											"begin": 6744,
											"end": 6875,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6736,
											"end": 6875,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6736,
											"end": 6875,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6463,
											"end": 6882,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6463,
											"end": 6882,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6463,
											"end": 6882,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6463,
											"end": 6882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6888,
											"end": 7006,
											"name": "tag",
											"source": 15,
											"value": "75"
										},
										{
											"begin": 6888,
											"end": 7006,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6975,
											"end": 6999,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "149"
										},
										{
											"begin": 6993,
											"end": 6998,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6975,
											"end": 6999,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "65"
										},
										{
											"begin": 6975,
											"end": 6999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6975,
											"end": 6999,
											"name": "tag",
											"source": 15,
											"value": "149"
										},
										{
											"begin": 6975,
											"end": 6999,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6970,
											"end": 6973,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6963,
											"end": 7000,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6888,
											"end": 7006,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6888,
											"end": 7006,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6888,
											"end": 7006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7012,
											"end": 7344,
											"name": "tag",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 7012,
											"end": 7344,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7133,
											"end": 7137,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7171,
											"end": 7173,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 7160,
											"end": 7169,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7156,
											"end": 7174,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7148,
											"end": 7174,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7148,
											"end": 7174,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7184,
											"end": 7255,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "151"
										},
										{
											"begin": 7252,
											"end": 7253,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7241,
											"end": 7250,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7237,
											"end": 7254,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7228,
											"end": 7234,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 7184,
											"end": 7255,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "75"
										},
										{
											"begin": 7184,
											"end": 7255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7184,
											"end": 7255,
											"name": "tag",
											"source": 15,
											"value": "151"
										},
										{
											"begin": 7184,
											"end": 7255,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7265,
											"end": 7337,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "152"
										},
										{
											"begin": 7333,
											"end": 7335,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7322,
											"end": 7331,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7318,
											"end": 7336,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7309,
											"end": 7315,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7265,
											"end": 7337,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "75"
										},
										{
											"begin": 7265,
											"end": 7337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7265,
											"end": 7337,
											"name": "tag",
											"source": 15,
											"value": "152"
										},
										{
											"begin": 7265,
											"end": 7337,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7012,
											"end": 7344,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 7012,
											"end": 7344,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7012,
											"end": 7344,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7012,
											"end": 7344,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7012,
											"end": 7344,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7012,
											"end": 7344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7350,
											"end": 7440,
											"name": "tag",
											"source": 15,
											"value": "76"
										},
										{
											"begin": 7350,
											"end": 7440,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7384,
											"end": 7391,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7427,
											"end": 7432,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7420,
											"end": 7433,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7413,
											"end": 7434,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7402,
											"end": 7434,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7402,
											"end": 7434,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7350,
											"end": 7440,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7350,
											"end": 7440,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7350,
											"end": 7440,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7350,
											"end": 7440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7446,
											"end": 7562,
											"name": "tag",
											"source": 15,
											"value": "77"
										},
										{
											"begin": 7446,
											"end": 7562,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7516,
											"end": 7537,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "155"
										},
										{
											"begin": 7531,
											"end": 7536,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7516,
											"end": 7537,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "76"
										},
										{
											"begin": 7516,
											"end": 7537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7516,
											"end": 7537,
											"name": "tag",
											"source": 15,
											"value": "155"
										},
										{
											"begin": 7516,
											"end": 7537,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7509,
											"end": 7514,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7506,
											"end": 7538,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 7496,
											"end": 7556,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "156"
										},
										{
											"begin": 7496,
											"end": 7556,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7552,
											"end": 7553,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7549,
											"end": 7550,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7542,
											"end": 7554,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7496,
											"end": 7556,
											"name": "tag",
											"source": 15,
											"value": "156"
										},
										{
											"begin": 7496,
											"end": 7556,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7446,
											"end": 7562,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7446,
											"end": 7562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7568,
											"end": 7705,
											"name": "tag",
											"source": 15,
											"value": "78"
										},
										{
											"begin": 7568,
											"end": 7705,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7622,
											"end": 7627,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7653,
											"end": 7659,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7647,
											"end": 7660,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 7638,
											"end": 7660,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7638,
											"end": 7660,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7669,
											"end": 7699,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "158"
										},
										{
											"begin": 7693,
											"end": 7698,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7669,
											"end": 7699,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "77"
										},
										{
											"begin": 7669,
											"end": 7699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7669,
											"end": 7699,
											"name": "tag",
											"source": 15,
											"value": "158"
										},
										{
											"begin": 7669,
											"end": 7699,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7568,
											"end": 7705,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7568,
											"end": 7705,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7568,
											"end": 7705,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7568,
											"end": 7705,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7568,
											"end": 7705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7711,
											"end": 8056,
											"name": "tag",
											"source": 15,
											"value": "45"
										},
										{
											"begin": 7711,
											"end": 8056,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7778,
											"end": 7784,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7827,
											"end": 7829,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7815,
											"end": 7824,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7806,
											"end": 7813,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7802,
											"end": 7825,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 7798,
											"end": 7830,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 7795,
											"end": 7914,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7795,
											"end": 7914,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "160"
										},
										{
											"begin": 7795,
											"end": 7914,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7833,
											"end": 7912,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "161"
										},
										{
											"begin": 7833,
											"end": 7912,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "53"
										},
										{
											"begin": 7833,
											"end": 7912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7833,
											"end": 7912,
											"name": "tag",
											"source": 15,
											"value": "161"
										},
										{
											"begin": 7833,
											"end": 7912,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7795,
											"end": 7914,
											"name": "tag",
											"source": 15,
											"value": "160"
										},
										{
											"begin": 7795,
											"end": 7914,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7953,
											"end": 7954,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7978,
											"end": 8039,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "162"
										},
										{
											"begin": 8031,
											"end": 8038,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8022,
											"end": 8028,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8011,
											"end": 8020,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 8007,
											"end": 8029,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7978,
											"end": 8039,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "78"
										},
										{
											"begin": 7978,
											"end": 8039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7978,
											"end": 8039,
											"name": "tag",
											"source": 15,
											"value": "162"
										},
										{
											"begin": 7978,
											"end": 8039,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7968,
											"end": 8039,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7968,
											"end": 8039,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7924,
											"end": 8049,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7711,
											"end": 8056,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7711,
											"end": 8056,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7711,
											"end": 8056,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7711,
											"end": 8056,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7711,
											"end": 8056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8062,
											"end": 8290,
											"name": "tag",
											"source": 15,
											"value": "79"
										},
										{
											"begin": 8062,
											"end": 8290,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8202,
											"end": 8236,
											"name": "PUSH",
											"source": 15,
											"value": "416E696D616C20746F6B656E206F776E657220646964206E6F7420617070726F"
										},
										{
											"begin": 8198,
											"end": 8199,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8190,
											"end": 8196,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8186,
											"end": 8200,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8179,
											"end": 8237,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8271,
											"end": 8282,
											"name": "PUSH",
											"source": 15,
											"value": "766520746F6C656E2E0000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8266,
											"end": 8268,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8258,
											"end": 8264,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8254,
											"end": 8269,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8247,
											"end": 8283,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8062,
											"end": 8290,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8062,
											"end": 8290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8296,
											"end": 8662,
											"name": "tag",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 8296,
											"end": 8662,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8438,
											"end": 8441,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8459,
											"end": 8526,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "165"
										},
										{
											"begin": 8523,
											"end": 8525,
											"name": "PUSH",
											"source": 15,
											"value": "29"
										},
										{
											"begin": 8518,
											"end": 8521,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8459,
											"end": 8526,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "68"
										},
										{
											"begin": 8459,
											"end": 8526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8459,
											"end": 8526,
											"name": "tag",
											"source": 15,
											"value": "165"
										},
										{
											"begin": 8459,
											"end": 8526,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8452,
											"end": 8526,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8452,
											"end": 8526,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8535,
											"end": 8628,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "166"
										},
										{
											"begin": 8624,
											"end": 8627,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8535,
											"end": 8628,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "79"
										},
										{
											"begin": 8535,
											"end": 8628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8535,
											"end": 8628,
											"name": "tag",
											"source": 15,
											"value": "166"
										},
										{
											"begin": 8535,
											"end": 8628,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8653,
											"end": 8655,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 8648,
											"end": 8651,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8644,
											"end": 8656,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8637,
											"end": 8656,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8637,
											"end": 8656,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8296,
											"end": 8662,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8296,
											"end": 8662,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8296,
											"end": 8662,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8296,
											"end": 8662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8668,
											"end": 9087,
											"name": "tag",
											"source": 15,
											"value": "48"
										},
										{
											"begin": 8668,
											"end": 9087,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8834,
											"end": 8838,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8872,
											"end": 8874,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8861,
											"end": 8870,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8857,
											"end": 8875,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8849,
											"end": 8875,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8849,
											"end": 8875,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8921,
											"end": 8930,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8915,
											"end": 8919,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8911,
											"end": 8931,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 8907,
											"end": 8908,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8896,
											"end": 8905,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8892,
											"end": 8909,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8885,
											"end": 8932,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8949,
											"end": 9080,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "168"
										},
										{
											"begin": 9075,
											"end": 9079,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8949,
											"end": 9080,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 8949,
											"end": 9080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8949,
											"end": 9080,
											"name": "tag",
											"source": 15,
											"value": "168"
										},
										{
											"begin": 8949,
											"end": 9080,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8941,
											"end": 9080,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8941,
											"end": 9080,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8668,
											"end": 9087,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8668,
											"end": 9087,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8668,
											"end": 9087,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8668,
											"end": 9087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/MintAnimalToken.sol",
								"contracts/SaleAnimalToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"animalTokenPrices(uint256)": "2dd7d12f",
							"mintAnimalTokenAddress()": "c6ffd54e",
							"onSaleAnimalTokenArray(uint256)": "4d1d7d5f",
							"setForSaleAnimalToken(uint256,uint256)": "498b520e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_mintAnimalTolenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"animalTokenPrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintAnimalTokenAddress\",\"outputs\":[{\"internalType\":\"contract MintAnimalToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"onSaleAnimalTokenArray\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_animalTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setForSaleAnimalToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SaleAnimalToken.sol\":\"SaleAnimalToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x36797469c391ea5ba27408e6ca8adf0824ba6f3adea9c139be18bd6f63232c16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0dcf8bb9f7c29d678de34a051b4a71cf27ae56464678696c6913cbbfc75d548a\",\"dweb:/ipfs/QmSfdgU9V2dXh9oajUxgF9hU1aPnpd1PEMtcchoANsCNmW\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x3d6954a93ac198a2ffa384fa58ccf18e7e235263e051a394328002eff4e073de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f58c799bd939d3951c94893e83ef86acd56989d1d7db7f9d180c515e29e28ff\",\"dweb:/ipfs/QmTgAxHAAys4kq9ZfU9YB24MWYoHLGAKSxnYUigPFrNW7g\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/MintAnimalToken.sol\":{\"keccak256\":\"0xc09ef542ce42bef54990cdec5490758496e7ffeae0953059eab9df43ce6c58c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://97b1e6e861b40954863d1cd420cbf58dfb279d88d0aea738c102bccf6ca65520\",\"dweb:/ipfs/QmQyJ8B9TCGvJmNmyD51new2iqGCaDpKvy1zwjMG41n6Za\"]},\"contracts/SaleAnimalToken.sol\":{\"keccak256\":\"0xa1537c7b643e61339cfebb624e020c9e7f5d6c32975bd7ee029d5e0243ebb7b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0bcd768309c532cb7220bc84c72fd7c494be867b3251931b21cf4205c96b9f5a\",\"dweb:/ipfs/QmRfBj3jcovXPG2i1QWD6bQDZPFhccV39ppofWLyMJ5c1j\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3271,
								"contract": "contracts/SaleAnimalToken.sol:SaleAnimalToken",
								"label": "mintAnimalTokenAddress",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(MintAnimalToken)3265"
							},
							{
								"astId": 3287,
								"contract": "contracts/SaleAnimalToken.sol:SaleAnimalToken",
								"label": "animalTokenPrices",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 3290,
								"contract": "contracts/SaleAnimalToken.sol:SaleAnimalToken",
								"label": "onSaleAnimalTokenArray",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_uint256)dyn_storage"
							}
						],
						"types": {
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_contract(MintAnimalToken)3265": {
								"encoding": "inplace",
								"label": "contract MintAnimalToken",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "685:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:0"
									},
									"src": "621:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "889:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:0"
									},
									"src": "864:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1102:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:0"
									},
									"src": "1075:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1526:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:0"
									},
									"src": "1476:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1773:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:0"
									},
									"src": "1746:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:0"
									},
									"src": "1997:43:0"
								}
							],
							"scope": 137,
							"src": "278:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:0"
									},
									"src": "2440:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:0"
									},
									"src": "2623:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3012:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3029:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:0"
									},
									"src": "2969:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:0"
									},
									"src": "3207:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:0"
									},
									"src": "3419:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3756:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:0"
									},
									"src": "3723:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:0"
									},
									"src": "3976:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4258:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:0"
									},
									"src": "4230:46:0"
								}
							],
							"scope": 137,
							"src": "2186:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:0"
									},
									"src": "4821:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:0"
									},
									"src": "5083:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:0"
									},
									"src": "5296:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5645:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5663:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:0"
									},
									"src": "5610:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5892:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:0"
									},
									"src": "5863:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6147:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:0"
									},
									"src": "6118:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6507:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:0"
									},
									"src": "6456:73:0"
								}
							],
							"scope": 137,
							"src": "4424:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1754
						],
						"ERC165": [
							2033
						],
						"ERC721": [
							1145
						],
						"IERC165": [
							2045
						],
						"IERC721": [
							1262
						],
						"IERC721Errors": [
							89
						],
						"IERC721Metadata": [
							1724
						],
						"IERC721Receiver": [
							1280
						],
						"Strings": [
							2009
						]
					},
					"id": 1146,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 1263,
							"src": "133:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1262,
										"src": "141:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 1281,
							"src": "172:54:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1280,
										"src": "180:15:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 1725,
							"src": "227:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1724,
										"src": "235:15:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 1755,
							"src": "293:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1754,
										"src": "301:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 148,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 2010,
							"src": "342:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 147,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2009,
										"src": "350:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 2034,
							"src": "391:69:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 149,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2045,
										"src": "399:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 150,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2033,
										"src": "408:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 137,
							"src": "461:66:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 89,
										"src": "469:13:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "Context",
										"nameLocations": [
											"804:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1754,
										"src": "804:7:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "804:7:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "ERC165",
										"nameLocations": [
											"813:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2033,
										"src": "813:6:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "813:6:1"
								},
								{
									"baseName": {
										"id": 159,
										"name": "IERC721",
										"nameLocations": [
											"821:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1262,
										"src": "821:7:1"
									},
									"id": 160,
									"nodeType": "InheritanceSpecifier",
									"src": "821:7:1"
								},
								{
									"baseName": {
										"id": 161,
										"name": "IERC721Metadata",
										"nameLocations": [
											"830:15:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1724,
										"src": "830:15:1"
									},
									"id": 162,
									"nodeType": "InheritanceSpecifier",
									"src": "830:15:1"
								},
								{
									"baseName": {
										"id": 163,
										"name": "IERC721Errors",
										"nameLocations": [
											"847:13:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 89,
										"src": "847:13:1"
									},
									"id": 164,
									"nodeType": "InheritanceSpecifier",
									"src": "847:13:1"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "529:246:1",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1145,
							"linearizedBaseContracts": [
								1145,
								89,
								1724,
								1262,
								2033,
								2045,
								1754
							],
							"name": "ERC721",
							"nameLocation": "794:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 167,
									"libraryName": {
										"id": 165,
										"name": "Strings",
										"nameLocations": [
											"873:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2009,
										"src": "873:7:1"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:1",
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "932:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "917:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "917:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "979:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "964:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "964:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 175,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1037:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "993:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 174,
										"keyName": "tokenId",
										"keyNameLocation": "1009:7:1",
										"keyType": {
											"id": 172,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1001:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "993:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 173,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1020:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 179,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1093:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "1051:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 178,
										"keyName": "owner",
										"keyNameLocation": "1067:5:1",
										"keyType": {
											"id": 176,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1051:33:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 177,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 183,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1153:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "1109:59:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 182,
										"keyName": "tokenId",
										"keyNameLocation": "1125:7:1",
										"keyType": {
											"id": 180,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1117:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1109:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 181,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1136:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 189,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1243:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "1175:86:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 188,
										"keyName": "owner",
										"keyNameLocation": "1191:5:1",
										"keyType": {
											"id": 184,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1183:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1175:59:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 187,
											"keyName": "operator",
											"keyNameLocation": "1216:8:1",
											"keyType": {
												"id": 185,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1208:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1200:33:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 186,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1228:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "1437:57:1",
										"statements": [
											{
												"expression": {
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 197,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1447:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 198,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "1455:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1447:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 200,
												"nodeType": "ExpressionStatement",
												"src": "1447:13:1"
											},
											{
												"expression": {
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 201,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1470:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 202,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "1480:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1470:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 204,
												"nodeType": "ExpressionStatement",
												"src": "1470:17:1"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "1268:108:1",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 206,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1407:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "1393:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1428:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "1414:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 193,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1414:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:44:1"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:1"
									},
									"scope": 1145,
									"src": "1381:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2032,
										2044
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "1669:192:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 229,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 217,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "1698:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 219,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1262,
																			"src": "1718:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1262_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1262_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 218,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1713:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1713:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1262",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1727:11:1",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1713:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1698:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 223,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "1754:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 225,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1724,
																			"src": "1774:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1724_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1724_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 224,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1769:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 226,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1769:21:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1724",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 227,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1791:11:1",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1769:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1754:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1698:104:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 232,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "1842:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 230,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1818:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1145_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1824:17:1",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2032,
															"src": "1818:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1818:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1698:156:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 216,
												"id": 235,
												"nodeType": "Return",
												"src": "1679:175:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "1500:56:1",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1570:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 213,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 211,
												"name": "ERC165",
												"nameLocations": [
													"1637:6:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2033,
												"src": "1637:6:1"
											},
											{
												"id": 212,
												"name": "IERC165",
												"nameLocations": [
													"1645:7:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2045,
												"src": "1645:7:1"
											}
										],
										"src": "1628:25:1"
									},
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1595:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "1588:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 208,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:20:1"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "1663:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 214,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:1"
									},
									"scope": 1145,
									"src": "1561:300:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1187
									],
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "1992:136:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 245,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "2006:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2023:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2015:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 246,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2015:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 249,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2015:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2006:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 259,
												"nodeType": "IfStatement",
												"src": "2002:87:1",
												"trueBody": {
													"id": 258,
													"nodeType": "Block",
													"src": "2027:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 254,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2075:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 253,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2067:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 252,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2067:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2067:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 251,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "2048:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2048:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 257,
															"nodeType": "RevertStatement",
															"src": "2041:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 260,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "2105:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 262,
													"indexExpression": {
														"id": 261,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "2115:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2105:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 244,
												"id": 263,
												"nodeType": "Return",
												"src": "2098:23:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "1867:48:1",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1929:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1947:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1939:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:15:1"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1983:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:9:1"
									},
									"scope": 1145,
									"src": "1920:208:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1195
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "2257:46:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 274,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 268,
															"src": "2288:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 273,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "2274:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 272,
												"id": 276,
												"nodeType": "Return",
												"src": "2267:29:1"
											}
										]
									},
									"documentation": {
										"id": 266,
										"nodeType": "StructuredDocumentation",
										"src": "2134:46:1",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2194:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2210:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "2202:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:17:1"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "2248:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:9:1"
									},
									"scope": 1145,
									"src": "2185:118:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1709
									],
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "2425:29:1",
										"statements": [
											{
												"expression": {
													"id": 284,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "2442:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 283,
												"id": 285,
												"nodeType": "Return",
												"src": "2435:12:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "2309:51:1",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2374:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2378:2:1"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "2410:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 281,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2410:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:15:1"
									},
									"scope": 1145,
									"src": "2365:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1715
									],
									"body": {
										"id": 295,
										"nodeType": "Block",
										"src": "2580:31:1",
										"statements": [
											{
												"expression": {
													"id": 293,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2597:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 292,
												"id": 294,
												"nodeType": "Return",
												"src": "2590:14:1"
											}
										]
									},
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "2460:53:1",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2527:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:1"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "2565:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 290,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2565:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:15:1"
									},
									"scope": 1145,
									"src": "2518:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1723
									],
									"body": {
										"id": 331,
										"nodeType": "Block",
										"src": "2756:176:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 305,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "2780:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 304,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "2766:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 307,
												"nodeType": "ExpressionStatement",
												"src": "2766:22:1"
											},
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2813:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 331,
														"src": "2799:21:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 308,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2799:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "2823:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:10:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2799:34:1"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 315,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 309,
																		"src": "2856:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2850:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 313,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2850:5:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2850:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2865:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2850:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2874:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2850:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 328,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2850:75:1",
													"trueExpression": {
														"arguments": [
															{
																"id": 323,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "2892:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 324,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 299,
																		"src": "2901:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2909:8:1",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1822,
																	"src": "2901:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2901:18:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2878:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 320,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2878:6:1",
																	"typeDescriptions": {}
																}
															},
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2885:6:1",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2878:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2878:42:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 303,
												"id": 330,
												"nodeType": "Return",
												"src": "2843:82:1"
											}
										]
									},
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "2617:55:1",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2686:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2703:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "2695:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:17:1"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "2741:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 301,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2741:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:15:1"
									},
									"scope": 1145,
									"src": "2677:255:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "3240:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3257:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 337,
												"id": 339,
												"nodeType": "Return",
												"src": "3250:9:1"
											}
										]
									},
									"documentation": {
										"id": 333,
										"nodeType": "StructuredDocumentation",
										"src": "2938:231:1",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3183:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:2:1"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "3225:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 335,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3225:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:15:1"
									},
									"scope": 1145,
									"src": "3174:92:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1235
									],
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "3384:52:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 350,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "3403:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 351,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "3407:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 352,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1736,
																"src": "3416:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3416:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 349,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															948,
															1014
														],
														"referencedDeclaration": 948,
														"src": "3394:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 355,
												"nodeType": "ExpressionStatement",
												"src": "3394:35:1"
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "3272:46:1",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3332:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3348:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "3340:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3360:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "3352:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:29:1"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3384:0:1"
									},
									"scope": 1145,
									"src": "3323:113:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1251
									],
									"body": {
										"id": 373,
										"nodeType": "Block",
										"src": "3573:78:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 366,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "3597:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 365,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "3583:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "3583:22:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 370,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "3636:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 369,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "3623:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3623:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 364,
												"id": 372,
												"nodeType": "Return",
												"src": "3616:28:1"
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "3442:50:1",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3506:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "3518:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:17:1"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "3564:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:9:1"
									},
									"scope": 1145,
									"src": "3497:154:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1243
									],
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "3793:69:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 383,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1736,
																"src": "3822:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3822:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 385,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "3836:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 386,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "3846:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 382,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1051,
														"src": "3803:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3803:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "3803:52:1"
											}
										]
									},
									"documentation": {
										"id": 375,
										"nodeType": "StructuredDocumentation",
										"src": "3657:56:1",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3727:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3753:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3745:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3763:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 378,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3763:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:33:1"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:0:1"
									},
									"scope": 1145,
									"src": "3718:144:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1261
									],
									"body": {
										"id": 406,
										"nodeType": "Block",
										"src": "4022:59:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 400,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "4039:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 402,
														"indexExpression": {
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "4058:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4039:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 404,
													"indexExpression": {
														"id": 403,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 395,
														"src": "4065:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4039:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 399,
												"id": 405,
												"nodeType": "Return",
												"src": "4032:42:1"
											}
										]
									},
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "3868:55:1",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3937:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3962:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "3954:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3977:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "3969:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:33:1"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "4016:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 397,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4016:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:6:1"
									},
									"scope": 1145,
									"src": "3928:153:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1227
									],
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "4223:498:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 417,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 412,
														"src": "4237:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4251:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4243:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 418,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4243:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 421,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4243:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4237:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 431,
												"nodeType": "IfStatement",
												"src": "4233:87:1",
												"trueBody": {
													"id": 430,
													"nodeType": "Block",
													"src": "4255:65:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 426,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4306:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 425,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4298:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 424,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4298:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4298:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 423,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "4276:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4276:33:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 429,
															"nodeType": "RevertStatement",
															"src": "4269:40:1"
														}
													]
												}
											},
											{
												"assignments": [
													433
												],
												"declarations": [
													{
														"constant": false,
														"id": 433,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4546:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 452,
														"src": "4538:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 432,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [
														{
															"id": 435,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "4570:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 436,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "4574:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 437,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1736,
																"src": "4583:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4583:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 434,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "4562:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4562:34:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:58:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 441,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 433,
														"src": "4610:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 442,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 410,
														"src": "4627:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4610:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 451,
												"nodeType": "IfStatement",
												"src": "4606:109:1",
												"trueBody": {
													"id": 450,
													"nodeType": "Block",
													"src": "4633:82:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 445,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 410,
																		"src": "4675:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 446,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 414,
																		"src": "4681:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 447,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 433,
																		"src": "4690:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 444,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 61,
																	"src": "4654:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$",
																		"typeString": "function (address,uint256,address) pure returns (error)"
																	}
																},
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4654:50:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 449,
															"nodeType": "RevertStatement",
															"src": "4647:57:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 408,
										"nodeType": "StructuredDocumentation",
										"src": "4087:51:1",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4152:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4173:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "4165:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4187:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "4179:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4199:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "4191:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4164:43:1"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4223:0:1"
									},
									"scope": 1145,
									"src": "4143:578:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1217
									],
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "4863:56:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 464,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "4890:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 465,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "4896:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 466,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "4900:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 463,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															471,
															497
														],
														"referencedDeclaration": 497,
														"src": "4873:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 469,
												"nodeType": "ExpressionStatement",
												"src": "4873:39:1"
											}
										]
									},
									"documentation": {
										"id": 454,
										"nodeType": "StructuredDocumentation",
										"src": "4727:55:1",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4796:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4821:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "4813:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4813:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4835:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "4827:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4847:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "4839:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4812:43:1"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4863:0:1"
									},
									"scope": 1145,
									"src": "4787:132:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1207
									],
									"body": {
										"id": 496,
										"nodeType": "Block",
										"src": "5088:105:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 484,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "5111:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 485,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "5117:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "5121:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 483,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "5098:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 488,
												"nodeType": "ExpressionStatement",
												"src": "5098:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 490,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "5162:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 491,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "5168:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 492,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "5172:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 493,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "5181:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 489,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "5139:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5139:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 495,
												"nodeType": "ExpressionStatement",
												"src": "5139:47:1"
											}
										]
									},
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "4925:55:1",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4994:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5019:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5011:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5033:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5025:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5045:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5037:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5067:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5054:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 479,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5054:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5010:62:1"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:1"
									},
									"scope": 1145,
									"src": "4985:208:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 509,
										"nodeType": "Block",
										"src": "5782:40:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 505,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "5799:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 507,
													"indexExpression": {
														"id": 506,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "5807:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5799:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 504,
												"id": 508,
												"nodeType": "Return",
												"src": "5792:23:1"
											}
										]
									},
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "5199:503:1",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5716:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5733:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "5725:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:17:1"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "5773:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5772:9:1"
									},
									"scope": 1145,
									"src": "5707:115:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "6017:48:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 518,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "6034:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 520,
													"indexExpression": {
														"id": 519,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 513,
														"src": "6050:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6034:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 517,
												"id": 521,
												"nodeType": "Return",
												"src": "6027:31:1"
											}
										]
									},
									"documentation": {
										"id": 511,
										"nodeType": "StructuredDocumentation",
										"src": "5828:105:1",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5947:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5968:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "5960:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5959:17:1"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "6008:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:9:1"
									},
									"scope": 1145,
									"src": "5938:127:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 558,
										"nodeType": "Block",
										"src": "6485:163:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 540,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 535,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "6514:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6533:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6525:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 536,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6525:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6525:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6514:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 548,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 541,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 526,
																			"src": "6552:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 542,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 528,
																			"src": "6561:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6552:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 545,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 526,
																				"src": "6589:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 546,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 528,
																				"src": "6596:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 544,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 407,
																			"src": "6572:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6572:32:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6552:52:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 550,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 530,
																				"src": "6621:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 549,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 523,
																			"src": "6608:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6608:21:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 552,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 528,
																		"src": "6633:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6608:32:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6552:88:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 555,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6551:90:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6514:127:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 534,
												"id": 557,
												"nodeType": "Return",
												"src": "6495:146:1"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "6071:300:1",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6385:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6407:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "6399:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6399:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6422:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "6414:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6439:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "6431:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:49:1"
									},
									"returnParameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "6479:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 532,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6479:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6478:6:1"
									},
									"scope": 1145,
									"src": "6376:272:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 595,
										"nodeType": "Block",
										"src": "7179:271:1",
										"statements": [
											{
												"condition": {
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7193:39:1",
													"subExpression": {
														"arguments": [
															{
																"id": 570,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 562,
																"src": "7208:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 571,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 564,
																"src": "7215:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 572,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 566,
																"src": "7224:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 569,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "7194:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7194:38:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 594,
												"nodeType": "IfStatement",
												"src": "7189:255:1",
												"trueBody": {
													"id": 593,
													"nodeType": "Block",
													"src": "7234:210:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 575,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 562,
																	"src": "7252:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 578,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7269:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7261:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 576,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7261:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7261:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7252:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 591,
																"nodeType": "Block",
																"src": "7350:84:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 587,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 564,
																					"src": "7402:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 588,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 566,
																					"src": "7411:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 586,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 78,
																				"src": "7375:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256) pure returns (error)"
																				}
																			},
																			"id": 589,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7375:44:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 590,
																		"nodeType": "RevertStatement",
																		"src": "7368:51:1"
																	}
																]
															},
															"id": 592,
															"nodeType": "IfStatement",
															"src": "7248:186:1",
															"trueBody": {
																"id": 585,
																"nodeType": "Block",
																"src": "7273:71:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 582,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 566,
																					"src": "7321:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 581,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 52,
																				"src": "7298:22:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (uint256) pure returns (error)"
																				}
																			},
																			"id": 583,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7298:31:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 584,
																		"nodeType": "RevertStatement",
																		"src": "7291:38:1"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "6654:423:1",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 596,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7091:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7116:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "7108:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7131:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "7123:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7148:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "7140:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7140:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7107:49:1"
									},
									"returnParameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7179:0:1"
									},
									"scope": 1145,
									"src": "7082:368:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 611,
										"nodeType": "Block",
										"src": "8167:78:1",
										"statements": [
											{
												"id": 610,
												"nodeType": "UncheckedBlock",
												"src": "8177:62:1",
												"statements": [
													{
														"expression": {
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 604,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 179,
																	"src": "8201:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 606,
																"indexExpression": {
																	"id": 605,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 599,
																	"src": "8211:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8201:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 607,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 601,
																"src": "8223:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8201:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 609,
														"nodeType": "ExpressionStatement",
														"src": "8201:27:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 597,
										"nodeType": "StructuredDocumentation",
										"src": "7456:631:1",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8101:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8126:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "8118:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8118:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8143:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "8135:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 600,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8117:32:1"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8167:0:1"
									},
									"scope": 1145,
									"src": "8092:153:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "8933:700:1",
										"statements": [
											{
												"assignments": [
													625
												],
												"declarations": [
													{
														"constant": false,
														"id": 625,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8951:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 701,
														"src": "8943:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 624,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8943:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 629,
												"initialValue": {
													"arguments": [
														{
															"id": 627,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "8967:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 626,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "8958:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8958:17:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8943:32:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 630,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "9035:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 633,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9051:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9043:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 631,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9043:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 634,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9043:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9035:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 643,
												"nodeType": "IfStatement",
												"src": "9031:86:1",
												"trueBody": {
													"id": 642,
													"nodeType": "Block",
													"src": "9055:62:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 637,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 625,
																		"src": "9086:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 638,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 619,
																		"src": "9092:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 639,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 617,
																		"src": "9098:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 636,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 596,
																	"src": "9069:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 640,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9069:37:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 641,
															"nodeType": "ExpressionStatement",
															"src": "9069:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 644,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 625,
														"src": "9161:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 647,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9177:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9169:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 645,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9169:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 648,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9169:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9161:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 671,
												"nodeType": "IfStatement",
												"src": "9157:256:1",
												"trueBody": {
													"id": 670,
													"nodeType": "Block",
													"src": "9181:232:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 653,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9294:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 652,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9286:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 651,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9286:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9286:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 655,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 617,
																		"src": "9298:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 658,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9315:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 657,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9307:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 656,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9307:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9307:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 660,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9319:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 650,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		948,
																		1014
																	],
																	"referencedDeclaration": 1014,
																	"src": "9277:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:48:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 662,
															"nodeType": "ExpressionStatement",
															"src": "9277:48:1"
														},
														{
															"id": 669,
															"nodeType": "UncheckedBlock",
															"src": "9340:63:1",
															"statements": [
																{
																	"expression": {
																		"id": 667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 663,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 179,
																				"src": "9368:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 665,
																			"indexExpression": {
																				"id": 664,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 625,
																				"src": "9378:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9368:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 666,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9387:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9368:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 668,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:20:1"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 672,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "9427:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9441:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9433:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 673,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9433:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 676,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9433:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9427:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 686,
												"nodeType": "IfStatement",
												"src": "9423:107:1",
												"trueBody": {
													"id": 685,
													"nodeType": "Block",
													"src": "9445:85:1",
													"statements": [
														{
															"id": 684,
															"nodeType": "UncheckedBlock",
															"src": "9459:61:1",
															"statements": [
																{
																	"expression": {
																		"id": 682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 678,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 179,
																				"src": "9487:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 680,
																			"indexExpression": {
																				"id": 679,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 615,
																				"src": "9497:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9487:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 681,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9504:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9487:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 683,
																	"nodeType": "ExpressionStatement",
																	"src": "9487:18:1"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 687,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "9540:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 689,
														"indexExpression": {
															"id": 688,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "9548:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9540:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 690,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "9559:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9540:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 692,
												"nodeType": "ExpressionStatement",
												"src": "9540:21:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 694,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "9586:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 695,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "9592:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 696,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "9596:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 693,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1161,
														"src": "9577:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9577:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 698,
												"nodeType": "EmitStatement",
												"src": "9572:32:1"
											},
											{
												"expression": {
													"id": 699,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 625,
													"src": "9622:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 623,
												"id": 700,
												"nodeType": "Return",
												"src": "9615:11:1"
											}
										]
									},
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "8251:582:1",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8847:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8863:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "8855:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8875:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "8867:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8867:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8892:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "8884:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8884:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:43:1"
									},
									"returnParameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "8924:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8924:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8923:9:1"
									},
									"scope": 1145,
									"src": "8838:795:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 751,
										"nodeType": "Block",
										"src": "10008:274:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 710,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 705,
														"src": "10022:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10036:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10028:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 711,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10028:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10028:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10022:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 724,
												"nodeType": "IfStatement",
												"src": "10018:87:1",
												"trueBody": {
													"id": 723,
													"nodeType": "Block",
													"src": "10040:65:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 719,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10091:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 718,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10083:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 717,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10083:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10083:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 716,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "10061:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10061:33:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 722,
															"nodeType": "RevertStatement",
															"src": "10054:40:1"
														}
													]
												}
											},
											{
												"assignments": [
													726
												],
												"declarations": [
													{
														"constant": false,
														"id": 726,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10122:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 751,
														"src": "10114:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 725,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10114:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 735,
												"initialValue": {
													"arguments": [
														{
															"id": 728,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "10146:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 729,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "10150:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 732,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 731,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10159:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 730,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10159:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10159:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 727,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "10138:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10138:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10114:56:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 736,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "10184:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 739,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10209:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10201:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 737,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10201:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 740,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10201:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10184:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 750,
												"nodeType": "IfStatement",
												"src": "10180:96:1",
												"trueBody": {
													"id": 749,
													"nodeType": "Block",
													"src": "10213:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 745,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10262:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 744,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10254:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 743,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10254:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10254:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 742,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 66,
																	"src": "10234:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 747,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10234:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 748,
															"nodeType": "RevertStatement",
															"src": "10227:38:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "9639:311:1",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9964:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9978:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "9970:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9970:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9990:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "9982:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9969:29:1"
									},
									"returnParameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10008:0:1"
									},
									"scope": 1145,
									"src": "9955:327:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "10690:43:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 761,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10710:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 762,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "10714:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10723:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 760,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															767,
															793
														],
														"referencedDeclaration": 793,
														"src": "10700:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10700:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 765,
												"nodeType": "ExpressionStatement",
												"src": "10700:26:1"
											}
										]
									},
									"documentation": {
										"id": 753,
										"nodeType": "StructuredDocumentation",
										"src": "10288:340:1",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10642:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10660:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "10652:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10672:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "10664:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10651:29:1"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10690:0:1"
									},
									"scope": 1145,
									"src": "10633:100:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 792,
										"nodeType": "Block",
										"src": "11038:98:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 778,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "11054:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 779,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "11058:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 777,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "11048:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11048:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 781,
												"nodeType": "ExpressionStatement",
												"src": "11048:18:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11107:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11099:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 783,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11099:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11099:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 787,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "11111:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 788,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "11115:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 789,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "11124:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 782,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "11076:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11076:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 791,
												"nodeType": "ExpressionStatement",
												"src": "11076:53:1"
											}
										]
									},
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "10739:210:1",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 793,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10963:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10981:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "10973:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10973:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10993:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "10985:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10985:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11015:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "11002:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 773,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11002:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10972:48:1"
									},
									"returnParameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11038:0:1"
									},
									"scope": 1145,
									"src": "10954:182:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "11503:186:1",
										"statements": [
											{
												"assignments": [
													800
												],
												"declarations": [
													{
														"constant": false,
														"id": 800,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11521:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 825,
														"src": "11513:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 799,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11513:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 812,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 804,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11553:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 803,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11545:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 802,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11545:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11545:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 806,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "11557:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11574:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 808,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11566:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 807,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11566:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11566:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 801,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "11537:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11537:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11513:64:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 813,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "11591:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 816,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11616:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11608:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 814,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11608:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 817,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11608:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11591:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 824,
												"nodeType": "IfStatement",
												"src": "11587:96:1",
												"trueBody": {
													"id": 823,
													"nodeType": "Block",
													"src": "11620:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 820,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 796,
																		"src": "11664:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 819,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "11641:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11641:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 822,
															"nodeType": "RevertStatement",
															"src": "11634:38:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "11142:315:1",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11471:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11485:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "11477:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11477:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11476:17:1"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11503:0:1"
									},
									"scope": 1145,
									"src": "11462:227:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 885,
										"nodeType": "Block",
										"src": "12084:389:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 836,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 831,
														"src": "12098:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12112:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12104:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 837,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12104:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 840,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12104:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12098:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 850,
												"nodeType": "IfStatement",
												"src": "12094:87:1",
												"trueBody": {
													"id": 849,
													"nodeType": "Block",
													"src": "12116:65:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 845,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12167:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 844,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12159:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 843,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12159:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 846,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12159:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 842,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "12137:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12137:33:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 848,
															"nodeType": "RevertStatement",
															"src": "12130:40:1"
														}
													]
												}
											},
											{
												"assignments": [
													852
												],
												"declarations": [
													{
														"constant": false,
														"id": 852,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12198:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 885,
														"src": "12190:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 851,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12190:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 861,
												"initialValue": {
													"arguments": [
														{
															"id": 854,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "12222:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 855,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "12226:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12243:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12235:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 856,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12235:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12235:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 853,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "12214:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12214:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12190:56:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 862,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 852,
														"src": "12260:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 865,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12277:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 863,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12277:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 866,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12277:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12260:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 875,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 873,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "12362:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 874,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "12379:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12362:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 883,
													"nodeType": "IfStatement",
													"src": "12358:109:1",
													"trueBody": {
														"id": 882,
														"nodeType": "Block",
														"src": "12385:82:1",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 877,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 829,
																			"src": "12427:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 878,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 833,
																			"src": "12433:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 879,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 852,
																			"src": "12442:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 876,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 61,
																		"src": "12406:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$",
																			"typeString": "function (address,uint256,address) pure returns (error)"
																		}
																	},
																	"id": 880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12406:50:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 881,
																"nodeType": "RevertStatement",
																"src": "12399:57:1"
															}
														]
													}
												},
												"id": 884,
												"nodeType": "IfStatement",
												"src": "12256:211:1",
												"trueBody": {
													"id": 872,
													"nodeType": "Block",
													"src": "12289:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 869,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 833,
																		"src": "12333:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 868,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "12310:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12310:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 871,
															"nodeType": "RevertStatement",
															"src": "12303:38:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "11695:313:1",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12022:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12040:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "12032:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12032:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12054:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "12046:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12046:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12066:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "12058:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12058:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12031:43:1"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12084:0:1"
									},
									"scope": 1145,
									"src": "12013:460:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 903,
										"nodeType": "Block",
										"src": "13481:53:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 897,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "13505:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 898,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "13511:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 899,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "13515:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13524:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 896,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															904,
															930
														],
														"referencedDeclaration": 930,
														"src": "13491:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13491:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 902,
												"nodeType": "ExpressionStatement",
												"src": "13491:36:1"
											}
										]
									},
									"documentation": {
										"id": 887,
										"nodeType": "StructuredDocumentation",
										"src": "12479:922:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13415:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13437:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "13429:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13429:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13451:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "13443:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13443:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13463:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "13455:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13455:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13428:43:1"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13481:0:1"
									},
									"scope": 1145,
									"src": "13406:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 929,
										"nodeType": "Block",
										"src": "13873:102:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 917,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "13893:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 918,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "13899:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 919,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "13903:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 916,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "13883:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13883:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 921,
												"nodeType": "ExpressionStatement",
												"src": "13883:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 923,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "13944:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 924,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "13950:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 925,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "13954:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 926,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "13963:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 922,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "13921:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13921:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 928,
												"nodeType": "ExpressionStatement",
												"src": "13921:47:1"
											}
										]
									},
									"documentation": {
										"id": 905,
										"nodeType": "StructuredDocumentation",
										"src": "13540:226:1",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13780:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13802:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "13794:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13794:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13816:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "13808:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13828:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "13820:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13850:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "13837:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 912,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13837:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13793:62:1"
									},
									"returnParameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13873:0:1"
									},
									"scope": 1145,
									"src": "13771:204:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 947,
										"nodeType": "Block",
										"src": "14488:50:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 941,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 933,
															"src": "14507:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 942,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "14511:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 943,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "14520:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14526:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 940,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															948,
															1014
														],
														"referencedDeclaration": 1014,
														"src": "14498:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14498:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 946,
												"nodeType": "ExpressionStatement",
												"src": "14498:33:1"
											}
										]
									},
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "13981:432:1",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14427:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14444:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "14436:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14436:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14456:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "14448:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14448:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14473:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "14465:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14435:43:1"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14488:0:1"
									},
									"scope": 1145,
									"src": "14418:120:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1013,
										"nodeType": "Block",
										"src": "14814:568:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 960,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "14880:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 966,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 961,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "14893:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 964,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14909:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 963,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14901:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 962,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14901:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14901:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14893:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14880:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1006,
												"nodeType": "IfStatement",
												"src": "14876:460:1",
												"trueBody": {
													"id": 1005,
													"nodeType": "Block",
													"src": "14913:423:1",
													"statements": [
														{
															"assignments": [
																969
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 969,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "14935:5:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 1005,
																	"src": "14927:13:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 968,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14927:7:1",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 973,
															"initialValue": {
																"arguments": [
																	{
																		"id": 971,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 953,
																		"src": "14957:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 970,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1080,
																	"src": "14943:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14943:22:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14927:38:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 983,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 979,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 974,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 955,
																			"src": "15093:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 977,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15109:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 976,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15101:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 975,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15101:7:1",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 978,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15101:10:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15093:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 982,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 980,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 969,
																			"src": "15115:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 981,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 955,
																			"src": "15124:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15115:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15093:35:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 988,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15132:30:1",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 985,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 969,
																				"src": "15150:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 986,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 955,
																				"src": "15157:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 984,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 407,
																			"src": "15133:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 987,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15133:29:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15093:69:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 995,
															"nodeType": "IfStatement",
															"src": "15089:142:1",
															"trueBody": {
																"id": 994,
																"nodeType": "Block",
																"src": "15164:67:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 991,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 955,
																					"src": "15211:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 990,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 83,
																				"src": "15189:21:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 992,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15189:27:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 993,
																		"nodeType": "RevertStatement",
																		"src": "15182:34:1"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 996,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 957,
																"src": "15249:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1004,
															"nodeType": "IfStatement",
															"src": "15245:81:1",
															"trueBody": {
																"id": 1003,
																"nodeType": "Block",
																"src": "15260:66:1",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 998,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 969,
																					"src": "15292:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 999,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 951,
																					"src": "15299:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1000,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 953,
																					"src": "15303:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 997,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1170,
																				"src": "15283:8:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1001,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15283:28:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1002,
																		"nodeType": "EmitStatement",
																		"src": "15278:33:1"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1007,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "15346:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1009,
														"indexExpression": {
															"id": 1008,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "15362:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15346:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1010,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "15373:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15346:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1012,
												"nodeType": "ExpressionStatement",
												"src": "15346:29:1"
											}
										]
									},
									"documentation": {
										"id": 949,
										"nodeType": "StructuredDocumentation",
										"src": "14544:171:1",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14729:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14746:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "14738:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14738:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14758:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "14750:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14750:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14775:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "14767:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14767:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14786:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "14781:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 956,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14781:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14737:59:1"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14814:0:1"
									},
									"scope": 1145,
									"src": "14720:662:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1050,
										"nodeType": "Block",
										"src": "15684:219:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1024,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "15698:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15718:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15710:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1025,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15710:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1028,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15710:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15698:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1035,
												"nodeType": "IfStatement",
												"src": "15694:91:1",
												"trueBody": {
													"id": 1034,
													"nodeType": "Block",
													"src": "15722:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1031,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1019,
																		"src": "15765:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1030,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 88,
																	"src": "15743:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1032,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15743:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1033,
															"nodeType": "RevertStatement",
															"src": "15736:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1036,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 189,
																"src": "15794:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1039,
															"indexExpression": {
																"id": 1037,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1017,
																"src": "15813:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15794:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1040,
														"indexExpression": {
															"id": 1038,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "15820:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15794:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1041,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1021,
														"src": "15832:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15794:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1043,
												"nodeType": "ExpressionStatement",
												"src": "15794:46:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1045,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1017,
															"src": "15870:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1046,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "15877:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1047,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "15887:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1044,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1179,
														"src": "15855:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15855:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1049,
												"nodeType": "EmitStatement",
												"src": "15850:46:1"
											}
										]
									},
									"documentation": {
										"id": 1015,
										"nodeType": "StructuredDocumentation",
										"src": "15388:198:1",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15600:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15627:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "15619:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15619:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15642:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "15634:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1018,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15657:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "15652:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1020,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15652:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15618:48:1"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15684:0:1"
									},
									"scope": 1145,
									"src": "15591:312:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1079,
										"nodeType": "Block",
										"src": "16210:169:1",
										"statements": [
											{
												"assignments": [
													1060
												],
												"declarations": [
													{
														"constant": false,
														"id": 1060,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16228:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 1079,
														"src": "16220:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1059,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16220:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1064,
												"initialValue": {
													"arguments": [
														{
															"id": 1062,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "16245:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1061,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "16236:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16236:17:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16220:33:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1065,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "16267:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1068,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16284:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16276:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1066,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16276:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1069,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16276:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16267:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1076,
												"nodeType": "IfStatement",
												"src": "16263:88:1",
												"trueBody": {
													"id": 1075,
													"nodeType": "Block",
													"src": "16288:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1072,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1054,
																		"src": "16332:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1071,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "16309:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1073,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16309:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1074,
															"nodeType": "RevertStatement",
															"src": "16302:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1077,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1060,
													"src": "16367:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1058,
												"id": 1078,
												"nodeType": "Return",
												"src": "16360:12:1"
											}
										]
									},
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "15909:224:1",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1080,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16147:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16169:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "16161:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16161:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16160:17:1"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "16201:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1056,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16201:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16200:9:1"
									},
									"scope": 1145,
									"src": "16138:241:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1143,
										"nodeType": "Block",
										"src": "17020:680:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1092,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1085,
																"src": "17034:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17037:4:1",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17034:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1094,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17042:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17034:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1095,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17051:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17034:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1142,
												"nodeType": "IfStatement",
												"src": "17030:664:1",
												"trueBody": {
													"id": 1141,
													"nodeType": "Block",
													"src": "17054:640:1",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1121,
																		"nodeType": "Block",
																		"src": "17168:162:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1114,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1110,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1108,
																						"src": "17190:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1111,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1280,
																								"src": "17200:15:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1280_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1112,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17216:16:1",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1279,
																							"src": "17200:32:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1113,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17233:8:1",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17200:41:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17190:51:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1120,
																				"nodeType": "IfStatement",
																				"src": "17186:130:1",
																				"trueBody": {
																					"id": 1119,
																					"nodeType": "Block",
																					"src": "17243:73:1",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1116,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1085,
																										"src": "17294:2:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1115,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 71,
																									"src": "17272:21:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1117,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17272:25:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1118,
																							"nodeType": "RevertStatement",
																							"src": "17265:32:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1122,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1109,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1108,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17160:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1122,
																				"src": "17153:13:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1107,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17153:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17152:15:1"
																	},
																	"src": "17144:186:1"
																},
																{
																	"block": {
																		"id": 1138,
																		"nodeType": "Block",
																		"src": "17359:325:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1129,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1126,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1124,
																							"src": "17381:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1127,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17388:6:1",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17381:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1128,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17398:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17381:18:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1136,
																					"nodeType": "Block",
																					"src": "17480:190:1",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "17566:86:1",
																								"nodeType": "YulBlock",
																								"src": "17566:86:1",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "17603:2:1",
																															"nodeType": "YulLiteral",
																															"src": "17603:2:1",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "17607:6:1",
																															"nodeType": "YulIdentifier",
																															"src": "17607:6:1"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "17599:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "17599:3:1"
																													},
																													"nativeSrc": "17599:15:1",
																													"nodeType": "YulFunctionCall",
																													"src": "17599:15:1"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "17622:6:1",
																															"nodeType": "YulIdentifier",
																															"src": "17622:6:1"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "17616:5:1",
																														"nodeType": "YulIdentifier",
																														"src": "17616:5:1"
																													},
																													"nativeSrc": "17616:13:1",
																													"nodeType": "YulFunctionCall",
																													"src": "17616:13:1"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "17592:6:1",
																												"nodeType": "YulIdentifier",
																												"src": "17592:6:1"
																											},
																											"nativeSrc": "17592:38:1",
																											"nodeType": "YulFunctionCall",
																											"src": "17592:38:1"
																										},
																										"nativeSrc": "17592:38:1",
																										"nodeType": "YulExpressionStatement",
																										"src": "17592:38:1"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "london",
																							"externalReferences": [
																								{
																									"declaration": 1124,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17607:6:1",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1124,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17622:6:1",
																									"valueSize": 1
																								}
																							],
																							"id": 1135,
																							"nodeType": "InlineAssembly",
																							"src": "17557:95:1"
																						}
																					]
																				},
																				"id": 1137,
																				"nodeType": "IfStatement",
																				"src": "17377:293:1",
																				"trueBody": {
																					"id": 1134,
																					"nodeType": "Block",
																					"src": "17401:73:1",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1131,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1085,
																										"src": "17452:2:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1130,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 71,
																									"src": "17430:21:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1132,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17430:25:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1133,
																							"nodeType": "RevertStatement",
																							"src": "17423:32:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1139,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1125,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1124,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17351:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1139,
																				"src": "17338:19:1",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1123,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17338:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17337:21:1"
																	},
																	"src": "17331:353:1"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1101,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1736,
																			"src": "17109:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17109:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1103,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1083,
																		"src": "17123:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1104,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1087,
																		"src": "17129:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1105,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1089,
																		"src": "17138:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1098,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1085,
																				"src": "17088:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1097,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1280,
																			"src": "17072:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1280_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1099,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17072:19:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1280",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17092:16:1",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1279,
																	"src": "17072:36:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17072:71:1",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1140,
															"nodeType": "TryStatement",
															"src": "17068:616:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1081,
										"nodeType": "StructuredDocumentation",
										"src": "16385:528:1",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "16927:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16958:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "16950:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1082,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16950:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16972:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "16964:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16964:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16984:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "16976:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16976:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17006:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "16993:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1088,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16993:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16949:62:1"
									},
									"returnParameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17020:0:1"
									},
									"scope": 1145,
									"src": "16918:782:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1146,
							"src": "776:16926:1",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": [
								1161,
								1170,
								1179
							]
						}
					],
					"src": "107:17596:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							2045
						],
						"IERC721": [
							1262
						]
					},
					"id": 1263,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1147,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1149,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1263,
							"sourceUnit": 2046,
							"src": "134:62:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1148,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2045,
										"src": "142:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1151,
										"name": "IERC165",
										"nameLocations": [
											"287:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2045,
										"src": "287:7:2"
									},
									"id": 1152,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:2"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1150,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:2",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1262,
							"linearizedBaseContracts": [
								1262,
								2045
							],
							"name": "IERC721",
							"nameLocation": "276:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1153,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:2",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1161,
									"name": "Transfer",
									"nameLocation": "400:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1155,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "409:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1157,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "431:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "451:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:2"
									},
									"src": "394:82:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1162,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:2",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1170,
									"name": "Approval",
									"nameLocation": "587:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "596:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1166,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "619:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1168,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "645:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:2"
									},
									"src": "581:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1171,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:2",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1179,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "819:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "842:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1177,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "868:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:2"
									},
									"src": "798:85:2"
								},
								{
									"documentation": {
										"id": 1180,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:2",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1187,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "989:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:2"
									},
									"returnParameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "1027:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:2"
									},
									"scope": 1262,
									"src": "970:74:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1188,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:2",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1195,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "1203:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:2"
									},
									"returnParameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "1243:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:2"
									},
									"scope": 1262,
									"src": "1186:72:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1196,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1207,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "1860:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "1874:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "1886:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "1903:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1203,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:2"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:2"
									},
									"scope": 1262,
									"src": "1834:99:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1208,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1217,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "2675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "2689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "2701:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:2"
									},
									"returnParameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:2"
									},
									"scope": 1262,
									"src": "2649:78:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1218,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:2",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1227,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "3492:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "3506:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "3518:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:2"
									},
									"returnParameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:2"
									},
									"scope": 1262,
									"src": "3470:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1228,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:2",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1235,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "4024:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "4036:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:2"
									},
									"returnParameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:2"
									},
									"scope": 1262,
									"src": "4007:55:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1236,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:2",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1243,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "4415:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "4433:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1239,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:2"
									},
									"returnParameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:2"
									},
									"scope": 1262,
									"src": "4388:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1244,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:2",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1251,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "4628:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:2"
									},
									"returnParameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "4668:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:2"
									},
									"scope": 1262,
									"src": "4607:79:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1252,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:2",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1261,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "4861:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "4876:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:2"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "4917:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1258,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:2"
									},
									"scope": 1262,
									"src": "4835:88:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1263,
							"src": "266:4659:2",
							"usedErrors": [],
							"usedEvents": [
								1161,
								1170,
								1179
							]
						}
					],
					"src": "108:4818:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1280
						]
					},
					"id": 1281,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1264,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1265,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:3",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1280,
							"linearizedBaseContracts": [
								1280
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1266,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:3",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1279,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "867:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "893:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "915:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "940:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1273,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:3"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "984:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1276,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:3"
									},
									"scope": 1280,
									"src": "832:160:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1281,
							"src": "295:699:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
					"exportedSymbols": {
						"ERC721": [
							1145
						],
						"ERC721Enumerable": [
							1664
						],
						"IERC165": [
							2045
						],
						"IERC721Enumerable": [
							1696
						]
					},
					"id": 1665,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1282,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "128:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 1284,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1665,
							"sourceUnit": 1146,
							"src": "154:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1283,
										"name": "ERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1145,
										"src": "162:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
							"file": "./IERC721Enumerable.sol",
							"id": 1286,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1665,
							"sourceUnit": 1697,
							"src": "192:58:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1285,
										"name": "IERC721Enumerable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1696,
										"src": "200:17:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../../utils/introspection/ERC165.sol",
							"id": 1288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1665,
							"sourceUnit": 2034,
							"src": "251:64:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1287,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2045,
										"src": "259:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1290,
										"name": "ERC721",
										"nameLocations": [
											"746:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1145,
										"src": "746:6:4"
									},
									"id": 1291,
									"nodeType": "InheritanceSpecifier",
									"src": "746:6:4"
								},
								{
									"baseName": {
										"id": 1292,
										"name": "IERC721Enumerable",
										"nameLocations": [
											"754:17:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1696,
										"src": "754:17:4"
									},
									"id": 1293,
									"nodeType": "InheritanceSpecifier",
									"src": "754:17:4"
								}
							],
							"canonicalName": "ERC721Enumerable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1289,
								"nodeType": "StructuredDocumentation",
								"src": "317:390:4",
								"text": " @dev This implements an optional extension of {ERC721} defined in the EIP that adds enumerability\n of all the token ids in the contract as well as all token ids owned by each account.\n CAUTION: `ERC721` extensions that implement custom `balanceOf` logic, such as `ERC721Consecutive`,\n interfere with enumerability and should not be used together with `ERC721Enumerable`."
							},
							"fullyImplemented": true,
							"id": 1664,
							"linearizedBaseContracts": [
								1664,
								1696,
								1145,
								89,
								1724,
								1262,
								2033,
								2045,
								1754
							],
							"name": "ERC721Enumerable",
							"nameLocation": "726:16:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1299,
									"mutability": "mutable",
									"name": "_ownedTokens",
									"nameLocation": "846:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "778:80:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(uint256 => uint256))"
									},
									"typeName": {
										"id": 1298,
										"keyName": "owner",
										"keyNameLocation": "794:5:4",
										"keyType": {
											"id": 1294,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "786:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "778:59:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(uint256 => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1297,
											"keyName": "index",
											"keyNameLocation": "819:5:4",
											"keyType": {
												"id": 1295,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "811:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "803:33:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1296,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "828:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1303,
									"mutability": "mutable",
									"name": "_ownedTokensIndex",
									"nameLocation": "908:17:4",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "864:61:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1302,
										"keyName": "tokenId",
										"keyNameLocation": "880:7:4",
										"keyType": {
											"id": 1300,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "872:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "864:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1301,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "891:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1306,
									"mutability": "mutable",
									"name": "_allTokens",
									"nameLocation": "950:10:4",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "932:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 1304,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "932:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1305,
										"nodeType": "ArrayTypeName",
										"src": "932:9:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1310,
									"mutability": "mutable",
									"name": "_allTokensIndex",
									"nameLocation": "1010:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "966:59:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1309,
										"keyName": "tokenId",
										"keyNameLocation": "982:7:4",
										"keyType": {
											"id": 1307,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "974:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "966:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1308,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "993:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1311,
										"nodeType": "StructuredDocumentation",
										"src": "1032:168:4",
										"text": " @dev An `owner`'s token query was out of bounds for `index`.\n NOTE: The owner being `address(0)` indicates a global out of bounds index."
									},
									"errorSelector": "a57d13dc",
									"id": 1317,
									"name": "ERC721OutOfBoundsIndex",
									"nameLocation": "1211:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1242:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "1234:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1257:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "1249:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1249:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1233:30:4"
									},
									"src": "1205:59:4"
								},
								{
									"documentation": {
										"id": 1318,
										"nodeType": "StructuredDocumentation",
										"src": "1270:50:4",
										"text": " @dev Batch mint is not allowed."
									},
									"errorSelector": "59171fc1",
									"id": 1320,
									"name": "ERC721EnumerableForbiddenBatchMint",
									"nameLocation": "1331:34:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1365:2:4"
									},
									"src": "1325:43:4"
								},
								{
									"baseFunctions": [
										237,
										2044
									],
									"body": {
										"id": 1343,
										"nodeType": "Block",
										"src": "1543:114:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1336,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1331,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1323,
															"src": "1560:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1333,
																		"name": "IERC721Enumerable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1696,
																		"src": "1580:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$1696_$",
																			"typeString": "type(contract IERC721Enumerable)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$1696_$",
																			"typeString": "type(contract IERC721Enumerable)"
																		}
																	],
																	"id": 1332,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "1575:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1334,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1575:23:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Enumerable_$1696",
																	"typeString": "type(contract IERC721Enumerable)"
																}
															},
															"id": 1335,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1599:11:4",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "1575:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "1560:50:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1339,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1323,
																"src": "1638:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1337,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1614:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721Enumerable_$1664_$",
																	"typeString": "type(contract super ERC721Enumerable)"
																}
															},
															"id": 1338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1620:17:4",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 237,
															"src": "1614:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1340,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1614:36:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1560:90:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1330,
												"id": 1342,
												"nodeType": "Return",
												"src": "1553:97:4"
											}
										]
									},
									"documentation": {
										"id": 1321,
										"nodeType": "StructuredDocumentation",
										"src": "1374:56:4",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1444:17:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1327,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1325,
												"name": "IERC165",
												"nameLocations": [
													"1511:7:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2045,
												"src": "1511:7:4"
											},
											{
												"id": 1326,
												"name": "ERC721",
												"nameLocations": [
													"1520:6:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1145,
												"src": "1520:6:4"
											}
										],
										"src": "1502:25:4"
									},
									"parameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1469:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "1462:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1322,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1462:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1461:20:4"
									},
									"returnParameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "1537:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1328,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1537:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1536:6:4"
									},
									"scope": 1664,
									"src": "1435:222:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1687
									],
									"body": {
										"id": 1372,
										"nodeType": "Block",
										"src": "1833:158:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1354,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1349,
														"src": "1847:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"arguments": [
															{
																"id": 1356,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1347,
																"src": "1866:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1355,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "1856:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 1357,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1856:16:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1847:25:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1365,
												"nodeType": "IfStatement",
												"src": "1843:99:4",
												"trueBody": {
													"id": 1364,
													"nodeType": "Block",
													"src": "1874:68:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1360,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1347,
																		"src": "1918:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1361,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1349,
																		"src": "1925:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1359,
																	"name": "ERC721OutOfBoundsIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1317,
																	"src": "1895:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (address,uint256) pure returns (error)"
																	}
																},
																"id": 1362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1895:36:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1363,
															"nodeType": "RevertStatement",
															"src": "1888:43:4"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1366,
															"name": "_ownedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1299,
															"src": "1958:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(uint256 => uint256))"
															}
														},
														"id": 1368,
														"indexExpression": {
															"id": 1367,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1347,
															"src": "1971:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1958:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1370,
													"indexExpression": {
														"id": 1369,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1349,
														"src": "1978:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1958:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1353,
												"id": 1371,
												"nodeType": "Return",
												"src": "1951:33:4"
											}
										]
									},
									"documentation": {
										"id": 1345,
										"nodeType": "StructuredDocumentation",
										"src": "1663:68:4",
										"text": " @dev See {IERC721Enumerable-tokenOfOwnerByIndex}."
									},
									"functionSelector": "2f745c59",
									"id": 1373,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "1745:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1773:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "1765:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1765:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1788:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "1780:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1780:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1764:30:4"
									},
									"returnParameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "1824:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1824:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:9:4"
									},
									"scope": 1664,
									"src": "1736:255:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1677
									],
									"body": {
										"id": 1382,
										"nodeType": "Block",
										"src": "2123:41:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1379,
														"name": "_allTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1306,
														"src": "2140:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2151:6:4",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "2140:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1378,
												"id": 1381,
												"nodeType": "Return",
												"src": "2133:24:4"
											}
										]
									},
									"documentation": {
										"id": 1374,
										"nodeType": "StructuredDocumentation",
										"src": "1997:60:4",
										"text": " @dev See {IERC721Enumerable-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 1383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2071:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2082:2:4"
									},
									"returnParameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "2114:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2114:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2113:9:4"
									},
									"scope": 1664,
									"src": "2062:102:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1695
									],
									"body": {
										"id": 1409,
										"nodeType": "Block",
										"src": "2311:151:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1391,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1386,
														"src": "2325:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1392,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1383,
															"src": "2334:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1393,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2334:13:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2325:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1404,
												"nodeType": "IfStatement",
												"src": "2321:101:4",
												"trueBody": {
													"id": 1403,
													"nodeType": "Block",
													"src": "2349:73:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1398,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2401:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1397,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2393:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1396,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2393:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1399,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2393:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1400,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1386,
																		"src": "2405:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1395,
																	"name": "ERC721OutOfBoundsIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1317,
																	"src": "2370:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (address,uint256) pure returns (error)"
																	}
																},
																"id": 1401,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2370:41:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1402,
															"nodeType": "RevertStatement",
															"src": "2363:48:4"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1405,
														"name": "_allTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1306,
														"src": "2438:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1407,
													"indexExpression": {
														"id": 1406,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1386,
														"src": "2449:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2438:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1390,
												"id": 1408,
												"nodeType": "Return",
												"src": "2431:24:4"
											}
										]
									},
									"documentation": {
										"id": 1384,
										"nodeType": "StructuredDocumentation",
										"src": "2170:61:4",
										"text": " @dev See {IERC721Enumerable-tokenByIndex}."
									},
									"functionSelector": "4f6ccce7",
									"id": 1410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "2245:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "2266:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "2258:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2258:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2257:15:4"
									},
									"returnParameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "2302:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2302:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:9:4"
									},
									"scope": 1664,
									"src": "2236:226:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										702
									],
									"body": {
										"id": 1478,
										"nodeType": "Block",
										"src": "2622:521:4",
										"statements": [
											{
												"assignments": [
													1424
												],
												"declarations": [
													{
														"constant": false,
														"id": 1424,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "2640:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 1478,
														"src": "2632:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1423,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2632:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1431,
												"initialValue": {
													"arguments": [
														{
															"id": 1427,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1413,
															"src": "2670:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1428,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1415,
															"src": "2674:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1429,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1417,
															"src": "2683:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1425,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2656:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721Enumerable_$1664_$",
																"typeString": "type(contract super ERC721Enumerable)"
															}
														},
														"id": 1426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2662:7:4",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 702,
														"src": "2656:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2656:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2632:56:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1432,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1424,
														"src": "2703:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1435,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2728:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1434,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2720:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1433,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2720:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1436,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2720:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2703:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1445,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1443,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1424,
															"src": "2807:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1444,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1413,
															"src": "2824:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "2807:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1452,
													"nodeType": "IfStatement",
													"src": "2803:106:4",
													"trueBody": {
														"id": 1451,
														"nodeType": "Block",
														"src": "2828:81:4",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1447,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1424,
																			"src": "2875:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1448,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1415,
																			"src": "2890:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1446,
																		"name": "_removeTokenFromOwnerEnumeration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1590,
																		"src": "2842:32:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,uint256)"
																		}
																	},
																	"id": 1449,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2842:56:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1450,
																"nodeType": "ExpressionStatement",
																"src": "2842:56:4"
															}
														]
													}
												},
												"id": 1453,
												"nodeType": "IfStatement",
												"src": "2699:210:4",
												"trueBody": {
													"id": 1442,
													"nodeType": "Block",
													"src": "2732:65:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1439,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1415,
																		"src": "2778:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1438,
																	"name": "_addTokenToAllTokensEnumeration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1530,
																	"src": "2746:31:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2746:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1441,
															"nodeType": "ExpressionStatement",
															"src": "2746:40:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1454,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1413,
														"src": "2922:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1457,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2936:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1456,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2928:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1455,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2928:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1458,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2928:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2922:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1467,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1465,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1424,
															"src": "3020:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1466,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1413,
															"src": "3037:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3020:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1474,
													"nodeType": "IfStatement",
													"src": "3016:90:4",
													"trueBody": {
														"id": 1473,
														"nodeType": "Block",
														"src": "3041:65:4",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1469,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1413,
																			"src": "3083:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1470,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1415,
																			"src": "3087:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1468,
																		"name": "_addTokenToOwnerEnumeration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1510,
																		"src": "3055:27:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,uint256)"
																		}
																	},
																	"id": 1471,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3055:40:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1472,
																"nodeType": "ExpressionStatement",
																"src": "3055:40:4"
															}
														]
													}
												},
												"id": 1475,
												"nodeType": "IfStatement",
												"src": "2918:188:4",
												"trueBody": {
													"id": 1464,
													"nodeType": "Block",
													"src": "2940:70:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1461,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1415,
																		"src": "2991:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1460,
																	"name": "_removeTokenFromAllTokensEnumeration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1638,
																	"src": "2954:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1462,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2954:45:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1463,
															"nodeType": "ExpressionStatement",
															"src": "2954:45:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1476,
													"name": "previousOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1424,
													"src": "3123:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1422,
												"id": 1477,
												"nodeType": "Return",
												"src": "3116:20:4"
											}
										]
									},
									"documentation": {
										"id": 1411,
										"nodeType": "StructuredDocumentation",
										"src": "2468:45:4",
										"text": " @dev See {ERC721-_update}."
									},
									"id": 1479,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "2527:7:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1419,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2595:8:4"
									},
									"parameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2543:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "2535:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2535:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2555:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "2547:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2547:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "2572:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "2564:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2564:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2534:43:4"
									},
									"returnParameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "2613:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2613:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2612:9:4"
									},
									"scope": 1664,
									"src": "2518:625:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1509,
										"nodeType": "Block",
										"src": "3511:140:4",
										"statements": [
											{
												"assignments": [
													1488
												],
												"declarations": [
													{
														"constant": false,
														"id": 1488,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "3529:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1509,
														"src": "3521:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1487,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3521:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1494,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1490,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1482,
																"src": "3548:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1489,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "3538:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 1491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3538:13:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 1492,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3554:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3538:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3521:34:4"
											},
											{
												"expression": {
													"id": 1501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1495,
																"name": "_ownedTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1299,
																"src": "3565:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 1498,
															"indexExpression": {
																"id": 1496,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1482,
																"src": "3578:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3565:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1499,
														"indexExpression": {
															"id": 1497,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1488,
															"src": "3582:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3565:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1500,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1484,
														"src": "3592:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3565:34:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1502,
												"nodeType": "ExpressionStatement",
												"src": "3565:34:4"
											},
											{
												"expression": {
													"id": 1507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1503,
															"name": "_ownedTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1303,
															"src": "3609:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1505,
														"indexExpression": {
															"id": 1504,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1484,
															"src": "3627:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3609:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1506,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1488,
														"src": "3638:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3609:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1508,
												"nodeType": "ExpressionStatement",
												"src": "3609:35:4"
											}
										]
									},
									"documentation": {
										"id": 1480,
										"nodeType": "StructuredDocumentation",
										"src": "3149:283:4",
										"text": " @dev Private function to add a token to this extension's ownership-tracking data structures.\n @param to address representing the new owner of the given token ID\n @param tokenId uint256 ID of the token to be added to the tokens list of the given address"
									},
									"id": 1510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addTokenToOwnerEnumeration",
									"nameLocation": "3446:27:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3482:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "3474:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3494:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "3486:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3486:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3473:29:4"
									},
									"returnParameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3511:0:4"
									},
									"scope": 1664,
									"src": "3437:214:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1529,
										"nodeType": "Block",
										"src": "3912:95:4",
										"statements": [
											{
												"expression": {
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1516,
															"name": "_allTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1310,
															"src": "3922:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1518,
														"indexExpression": {
															"id": 1517,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "3938:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3922:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1519,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1306,
															"src": "3949:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3960:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3949:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3922:44:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1522,
												"nodeType": "ExpressionStatement",
												"src": "3922:44:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1526,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "3992:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1523,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1306,
															"src": "3976:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1525,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3987:4:4",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "3976:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 1527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3976:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1528,
												"nodeType": "ExpressionStatement",
												"src": "3976:24:4"
											}
										]
									},
									"documentation": {
										"id": 1511,
										"nodeType": "StructuredDocumentation",
										"src": "3657:184:4",
										"text": " @dev Private function to add a token to this extension's token tracking data structures.\n @param tokenId uint256 ID of the token to be added to the tokens list"
									},
									"id": 1530,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addTokenToAllTokensEnumeration",
									"nameLocation": "3855:31:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3895:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "3887:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3887:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3886:17:4"
									},
									"returnParameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3912:0:4"
									},
									"scope": 1664,
									"src": "3846:161:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1589,
										"nodeType": "Block",
										"src": "4705:878:4",
										"statements": [
											{
												"assignments": [
													1539
												],
												"declarations": [
													{
														"constant": false,
														"id": 1539,
														"mutability": "mutable",
														"name": "lastTokenIndex",
														"nameLocation": "4894:14:4",
														"nodeType": "VariableDeclaration",
														"scope": 1589,
														"src": "4886:22:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1538,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4886:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1543,
												"initialValue": {
													"arguments": [
														{
															"id": 1541,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1533,
															"src": "4921:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1540,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 265,
														"src": "4911:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4911:15:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4886:40:4"
											},
											{
												"assignments": [
													1545
												],
												"declarations": [
													{
														"constant": false,
														"id": 1545,
														"mutability": "mutable",
														"name": "tokenIndex",
														"nameLocation": "4944:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1589,
														"src": "4936:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1544,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4936:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1549,
												"initialValue": {
													"baseExpression": {
														"id": 1546,
														"name": "_ownedTokensIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1303,
														"src": "4957:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1548,
													"indexExpression": {
														"id": 1547,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1535,
														"src": "4975:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4957:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4936:47:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1550,
														"name": "tokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1545,
														"src": "5087:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1551,
														"name": "lastTokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1539,
														"src": "5101:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5087:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1576,
												"nodeType": "IfStatement",
												"src": "5083:323:4",
												"trueBody": {
													"id": 1575,
													"nodeType": "Block",
													"src": "5117:289:4",
													"statements": [
														{
															"assignments": [
																1554
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1554,
																	"mutability": "mutable",
																	"name": "lastTokenId",
																	"nameLocation": "5139:11:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1575,
																	"src": "5131:19:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1553,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5131:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1560,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1555,
																		"name": "_ownedTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1299,
																		"src": "5153:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(uint256 => uint256))"
																		}
																	},
																	"id": 1557,
																	"indexExpression": {
																		"id": 1556,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1533,
																		"src": "5166:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5153:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1559,
																"indexExpression": {
																	"id": 1558,
																	"name": "lastTokenIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1539,
																	"src": "5172:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5153:34:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5131:56:4"
														},
														{
															"expression": {
																"id": 1567,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1561,
																			"name": "_ownedTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1299,
																			"src": "5202:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(uint256 => uint256))"
																			}
																		},
																		"id": 1564,
																		"indexExpression": {
																			"id": 1562,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1533,
																			"src": "5215:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5202:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1565,
																	"indexExpression": {
																		"id": 1563,
																		"name": "tokenIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1545,
																		"src": "5221:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5202:30:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1566,
																	"name": "lastTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1554,
																	"src": "5235:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5202:44:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1568,
															"nodeType": "ExpressionStatement",
															"src": "5202:44:4"
														},
														{
															"expression": {
																"id": 1573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1569,
																		"name": "_ownedTokensIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1303,
																		"src": "5318:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1571,
																	"indexExpression": {
																		"id": 1570,
																		"name": "lastTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1554,
																		"src": "5336:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5318:30:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1572,
																	"name": "tokenIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1545,
																	"src": "5351:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5318:43:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1574,
															"nodeType": "ExpressionStatement",
															"src": "5318:43:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "5492:33:4",
													"subExpression": {
														"baseExpression": {
															"id": 1577,
															"name": "_ownedTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1303,
															"src": "5499:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1579,
														"indexExpression": {
															"id": 1578,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1535,
															"src": "5517:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5499:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1581,
												"nodeType": "ExpressionStatement",
												"src": "5492:33:4"
											},
											{
												"expression": {
													"id": 1587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "5535:41:4",
													"subExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 1582,
																"name": "_ownedTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1299,
																"src": "5542:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 1584,
															"indexExpression": {
																"id": 1583,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1533,
																"src": "5555:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5542:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1586,
														"indexExpression": {
															"id": 1585,
															"name": "lastTokenIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1539,
															"src": "5561:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5542:34:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1588,
												"nodeType": "ExpressionStatement",
												"src": "5535:41:4"
											}
										]
									},
									"documentation": {
										"id": 1531,
										"nodeType": "StructuredDocumentation",
										"src": "4013:606:4",
										"text": " @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n This has O(1) time complexity, but alters the order of the _ownedTokens array.\n @param from address representing the previous owner of the given token ID\n @param tokenId uint256 ID of the token to be removed from the tokens list of the given address"
									},
									"id": 1590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeTokenFromOwnerEnumeration",
									"nameLocation": "4633:32:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4674:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1590,
												"src": "4666:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4666:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4688:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1590,
												"src": "4680:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4680:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4665:31:4"
									},
									"returnParameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4705:0:4"
									},
									"scope": 1664,
									"src": "4624:959:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1637,
										"nodeType": "Block",
										"src": "5942:990:4",
										"statements": [
											{
												"assignments": [
													1597
												],
												"declarations": [
													{
														"constant": false,
														"id": 1597,
														"mutability": "mutable",
														"name": "lastTokenIndex",
														"nameLocation": "6128:14:4",
														"nodeType": "VariableDeclaration",
														"scope": 1637,
														"src": "6120:22:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1596,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6120:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1602,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1598,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1306,
															"src": "6145:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1599,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6156:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6145:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 1600,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6165:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "6145:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6120:46:4"
											},
											{
												"assignments": [
													1604
												],
												"declarations": [
													{
														"constant": false,
														"id": 1604,
														"mutability": "mutable",
														"name": "tokenIndex",
														"nameLocation": "6184:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1637,
														"src": "6176:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1603,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6176:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1608,
												"initialValue": {
													"baseExpression": {
														"id": 1605,
														"name": "_allTokensIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1310,
														"src": "6197:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1607,
													"indexExpression": {
														"id": 1606,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1593,
														"src": "6213:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6197:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6176:45:4"
											},
											{
												"assignments": [
													1610
												],
												"declarations": [
													{
														"constant": false,
														"id": 1610,
														"mutability": "mutable",
														"name": "lastTokenId",
														"nameLocation": "6551:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 1637,
														"src": "6543:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1609,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6543:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1614,
												"initialValue": {
													"baseExpression": {
														"id": 1611,
														"name": "_allTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1306,
														"src": "6565:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1613,
													"indexExpression": {
														"id": 1612,
														"name": "lastTokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1597,
														"src": "6576:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6565:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6543:48:4"
											},
											{
												"expression": {
													"id": 1619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1615,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1306,
															"src": "6602:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1617,
														"indexExpression": {
															"id": 1616,
															"name": "tokenIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1604,
															"src": "6613:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6602:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1618,
														"name": "lastTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1610,
														"src": "6627:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6602:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1620,
												"nodeType": "ExpressionStatement",
												"src": "6602:36:4"
											},
											{
												"expression": {
													"id": 1625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1621,
															"name": "_allTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1310,
															"src": "6706:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1623,
														"indexExpression": {
															"id": 1622,
															"name": "lastTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1610,
															"src": "6722:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6706:28:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1624,
														"name": "tokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1604,
														"src": "6737:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6706:41:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1626,
												"nodeType": "ExpressionStatement",
												"src": "6706:41:4"
											},
											{
												"expression": {
													"id": 1630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "6868:31:4",
													"subExpression": {
														"baseExpression": {
															"id": 1627,
															"name": "_allTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1310,
															"src": "6875:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1629,
														"indexExpression": {
															"id": 1628,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1593,
															"src": "6891:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6875:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1631,
												"nodeType": "ExpressionStatement",
												"src": "6868:31:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1632,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1306,
															"src": "6909:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1634,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6920:3:4",
														"memberName": "pop",
														"nodeType": "MemberAccess",
														"src": "6909:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer)"
														}
													},
													"id": 1635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6909:16:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1636,
												"nodeType": "ExpressionStatement",
												"src": "6909:16:4"
											}
										]
									},
									"documentation": {
										"id": 1591,
										"nodeType": "StructuredDocumentation",
										"src": "5589:277:4",
										"text": " @dev Private function to remove a token from this extension's token tracking data structures.\n This has O(1) time complexity, but alters the order of the _allTokens array.\n @param tokenId uint256 ID of the token to be removed from the tokens list"
									},
									"id": 1638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeTokenFromAllTokensEnumeration",
									"nameLocation": "5880:36:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5925:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "5917:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5917:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5916:17:4"
									},
									"returnParameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5942:0:4"
									},
									"scope": 1664,
									"src": "5871:1061:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										612
									],
									"body": {
										"id": 1662,
										"nodeType": "Block",
										"src": "7134:149:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													},
													"id": 1649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1647,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1643,
														"src": "7148:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1648,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7157:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7148:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1654,
												"nodeType": "IfStatement",
												"src": "7144:84:4",
												"trueBody": {
													"id": 1653,
													"nodeType": "Block",
													"src": "7160:68:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1650,
																	"name": "ERC721EnumerableForbiddenBatchMint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1320,
																	"src": "7181:34:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1651,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7181:36:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1652,
															"nodeType": "RevertStatement",
															"src": "7174:43:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1658,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1641,
															"src": "7260:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1659,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1643,
															"src": "7269:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"expression": {
															"id": 1655,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "7237:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721Enumerable_$1664_$",
																"typeString": "type(contract super ERC721Enumerable)"
															}
														},
														"id": 1657,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7243:16:4",
														"memberName": "_increaseBalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 612,
														"src": "7237:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint128_$returns$__$",
															"typeString": "function (address,uint128)"
														}
													},
													"id": 1660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7237:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1661,
												"nodeType": "ExpressionStatement",
												"src": "7237:39:4"
											}
										]
									},
									"documentation": {
										"id": 1639,
										"nodeType": "StructuredDocumentation",
										"src": "6938:106:4",
										"text": " See {ERC721-_increaseBalance}. We need that to account tokens that were minted in batch"
									},
									"id": 1663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "7058:16:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1645,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7125:8:4"
									},
									"parameters": {
										"id": 1644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7083:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "7075:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7075:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7100:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "7092:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1642,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "7092:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7074:33:4"
									},
									"returnParameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7134:0:4"
									},
									"scope": 1664,
									"src": "7049:234:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1665,
							"src": "708:6577:4",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88,
								1317,
								1320
							],
							"usedEvents": [
								1161,
								1170,
								1179
							]
						}
					],
					"src": "128:7158:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
					"exportedSymbols": {
						"IERC721": [
							1262
						],
						"IERC721Enumerable": [
							1696
						]
					},
					"id": 1697,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1666,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "129:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1668,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1697,
							"sourceUnit": 1263,
							"src": "155:39:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1667,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1262,
										"src": "163:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1670,
										"name": "IERC721",
										"nameLocations": [
											"364:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1262,
										"src": "364:7:5"
									},
									"id": 1671,
									"nodeType": "InheritanceSpecifier",
									"src": "364:7:5"
								}
							],
							"canonicalName": "IERC721Enumerable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1669,
								"nodeType": "StructuredDocumentation",
								"src": "196:136:5",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1696,
							"linearizedBaseContracts": [
								1696,
								1262,
								2045
							],
							"name": "IERC721Enumerable",
							"nameLocation": "343:17:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1672,
										"nodeType": "StructuredDocumentation",
										"src": "378:82:5",
										"text": " @dev Returns the total amount of tokens stored by the contract."
									},
									"functionSelector": "18160ddd",
									"id": 1677,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "474:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "485:2:5"
									},
									"returnParameters": {
										"id": 1676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1677,
												"src": "511:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "511:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "510:9:5"
									},
									"scope": 1696,
									"src": "465:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1678,
										"nodeType": "StructuredDocumentation",
										"src": "526:171:5",
										"text": " @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
									},
									"functionSelector": "2f745c59",
									"id": 1687,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "711:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1680,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "739:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "731:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "731:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "754:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "746:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "746:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "730:30:5"
									},
									"returnParameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "784:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "783:9:5"
									},
									"scope": 1696,
									"src": "702:91:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1688,
										"nodeType": "StructuredDocumentation",
										"src": "799:164:5",
										"text": " @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."
									},
									"functionSelector": "4f6ccce7",
									"id": 1695,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "977:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "998:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1695,
												"src": "990:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:15:5"
									},
									"returnParameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1695,
												"src": "1028:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1027:9:5"
									},
									"scope": 1696,
									"src": "968:69:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1697,
							"src": "333:706:5",
							"usedErrors": [],
							"usedEvents": [
								1161,
								1170,
								1179
							]
						}
					],
					"src": "129:911:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1262
						],
						"IERC721Metadata": [
							1724
						]
					},
					"id": 1725,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1698,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1700,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1725,
							"sourceUnit": 1263,
							"src": "153:39:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1699,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1262,
										"src": "161:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1702,
										"name": "IERC721",
										"nameLocations": [
											"357:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1262,
										"src": "357:7:6"
									},
									"id": 1703,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:6"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1701,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:6",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1724,
							"linearizedBaseContracts": [
								1724,
								1262,
								2045
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1704,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:6",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1709,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:6"
									},
									"returnParameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "473:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1706,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:6"
									},
									"scope": 1724,
									"src": "434:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1710,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:6",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1715,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:6"
									},
									"returnParameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1715,
												"src": "600:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1712,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:6"
									},
									"scope": 1724,
									"src": "559:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1716,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:6",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1723,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "734:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:6"
									},
									"returnParameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "774:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1720,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:6"
									},
									"scope": 1724,
									"src": "716:73:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1725,
							"src": "328:463:6",
							"usedErrors": [],
							"usedEvents": [
								1161,
								1170,
								1179
							]
						}
					],
					"src": "127:665:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1754
						]
					},
					"id": 1755,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1726,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1727,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1754,
							"linearizedBaseContracts": [
								1754
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1735,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1732,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1731,
												"id": 1734,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 1736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1736,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1729,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1754,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1744,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1741,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1740,
												"id": 1743,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1745,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1739,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1738,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1754,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1752,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1750,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1749,
												"id": 1751,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 1753,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 1754,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1755,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							3099
						],
						"SignedMath": [
							3204
						],
						"Strings": [
							2009
						]
					},
					"id": 2010,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1756,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1758,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2010,
							"sourceUnit": 3100,
							"src": "127:37:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1757,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3099,
										"src": "135:4:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1760,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2010,
							"sourceUnit": 3205,
							"src": "165:49:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1759,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3204,
										"src": "173:10:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1761,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:8",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 2009,
							"linearizedBaseContracts": [
								2009
							],
							"name": "Strings",
							"nameLocation": "259:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1764,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 2009,
									"src": "273:56:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1762,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1763,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:8",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1767,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 2009,
									"src": "335:42:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1765,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1766,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1768,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:8",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1774,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1770,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "505:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "520:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:8"
									},
									"src": "470:66:8"
								},
								{
									"body": {
										"id": 1821,
										"nodeType": "Block",
										"src": "708:627:8",
										"statements": [
											{
												"id": 1820,
												"nodeType": "UncheckedBlock",
												"src": "718:611:8",
												"statements": [
													{
														"assignments": [
															1783
														],
														"declarations": [
															{
																"constant": false,
																"id": 1783,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1820,
																"src": "742:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1782,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1790,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1786,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1777,
																		"src": "770:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1784,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3099,
																		"src": "759:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3099_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:8",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2919,
																	"src": "759:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1788,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:8"
													},
													{
														"assignments": [
															1792
														],
														"declarations": [
															{
																"constant": false,
																"id": 1792,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1820,
																"src": "794:20:8",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1791,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1797,
														"initialValue": {
															"arguments": [
																{
																	"id": 1795,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1783,
																	"src": "828:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1794,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1793,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:8"
													},
													{
														"assignments": [
															1799
														],
														"declarations": [
															{
																"constant": false,
																"id": 1799,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:8",
																"nodeType": "VariableDeclaration",
																"scope": 1820,
																"src": "849:11:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1798,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1800,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:8"
													},
													{
														"AST": {
															"nativeSrc": "930:67:8",
															"nodeType": "YulBlock",
															"src": "930:67:8",
															"statements": [
																{
																	"nativeSrc": "948:35:8",
																	"nodeType": "YulAssignment",
																	"src": "948:35:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:8",
																						"nodeType": "YulLiteral",
																						"src": "971:2:8",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:8"
																				},
																				"nativeSrc": "967:15:8",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:8"
																		},
																		"nativeSrc": "955:28:8",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:8"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:8"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 1792,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:8",
																"valueSize": 1
															},
															{
																"declaration": 1783,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:8",
																"valueSize": 1
															},
															{
																"declaration": 1799,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:8",
																"valueSize": 1
															}
														],
														"id": 1801,
														"nodeType": "InlineAssembly",
														"src": "921:76:8"
													},
													{
														"body": {
															"id": 1816,
															"nodeType": "Block",
															"src": "1023:269:8",
															"statements": [
																{
																	"expression": {
																		"id": 1804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:8",
																		"subExpression": {
																			"id": 1803,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1799,
																			"src": "1041:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1805,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:8"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:8",
																		"nodeType": "YulBlock",
																		"src": "1124:86:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:8"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:8",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:8",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:8"
																									},
																									"nativeSrc": "1164:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:8"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:8",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:8"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:8",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:8"
																							},
																							"nativeSrc": "1159:32:8",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:8"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:8",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:8"
																					},
																					"nativeSrc": "1146:46:8",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:8"
																				},
																				"nativeSrc": "1146:46:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:8"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "london",
																	"externalReferences": [
																		{
																			"declaration": 1764,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:8",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1799,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:8",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1777,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:8",
																			"valueSize": 1
																		}
																	],
																	"id": 1806,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:8"
																},
																{
																	"expression": {
																		"id": 1809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1807,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1777,
																			"src": "1227:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1808,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1810,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:8"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1811,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1777,
																			"src": "1260:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1812,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1815,
																	"nodeType": "IfStatement",
																	"src": "1256:21:8",
																	"trueBody": {
																		"id": 1814,
																		"nodeType": "Break",
																		"src": "1272:5:8"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1802,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1817,
														"nodeType": "WhileStatement",
														"src": "1010:282:8"
													},
													{
														"expression": {
															"id": 1818,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1792,
															"src": "1312:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1781,
														"id": 1819,
														"nodeType": "Return",
														"src": "1305:13:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1775,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1822,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "655:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1776,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:8"
									},
									"returnParameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "693:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1779,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:8"
									},
									"scope": 2009,
									"src": "637:698:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1847,
										"nodeType": "Block",
										"src": "1511:92:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1835,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1833,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1825,
																	"src": "1542:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1837,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:8",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1836,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1842,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1825,
																			"src": "1588:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1840,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3204,
																			"src": "1573:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3204_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1841,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:8",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3203,
																		"src": "1573:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1839,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1822,
																"src": "1564:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1831,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1830,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:8",
																"typeDescriptions": {}
															}
														},
														"id": 1832,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:8",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1829,
												"id": 1846,
												"nodeType": "Return",
												"src": "1521:75:8"
											}
										]
									},
									"documentation": {
										"id": 1823,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:8",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1848,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1848,
												"src": "1459:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1824,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:8"
									},
									"returnParameters": {
										"id": 1829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1848,
												"src": "1496:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1827,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:8"
									},
									"scope": 2009,
									"src": "1435:168:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1867,
										"nodeType": "Block",
										"src": "1782:100:8",
										"statements": [
											{
												"id": 1866,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1857,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1851,
																	"src": "1835:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1860,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1851,
																				"src": "1854:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1858,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3099,
																				"src": "1842:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$3099_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1859,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:8",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3041,
																			"src": "1842:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1861,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1862,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1856,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1868,
																	1951,
																	1971
																],
																"referencedDeclaration": 1951,
																"src": "1823:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1855,
														"id": 1865,
														"nodeType": "Return",
														"src": "1816:49:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1849,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1868,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1851,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "1729:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:8"
									},
									"returnParameters": {
										"id": 1855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1854,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "1767:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1853,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:8"
									},
									"scope": 2009,
									"src": "1708:174:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1950,
										"nodeType": "Block",
										"src": "2095:435:8",
										"statements": [
											{
												"assignments": [
													1879
												],
												"declarations": [
													{
														"constant": false,
														"id": 1879,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1950,
														"src": "2105:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1878,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1881,
												"initialValue": {
													"id": 1880,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1871,
													"src": "2126:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:8"
											},
											{
												"assignments": [
													1883
												],
												"declarations": [
													{
														"constant": false,
														"id": 1883,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1950,
														"src": "2141:19:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1882,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1892,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1888,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1887,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1873,
																	"src": "2177:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1889,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1885,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1884,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:8"
											},
											{
												"expression": {
													"id": 1897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1893,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1883,
															"src": "2198:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1895,
														"indexExpression": {
															"hexValue": "30",
															"id": 1894,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1896,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1898,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:8"
											},
											{
												"expression": {
													"id": 1903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1899,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1883,
															"src": "2223:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1901,
														"indexExpression": {
															"hexValue": "31",
															"id": 1900,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1902,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1904,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:8"
											},
											{
												"body": {
													"id": 1933,
													"nodeType": "Block",
													"src": "2293:95:8",
													"statements": [
														{
															"expression": {
																"id": 1927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1919,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1883,
																		"src": "2307:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1921,
																	"indexExpression": {
																		"id": 1920,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1906,
																		"src": "2314:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1922,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1764,
																		"src": "2319:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1926,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1925,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1923,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1879,
																			"src": "2330:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1924,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1928,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:8"
														},
														{
															"expression": {
																"id": 1931,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1929,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1879,
																	"src": "2361:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1932,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1913,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1906,
														"src": "2281:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1914,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1934,
												"initializationExpression": {
													"assignments": [
														1906
													],
													"declarations": [
														{
															"constant": false,
															"id": 1906,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1934,
															"src": "2253:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1905,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1912,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1911,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1907,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1908,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1873,
																"src": "2269:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1910,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:8"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1917,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:8",
														"subExpression": {
															"id": 1916,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1906,
															"src": "2290:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1918,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:8"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1935,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1879,
														"src": "2401:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1936,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1944,
												"nodeType": "IfStatement",
												"src": "2397:96:8",
												"trueBody": {
													"id": 1943,
													"nodeType": "Block",
													"src": "2418:75:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1939,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1871,
																		"src": "2468:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1940,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1873,
																		"src": "2475:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1938,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1774,
																	"src": "2439:28:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1941,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1942,
															"nodeType": "RevertStatement",
															"src": "2432:50:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1947,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1883,
															"src": "2516:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1946,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1945,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 1948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1877,
												"id": 1949,
												"nodeType": "Return",
												"src": "2502:21:8"
											}
										]
									},
									"documentation": {
										"id": 1869,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1951,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1951,
												"src": "2026:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1873,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1951,
												"src": "2041:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:8"
									},
									"returnParameters": {
										"id": 1877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1876,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1951,
												"src": "2080:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1875,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:8"
									},
									"scope": 2009,
									"src": "2005:525:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1970,
										"nodeType": "Block",
										"src": "2762:75:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1964,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1954,
																			"src": "2807:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1962,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1965,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1961,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1960,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1967,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1767,
															"src": "2815:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1959,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1868,
															1951,
															1971
														],
														"referencedDeclaration": 1951,
														"src": "2779:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1958,
												"id": 1969,
												"nodeType": "Return",
												"src": "2772:58:8"
											}
										]
									},
									"documentation": {
										"id": 1952,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:8",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1971,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1954,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1971,
												"src": "2710:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1953,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:8"
									},
									"returnParameters": {
										"id": 1958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1957,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1971,
												"src": "2747:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1956,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:8"
									},
									"scope": 2009,
									"src": "2689:148:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2007,
										"nodeType": "Block",
										"src": "2992:104:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1991,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1983,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1974,
																		"src": "3015:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1982,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1981,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1984,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:8",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1988,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1976,
																		"src": "3034:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1987,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1986,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1990,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:8",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 2004,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1995,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1974,
																			"src": "3063:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1994,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1993,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1996,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1992,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2001,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1976,
																			"src": "3086:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2000,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1999,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2002,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1998,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1980,
												"id": 2006,
												"nodeType": "Return",
												"src": "3002:87:8"
											}
										]
									},
									"documentation": {
										"id": 1972,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:8",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 2008,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1974,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "2929:15:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1973,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1976,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "2946:15:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1975,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:8"
									},
									"returnParameters": {
										"id": 1980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1979,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "2986:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1978,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:8"
									},
									"scope": 2009,
									"src": "2914:182:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2010,
							"src": "251:2847:8",
							"usedErrors": [
								1774
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							2033
						],
						"IERC165": [
							2045
						]
					},
					"id": 2034,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2011,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 2013,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2034,
							"sourceUnit": 2046,
							"src": "140:38:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2012,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2045,
										"src": "148:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2015,
										"name": "IERC165",
										"nameLocations": [
											"687:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2045,
										"src": "687:7:9"
									},
									"id": 2016,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:9"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2014,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:9",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 2033,
							"linearizedBaseContracts": [
								2033,
								2045
							],
							"name": "ERC165",
							"nameLocation": "677:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2044
									],
									"body": {
										"id": 2031,
										"nodeType": "Block",
										"src": "844:64:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2024,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2019,
														"src": "861:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2026,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2045,
																	"src": "881:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2045_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2045_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 2025,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2027,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2045",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 2028,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:9",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2023,
												"id": 2030,
												"nodeType": "Return",
												"src": "854:47:9"
											}
										]
									},
									"documentation": {
										"id": 2017,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:9",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2019,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 2032,
												"src": "789:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2018,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:9"
									},
									"returnParameters": {
										"id": 2023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2022,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2032,
												"src": "838:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2021,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:9"
									},
									"scope": 2033,
									"src": "762:146:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2034,
							"src": "659:251:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2045
						]
					},
					"id": 2046,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2035,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2036,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:10",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2045,
							"linearizedBaseContracts": [
								2045
							],
							"name": "IERC165",
							"nameLocation": "431:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2037,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:10",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2044,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2039,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "817:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2038,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:10"
									},
									"returnParameters": {
										"id": 2043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2042,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "860:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2041,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:10"
									},
									"scope": 2045,
									"src": "790:76:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2046,
							"src": "421:447:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3099
						]
					},
					"id": 3100,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2047,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2048,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:11",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3099,
							"linearizedBaseContracts": [
								3099
							],
							"name": "Math",
							"nameLocation": "211:4:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2049,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:11",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 2051,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2050,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:11"
									},
									"src": "277:29:11"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 2056,
									"members": [
										{
											"id": 2052,
											"name": "Floor",
											"nameLocation": "336:5:11",
											"nodeType": "EnumValue",
											"src": "336:5:11"
										},
										{
											"id": 2053,
											"name": "Ceil",
											"nameLocation": "379:4:11",
											"nodeType": "EnumValue",
											"src": "379:4:11"
										},
										{
											"id": 2054,
											"name": "Trunc",
											"nameLocation": "421:5:11",
											"nodeType": "EnumValue",
											"src": "421:5:11"
										},
										{
											"id": 2055,
											"name": "Expand",
											"nameLocation": "451:6:11",
											"nodeType": "EnumValue",
											"src": "451:6:11"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:11",
									"nodeType": "EnumDefinition",
									"src": "312:169:11"
								},
								{
									"body": {
										"id": 2087,
										"nodeType": "Block",
										"src": "661:140:11",
										"statements": [
											{
												"id": 2086,
												"nodeType": "UncheckedBlock",
												"src": "671:124:11",
												"statements": [
													{
														"assignments": [
															2069
														],
														"declarations": [
															{
																"constant": false,
																"id": 2069,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:11",
																"nodeType": "VariableDeclaration",
																"scope": 2086,
																"src": "695:9:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2068,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2073,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2070,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2059,
																"src": "707:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2071,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2061,
																"src": "711:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:11"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2074,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2069,
																"src": "730:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2075,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2059,
																"src": "734:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2081,
														"nodeType": "IfStatement",
														"src": "726:28:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2077,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2078,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2079,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2067,
															"id": 2080,
															"nodeType": "Return",
															"src": "737:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2082,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2083,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2069,
																	"src": "782:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2084,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2067,
														"id": 2085,
														"nodeType": "Return",
														"src": "768:16:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2057,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:11",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 2088,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2059,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2088,
												"src": "601:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2061,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2088,
												"src": "612:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:11"
									},
									"returnParameters": {
										"id": 2067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2064,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2088,
												"src": "646:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2063,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2066,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2088,
												"src": "652:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2065,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:11"
									},
									"scope": 3099,
									"src": "585:216:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2115,
										"nodeType": "Block",
										"src": "984:113:11",
										"statements": [
											{
												"id": 2114,
												"nodeType": "UncheckedBlock",
												"src": "994:97:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2100,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2093,
																"src": "1022:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2101,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2091,
																"src": "1026:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2107,
														"nodeType": "IfStatement",
														"src": "1018:28:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2103,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2104,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2105,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2099,
															"id": 2106,
															"nodeType": "Return",
															"src": "1029:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2109,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2091,
																		"src": "1074:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2110,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2093,
																		"src": "1078:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2112,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2099,
														"id": 2113,
														"nodeType": "Return",
														"src": "1060:20:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2089,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:11",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 2116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2091,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2116,
												"src": "924:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2093,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2116,
												"src": "935:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2092,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:11"
									},
									"returnParameters": {
										"id": 2099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2096,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2116,
												"src": "969:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2095,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2098,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2116,
												"src": "975:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:11"
									},
									"scope": 3099,
									"src": "908:189:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2157,
										"nodeType": "Block",
										"src": "1283:417:11",
										"statements": [
											{
												"id": 2156,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2128,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2119,
																"src": "1551:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2129,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2135,
														"nodeType": "IfStatement",
														"src": "1547:28:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2132,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2133,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2127,
															"id": 2134,
															"nodeType": "Return",
															"src": "1559:16:11"
														}
													},
													{
														"assignments": [
															2137
														],
														"declarations": [
															{
																"constant": false,
																"id": 2137,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:11",
																"nodeType": "VariableDeclaration",
																"scope": 2156,
																"src": "1589:9:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2136,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2141,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2138,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2119,
																"src": "1601:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2139,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2121,
																"src": "1605:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:11"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2142,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2137,
																	"src": "1624:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2143,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2119,
																	"src": "1628:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2145,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2121,
																"src": "1633:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2151,
														"nodeType": "IfStatement",
														"src": "1620:33:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2127,
															"id": 2150,
															"nodeType": "Return",
															"src": "1636:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2153,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2137,
																	"src": "1681:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2154,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2127,
														"id": 2155,
														"nodeType": "Return",
														"src": "1667:16:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2117,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:11",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2119,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2158,
												"src": "1223:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2121,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2158,
												"src": "1234:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:11"
									},
									"returnParameters": {
										"id": 2127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2158,
												"src": "1268:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2123,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2126,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2158,
												"src": "1274:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:11"
									},
									"scope": 3099,
									"src": "1207:493:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2185,
										"nodeType": "Block",
										"src": "1887:114:11",
										"statements": [
											{
												"id": 2184,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2170,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2163,
																"src": "1925:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2171,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2177,
														"nodeType": "IfStatement",
														"src": "1921:29:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2174,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2175,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2169,
															"id": 2176,
															"nodeType": "Return",
															"src": "1933:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2179,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2161,
																		"src": "1978:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2180,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2163,
																		"src": "1982:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2182,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2169,
														"id": 2183,
														"nodeType": "Return",
														"src": "1964:20:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2159,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:11",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2161,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2186,
												"src": "1827:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2163,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2186,
												"src": "1838:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:11"
									},
									"returnParameters": {
										"id": 2169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2186,
												"src": "1872:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2186,
												"src": "1878:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:11"
									},
									"scope": 3099,
									"src": "1811:190:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2213,
										"nodeType": "Block",
										"src": "2198:114:11",
										"statements": [
											{
												"id": 2212,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2198,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2191,
																"src": "2236:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2199,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2205,
														"nodeType": "IfStatement",
														"src": "2232:29:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2202,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2203,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2197,
															"id": 2204,
															"nodeType": "Return",
															"src": "2244:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2207,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2189,
																		"src": "2289:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2208,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2191,
																		"src": "2293:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2210,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2197,
														"id": 2211,
														"nodeType": "Return",
														"src": "2275:20:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2187,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:11",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2189,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2214,
												"src": "2138:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2191,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2214,
												"src": "2149:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:11"
									},
									"returnParameters": {
										"id": 2197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2194,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2214,
												"src": "2183:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2193,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2196,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2214,
												"src": "2189:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:11"
									},
									"scope": 3099,
									"src": "2122:190:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2231,
										"nodeType": "Block",
										"src": "2449:37:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2226,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2224,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2217,
															"src": "2466:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2225,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2219,
															"src": "2470:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2228,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2219,
														"src": "2478:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:11",
													"trueExpression": {
														"id": 2227,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2217,
														"src": "2474:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2223,
												"id": 2230,
												"nodeType": "Return",
												"src": "2459:20:11"
											}
										]
									},
									"documentation": {
										"id": 2215,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:11",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2217,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2232,
												"src": "2395:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2219,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2232,
												"src": "2406:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:11"
									},
									"returnParameters": {
										"id": 2223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2232,
												"src": "2440:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:11"
									},
									"scope": 3099,
									"src": "2382:104:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2249,
										"nodeType": "Block",
										"src": "2624:37:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2244,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2242,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2235,
															"src": "2641:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2243,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2237,
															"src": "2645:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2246,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2237,
														"src": "2653:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:11",
													"trueExpression": {
														"id": 2245,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2235,
														"src": "2649:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2241,
												"id": 2248,
												"nodeType": "Return",
												"src": "2634:20:11"
											}
										]
									},
									"documentation": {
										"id": 2233,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:11",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2235,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "2570:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2237,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "2581:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:11"
									},
									"returnParameters": {
										"id": 2241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "2615:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:11"
									},
									"scope": 3099,
									"src": "2557:104:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2272,
										"nodeType": "Block",
										"src": "2845:82:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2260,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2253,
																	"src": "2900:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2261,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2255,
																	"src": "2904:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2263,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2269,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2266,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2264,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2253,
																		"src": "2910:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2265,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2255,
																		"src": "2914:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2267,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2268,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2259,
												"id": 2271,
												"nodeType": "Return",
												"src": "2892:28:11"
											}
										]
									},
									"documentation": {
										"id": 2251,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:11",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2253,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2273,
												"src": "2791:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2255,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2273,
												"src": "2802:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:11"
									},
									"returnParameters": {
										"id": 2259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2258,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2273,
												"src": "2836:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:11"
									},
									"scope": 3099,
									"src": "2774:153:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2306,
										"nodeType": "Block",
										"src": "3219:260:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2283,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2278,
														"src": "3233:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2284,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2291,
												"nodeType": "IfStatement",
												"src": "3229:127:11",
												"trueBody": {
													"id": 2290,
													"nodeType": "Block",
													"src": "3241:115:11",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2286,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2276,
																	"src": "3340:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2287,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2278,
																	"src": "3344:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2282,
															"id": 2289,
															"nodeType": "Return",
															"src": "3333:12:11"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2294,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2292,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2276,
															"src": "3444:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2293,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2303,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2296,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2276,
																			"src": "3458:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2297,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2299,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2300,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2278,
																"src": "3467:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2302,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:11",
													"trueExpression": {
														"hexValue": "30",
														"id": 2295,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2282,
												"id": 2305,
												"nodeType": "Return",
												"src": "3437:35:11"
											}
										]
									},
									"documentation": {
										"id": 2274,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:11",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2276,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2307,
												"src": "3165:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2278,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2307,
												"src": "3176:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:11"
									},
									"returnParameters": {
										"id": 2282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2281,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2307,
												"src": "3210:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:11"
									},
									"scope": 3099,
									"src": "3148:331:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2432,
										"nodeType": "Block",
										"src": "3901:4018:11",
										"statements": [
											{
												"id": 2431,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:11",
												"statements": [
													{
														"assignments": [
															2320
														],
														"declarations": [
															{
																"constant": false,
																"id": 2320,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:11",
																"nodeType": "VariableDeclaration",
																"scope": 2431,
																"src": "4232:13:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2319,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2324,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2321,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2310,
																"src": "4248:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2322,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2312,
																"src": "4252:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:11"
													},
													{
														"assignments": [
															2326
														],
														"declarations": [
															{
																"constant": false,
																"id": 2326,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:11",
																"nodeType": "VariableDeclaration",
																"scope": 2431,
																"src": "4312:13:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2325,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2327,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:11"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:11",
															"nodeType": "YulBlock",
															"src": "4392:122:11",
															"statements": [
																{
																	"nativeSrc": "4410:30:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:11"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:11",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:11"
																				},
																				"nativeSrc": "4433:6:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:11"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:11"
																		},
																		"nativeSrc": "4420:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:11"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:11",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:11",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:11"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:11"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:11"
																				},
																				"nativeSrc": "4470:14:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:11"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:11"
																				},
																				"nativeSrc": "4486:13:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:11"
																		},
																		"nativeSrc": "4466:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:11"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 2320,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2320,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2326,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2310,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:11",
																"valueSize": 1
															},
															{
																"declaration": 2312,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:11",
																"valueSize": 1
															}
														],
														"id": 2328,
														"nodeType": "InlineAssembly",
														"src": "4383:131:11"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2329,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2326,
																"src": "4595:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2330,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2337,
														"nodeType": "IfStatement",
														"src": "4591:368:11",
														"trueBody": {
															"id": 2336,
															"nodeType": "Block",
															"src": "4607:352:11",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2332,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2320,
																			"src": "4925:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2333,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2314,
																			"src": "4933:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2318,
																	"id": 2335,
																	"nodeType": "Return",
																	"src": "4918:26:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2338,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2314,
																"src": "5065:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2339,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2326,
																"src": "5080:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2345,
														"nodeType": "IfStatement",
														"src": "5061:88:11",
														"trueBody": {
															"id": 2344,
															"nodeType": "Block",
															"src": "5087:62:11",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2341,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2051,
																			"src": "5112:20:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																				"typeString": "function () pure returns (error)"
																			}
																		},
																		"id": 2342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 2343,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:11"
																}
															]
														}
													},
													{
														"assignments": [
															2347
														],
														"declarations": [
															{
																"constant": false,
																"id": 2347,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:11",
																"nodeType": "VariableDeclaration",
																"scope": 2431,
																"src": "5404:17:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2346,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2348,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:11"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:11",
															"nodeType": "YulBlock",
															"src": "5444:291:11",
															"statements": [
																{
																	"nativeSrc": "5513:38:11",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:11"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:11"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:11",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:11"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:11"
																		},
																		"nativeSrc": "5526:25:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:11"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:11",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:11"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:11",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:11"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:11"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:11"
																				},
																				"nativeSrc": "5653:20:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:11"
																		},
																		"nativeSrc": "5642:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:11"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:11",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:11"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:11"
																		},
																		"nativeSrc": "5700:21:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:11"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 2314,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:11",
																"valueSize": 1
															},
															{
																"declaration": 2320,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2320,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2320,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2326,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2326,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2347,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:11",
																"valueSize": 1
															},
															{
																"declaration": 2347,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:11",
																"valueSize": 1
															},
															{
																"declaration": 2347,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:11",
																"valueSize": 1
															},
															{
																"declaration": 2310,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:11",
																"valueSize": 1
															},
															{
																"declaration": 2312,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:11",
																"valueSize": 1
															}
														],
														"id": 2349,
														"nodeType": "InlineAssembly",
														"src": "5435:300:11"
													},
													{
														"assignments": [
															2351
														],
														"declarations": [
															{
																"constant": false,
																"id": 2351,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:11",
																"nodeType": "VariableDeclaration",
																"scope": 2431,
																"src": "5939:12:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2350,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2358,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2352,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2314,
																"src": "5954:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2353,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2354,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2314,
																			"src": "5973:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2356,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:11"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:11",
															"nodeType": "YulBlock",
															"src": "6008:362:11",
															"statements": [
																{
																	"nativeSrc": "6073:37:11",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:11",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:11"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:11"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:11"
																		},
																		"nativeSrc": "6088:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:11"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:11",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:11"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:11",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:11"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:11"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:11"
																		},
																		"nativeSrc": "6186:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:11"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:11",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:11",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:11",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:11",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:11"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:11"
																						},
																						"nativeSrc": "6333:12:11",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:11"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:11"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:11"
																				},
																				"nativeSrc": "6329:23:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:11",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:11",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:11"
																		},
																		"nativeSrc": "6325:31:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:11"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:11",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:11"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 2314,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:11",
																"valueSize": 1
															},
															{
																"declaration": 2314,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:11",
																"valueSize": 1
															},
															{
																"declaration": 2320,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2320,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:11",
																"valueSize": 1
															},
															{
																"declaration": 2351,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:11",
																"valueSize": 1
															},
															{
																"declaration": 2351,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:11",
																"valueSize": 1
															},
															{
																"declaration": 2351,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:11",
																"valueSize": 1
															},
															{
																"declaration": 2351,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:11",
																"valueSize": 1
															},
															{
																"declaration": 2351,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:11",
																"valueSize": 1
															}
														],
														"id": 2359,
														"nodeType": "InlineAssembly",
														"src": "5999:371:11"
													},
													{
														"expression": {
															"id": 2364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2360,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2320,
																"src": "6436:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2363,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2361,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2326,
																	"src": "6445:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2362,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2351,
																	"src": "6453:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2365,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:11"
													},
													{
														"assignments": [
															2367
														],
														"declarations": [
															{
																"constant": false,
																"id": 2367,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:11",
																"nodeType": "VariableDeclaration",
																"scope": 2431,
																"src": "6775:15:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2366,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2374,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2368,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2369,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2314,
																			"src": "6798:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2371,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2372,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:11"
													},
													{
														"expression": {
															"id": 2381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2375,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2367,
																"src": "7031:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2376,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2377,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2314,
																		"src": "7046:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2378,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2367,
																		"src": "7060:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2382,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:11"
													},
													{
														"expression": {
															"id": 2389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2383,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2367,
																"src": "7100:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2385,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2314,
																		"src": "7115:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2386,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2367,
																		"src": "7129:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2390,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:11"
													},
													{
														"expression": {
															"id": 2397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2391,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2367,
																"src": "7170:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2396,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2393,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2314,
																		"src": "7185:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2394,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2367,
																		"src": "7199:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2398,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:11"
													},
													{
														"expression": {
															"id": 2405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2399,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2367,
																"src": "7240:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2401,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2314,
																		"src": "7255:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2402,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2367,
																		"src": "7269:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2406,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:11"
													},
													{
														"expression": {
															"id": 2413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2407,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2367,
																"src": "7310:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2412,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2408,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2409,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2314,
																		"src": "7325:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2410,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2367,
																		"src": "7339:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2414,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:11"
													},
													{
														"expression": {
															"id": 2421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2415,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2367,
																"src": "7381:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2416,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2417,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2314,
																		"src": "7396:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2418,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2367,
																		"src": "7410:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2422,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:11"
													},
													{
														"expression": {
															"id": 2427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2423,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2317,
																"src": "7851:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2426,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2424,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2320,
																	"src": "7860:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2425,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2367,
																	"src": "7868:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2428,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:11"
													},
													{
														"expression": {
															"id": 2429,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2317,
															"src": "7896:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2318,
														"id": 2430,
														"nodeType": "Return",
														"src": "7889:13:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2308,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:11",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2310,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2433,
												"src": "3819:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2312,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2433,
												"src": "3830:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2314,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2433,
												"src": "3841:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:11"
									},
									"returnParameters": {
										"id": 2318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2317,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2433,
												"src": "3885:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:11"
									},
									"scope": 3099,
									"src": "3803:4116:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2475,
										"nodeType": "Block",
										"src": "8161:192:11",
										"statements": [
											{
												"assignments": [
													2449
												],
												"declarations": [
													{
														"constant": false,
														"id": 2449,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2475,
														"src": "8171:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2448,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2455,
												"initialValue": {
													"arguments": [
														{
															"id": 2451,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2436,
															"src": "8195:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2452,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2438,
															"src": "8198:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2453,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2440,
															"src": "8201:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2450,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2433,
															2476
														],
														"referencedDeclaration": 2433,
														"src": "8188:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2457,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2443,
																"src": "8244:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$2056",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$2056",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2456,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3098,
															"src": "8227:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2056_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2465,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2460,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2436,
																	"src": "8264:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2461,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2438,
																	"src": "8267:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2462,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2440,
																	"src": "8270:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2459,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2472,
												"nodeType": "IfStatement",
												"src": "8223:101:11",
												"trueBody": {
													"id": 2471,
													"nodeType": "Block",
													"src": "8288:36:11",
													"statements": [
														{
															"expression": {
																"id": 2469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2467,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2449,
																	"src": "8302:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2470,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2473,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2449,
													"src": "8340:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2447,
												"id": 2474,
												"nodeType": "Return",
												"src": "8333:13:11"
											}
										]
									},
									"documentation": {
										"id": 2434,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:11",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2436,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2476,
												"src": "8067:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2438,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2476,
												"src": "8078:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2440,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2476,
												"src": "8089:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2443,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2476,
												"src": "8110:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2056",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2442,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2441,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2056,
														"src": "8110:8:11"
													},
													"referencedDeclaration": 2056,
													"src": "8110:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2056",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:11"
									},
									"returnParameters": {
										"id": 2447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2446,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2476,
												"src": "8152:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:11"
									},
									"scope": 3099,
									"src": "8051:302:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2587,
										"nodeType": "Block",
										"src": "8644:1585:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2484,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2479,
														"src": "8658:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2485,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2490,
												"nodeType": "IfStatement",
												"src": "8654:45:11",
												"trueBody": {
													"id": 2489,
													"nodeType": "Block",
													"src": "8666:33:11",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2487,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2483,
															"id": 2488,
															"nodeType": "Return",
															"src": "8680:8:11"
														}
													]
												}
											},
											{
												"assignments": [
													2492
												],
												"declarations": [
													{
														"constant": false,
														"id": 2492,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2587,
														"src": "9378:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2491,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2501,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2493,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2495,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2479,
																			"src": "9406:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2494,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2755,
																			2790
																		],
																		"referencedDeclaration": 2755,
																		"src": "9401:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2499,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:11"
											},
											{
												"id": 2586,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:11",
												"statements": [
													{
														"expression": {
															"id": 2511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2502,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2492,
																"src": "9839:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2503,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2492,
																				"src": "9849:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2506,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2504,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2479,
																					"src": "9858:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2505,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2492,
																					"src": "9862:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2508,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2512,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:11"
													},
													{
														"expression": {
															"id": 2522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2513,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2492,
																"src": "9888:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2518,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2514,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2492,
																				"src": "9898:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2517,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2515,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2479,
																					"src": "9907:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2516,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2492,
																					"src": "9911:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2519,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2523,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:11"
													},
													{
														"expression": {
															"id": 2533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2524,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2492,
																"src": "9937:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2532,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2529,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2525,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2492,
																				"src": "9947:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2528,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2526,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2479,
																					"src": "9956:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2527,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2492,
																					"src": "9960:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2530,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2534,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:11"
													},
													{
														"expression": {
															"id": 2544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2535,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2492,
																"src": "9986:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2540,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2536,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2492,
																				"src": "9996:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2539,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2537,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2479,
																					"src": "10005:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2538,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2492,
																					"src": "10009:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2541,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2545,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:11"
													},
													{
														"expression": {
															"id": 2555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2546,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2492,
																"src": "10035:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2551,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2547,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2492,
																				"src": "10045:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2550,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2548,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2479,
																					"src": "10054:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2549,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2492,
																					"src": "10058:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2552,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2556,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:11"
													},
													{
														"expression": {
															"id": 2566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2557,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2492,
																"src": "10084:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2558,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2492,
																				"src": "10094:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2561,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2559,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2479,
																					"src": "10103:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2560,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2492,
																					"src": "10107:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2563,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2567,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:11"
													},
													{
														"expression": {
															"id": 2577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2568,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2492,
																"src": "10133:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2573,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2569,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2492,
																				"src": "10143:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2572,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2570,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2479,
																					"src": "10152:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2571,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2492,
																					"src": "10156:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2574,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2575,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2578,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:11"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2580,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2492,
																	"src": "10193:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2581,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2479,
																		"src": "10201:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2582,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2492,
																		"src": "10205:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2579,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2250,
																"src": "10189:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2483,
														"id": 2585,
														"nodeType": "Return",
														"src": "10182:30:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2477,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:11",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2588,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2479,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2588,
												"src": "8601:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:11"
									},
									"returnParameters": {
										"id": 2483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2588,
												"src": "8635:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:11"
									},
									"scope": 3099,
									"src": "8587:1642:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2622,
										"nodeType": "Block",
										"src": "10405:164:11",
										"statements": [
											{
												"id": 2621,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:11",
												"statements": [
													{
														"assignments": [
															2600
														],
														"declarations": [
															{
																"constant": false,
																"id": 2600,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2621,
																"src": "10439:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2599,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2604,
														"initialValue": {
															"arguments": [
																{
																	"id": 2602,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2591,
																	"src": "10461:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2601,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2588,
																	2623
																],
																"referencedDeclaration": 2588,
																"src": "10456:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2605,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2600,
																"src": "10484:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2614,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2607,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2594,
																						"src": "10511:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2056",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2056",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2606,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3098,
																					"src": "10494:16:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2056_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2608,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2613,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2611,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2609,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2600,
																						"src": "10524:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2610,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2600,
																						"src": "10533:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2612,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2591,
																					"src": "10542:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2616,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2615,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2618,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2598,
														"id": 2620,
														"nodeType": "Return",
														"src": "10477:75:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2589,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:11",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2591,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2623,
												"src": "10343:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2594,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2623,
												"src": "10354:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2056",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2593,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2592,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2056,
														"src": "10354:8:11"
													},
													"referencedDeclaration": 2056,
													"src": "10354:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2056",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:11"
									},
									"returnParameters": {
										"id": 2598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2597,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2623,
												"src": "10396:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:11"
									},
									"scope": 3099,
									"src": "10329:240:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2754,
										"nodeType": "Block",
										"src": "10760:922:11",
										"statements": [
											{
												"assignments": [
													2632
												],
												"declarations": [
													{
														"constant": false,
														"id": 2632,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2754,
														"src": "10770:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2631,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2634,
												"initialValue": {
													"hexValue": "30",
													"id": 2633,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:11"
											},
											{
												"id": 2751,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2637,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2635,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2626,
																	"src": "10826:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2636,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2638,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2649,
														"nodeType": "IfStatement",
														"src": "10822:99:11",
														"trueBody": {
															"id": 2648,
															"nodeType": "Block",
															"src": "10844:77:11",
															"statements": [
																{
																	"expression": {
																		"id": 2642,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2640,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2626,
																			"src": "10862:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2641,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2643,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:11"
																},
																{
																	"expression": {
																		"id": 2646,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2644,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2632,
																			"src": "10893:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2645,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2647,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2654,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2652,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2650,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2626,
																	"src": "10938:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2653,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2664,
														"nodeType": "IfStatement",
														"src": "10934:96:11",
														"trueBody": {
															"id": 2663,
															"nodeType": "Block",
															"src": "10955:75:11",
															"statements": [
																{
																	"expression": {
																		"id": 2657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2655,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2626,
																			"src": "10973:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2656,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2658,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:11"
																},
																{
																	"expression": {
																		"id": 2661,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2659,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2632,
																			"src": "11003:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2660,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2662,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2669,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2667,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2665,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2626,
																	"src": "11047:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2668,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2679,
														"nodeType": "IfStatement",
														"src": "11043:96:11",
														"trueBody": {
															"id": 2678,
															"nodeType": "Block",
															"src": "11064:75:11",
															"statements": [
																{
																	"expression": {
																		"id": 2672,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2670,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2626,
																			"src": "11082:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2673,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:11"
																},
																{
																	"expression": {
																		"id": 2676,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2674,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2632,
																			"src": "11112:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2675,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2677,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2682,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2680,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2626,
																	"src": "11156:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2683,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2694,
														"nodeType": "IfStatement",
														"src": "11152:96:11",
														"trueBody": {
															"id": 2693,
															"nodeType": "Block",
															"src": "11173:75:11",
															"statements": [
																{
																	"expression": {
																		"id": 2687,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2685,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2626,
																			"src": "11191:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2686,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2688,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:11"
																},
																{
																	"expression": {
																		"id": 2691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2689,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2632,
																			"src": "11221:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2690,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2692,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2697,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2695,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2626,
																	"src": "11265:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2698,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2709,
														"nodeType": "IfStatement",
														"src": "11261:93:11",
														"trueBody": {
															"id": 2708,
															"nodeType": "Block",
															"src": "11281:73:11",
															"statements": [
																{
																	"expression": {
																		"id": 2702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2700,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2626,
																			"src": "11299:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2701,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2703,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:11"
																},
																{
																	"expression": {
																		"id": 2706,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2704,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2632,
																			"src": "11328:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2705,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2707,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2712,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2710,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2626,
																	"src": "11371:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2713,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2724,
														"nodeType": "IfStatement",
														"src": "11367:93:11",
														"trueBody": {
															"id": 2723,
															"nodeType": "Block",
															"src": "11387:73:11",
															"statements": [
																{
																	"expression": {
																		"id": 2717,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2715,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2626,
																			"src": "11405:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2716,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2718,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:11"
																},
																{
																	"expression": {
																		"id": 2721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2719,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2632,
																			"src": "11434:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2720,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2722,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2727,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2725,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2626,
																	"src": "11477:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2728,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2739,
														"nodeType": "IfStatement",
														"src": "11473:93:11",
														"trueBody": {
															"id": 2738,
															"nodeType": "Block",
															"src": "11493:73:11",
															"statements": [
																{
																	"expression": {
																		"id": 2732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2730,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2626,
																			"src": "11511:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2733,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:11"
																},
																{
																	"expression": {
																		"id": 2736,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2734,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2632,
																			"src": "11540:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2735,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2737,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2742,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2740,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2626,
																	"src": "11583:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2743,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2750,
														"nodeType": "IfStatement",
														"src": "11579:64:11",
														"trueBody": {
															"id": 2749,
															"nodeType": "Block",
															"src": "11599:44:11",
															"statements": [
																{
																	"expression": {
																		"id": 2747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2745,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2632,
																			"src": "11617:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2746,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2748,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:11"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2752,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2632,
													"src": "11669:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2630,
												"id": 2753,
												"nodeType": "Return",
												"src": "11662:13:11"
											}
										]
									},
									"documentation": {
										"id": 2624,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:11",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2626,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2755,
												"src": "10713:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:11"
									},
									"returnParameters": {
										"id": 2630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2755,
												"src": "10751:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:11"
									},
									"scope": 3099,
									"src": "10699:983:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2789,
										"nodeType": "Block",
										"src": "11915:168:11",
										"statements": [
											{
												"id": 2788,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:11",
												"statements": [
													{
														"assignments": [
															2767
														],
														"declarations": [
															{
																"constant": false,
																"id": 2767,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2788,
																"src": "11949:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2766,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2771,
														"initialValue": {
															"arguments": [
																{
																	"id": 2769,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2758,
																	"src": "11971:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2768,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2755,
																	2790
																],
																"referencedDeclaration": 2755,
																"src": "11966:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2772,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2767,
																"src": "11998:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2774,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2761,
																						"src": "12025:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2056",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2056",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2773,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3098,
																					"src": "12008:16:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2056_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2775,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2780,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2778,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2776,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2777,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2767,
																						"src": "12043:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2779,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2758,
																					"src": "12052:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2783,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2784,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2782,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2785,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2765,
														"id": 2787,
														"nodeType": "Return",
														"src": "11991:75:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2756,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:11",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2790,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2758,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2790,
												"src": "11849:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2761,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2790,
												"src": "11864:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2056",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2760,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2759,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2056,
														"src": "11864:8:11"
													},
													"referencedDeclaration": 2056,
													"src": "11864:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2056",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:11"
									},
									"returnParameters": {
										"id": 2765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2764,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2790,
												"src": "11906:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:11"
									},
									"scope": 3099,
									"src": "11835:248:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2918,
										"nodeType": "Block",
										"src": "12276:854:11",
										"statements": [
											{
												"assignments": [
													2799
												],
												"declarations": [
													{
														"constant": false,
														"id": 2799,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2918,
														"src": "12286:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2798,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2801,
												"initialValue": {
													"hexValue": "30",
													"id": 2800,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:11"
											},
											{
												"id": 2915,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2802,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2793,
																"src": "12342:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2805,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2803,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2804,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2818,
														"nodeType": "IfStatement",
														"src": "12338:103:11",
														"trueBody": {
															"id": 2817,
															"nodeType": "Block",
															"src": "12361:80:11",
															"statements": [
																{
																	"expression": {
																		"id": 2811,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2807,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2793,
																			"src": "12379:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2810,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2808,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2809,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2812,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:11"
																},
																{
																	"expression": {
																		"id": 2815,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2813,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2799,
																			"src": "12414:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2814,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2816,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2819,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2793,
																"src": "12458:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2822,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2820,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2835,
														"nodeType": "IfStatement",
														"src": "12454:103:11",
														"trueBody": {
															"id": 2834,
															"nodeType": "Block",
															"src": "12477:80:11",
															"statements": [
																{
																	"expression": {
																		"id": 2828,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2824,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2793,
																			"src": "12495:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2827,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2825,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2826,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2829,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:11"
																},
																{
																	"expression": {
																		"id": 2832,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2830,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2799,
																			"src": "12530:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2831,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2833,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2836,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2793,
																"src": "12574:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2839,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2852,
														"nodeType": "IfStatement",
														"src": "12570:103:11",
														"trueBody": {
															"id": 2851,
															"nodeType": "Block",
															"src": "12593:80:11",
															"statements": [
																{
																	"expression": {
																		"id": 2845,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2841,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2793,
																			"src": "12611:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2844,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2842,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2843,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2846,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:11"
																},
																{
																	"expression": {
																		"id": 2849,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2847,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2799,
																			"src": "12646:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2848,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2850,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2853,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2793,
																"src": "12690:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2856,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2854,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2855,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2869,
														"nodeType": "IfStatement",
														"src": "12686:100:11",
														"trueBody": {
															"id": 2868,
															"nodeType": "Block",
															"src": "12708:78:11",
															"statements": [
																{
																	"expression": {
																		"id": 2862,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2858,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2793,
																			"src": "12726:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2861,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2859,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2860,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2863,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:11"
																},
																{
																	"expression": {
																		"id": 2866,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2864,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2799,
																			"src": "12760:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2865,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2867,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2874,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2870,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2793,
																"src": "12803:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2873,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2871,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2886,
														"nodeType": "IfStatement",
														"src": "12799:100:11",
														"trueBody": {
															"id": 2885,
															"nodeType": "Block",
															"src": "12821:78:11",
															"statements": [
																{
																	"expression": {
																		"id": 2879,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2875,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2793,
																			"src": "12839:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2878,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2876,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2877,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2880,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:11"
																},
																{
																	"expression": {
																		"id": 2883,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2881,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2799,
																			"src": "12873:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2882,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2884,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2887,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2793,
																"src": "12916:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2890,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2888,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2889,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2903,
														"nodeType": "IfStatement",
														"src": "12912:100:11",
														"trueBody": {
															"id": 2902,
															"nodeType": "Block",
															"src": "12934:78:11",
															"statements": [
																{
																	"expression": {
																		"id": 2896,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2892,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2793,
																			"src": "12952:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2895,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2893,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2894,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2897,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:11"
																},
																{
																	"expression": {
																		"id": 2900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2898,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2799,
																			"src": "12986:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2899,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2901,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2904,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2793,
																"src": "13029:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2907,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2905,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2906,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2914,
														"nodeType": "IfStatement",
														"src": "13025:66:11",
														"trueBody": {
															"id": 2913,
															"nodeType": "Block",
															"src": "13047:44:11",
															"statements": [
																{
																	"expression": {
																		"id": 2911,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2909,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2799,
																			"src": "13065:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2910,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2912,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:11"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2916,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2799,
													"src": "13117:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2797,
												"id": 2917,
												"nodeType": "Return",
												"src": "13110:13:11"
											}
										]
									},
									"documentation": {
										"id": 2791,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:11",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2919,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2793,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2919,
												"src": "12229:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:11"
									},
									"returnParameters": {
										"id": 2797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2796,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2919,
												"src": "12267:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:11"
									},
									"scope": 3099,
									"src": "12214:916:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2953,
										"nodeType": "Block",
										"src": "13365:170:11",
										"statements": [
											{
												"id": 2952,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:11",
												"statements": [
													{
														"assignments": [
															2931
														],
														"declarations": [
															{
																"constant": false,
																"id": 2931,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2952,
																"src": "13399:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2930,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2935,
														"initialValue": {
															"arguments": [
																{
																	"id": 2933,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2922,
																	"src": "13422:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2932,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2919,
																	2954
																],
																"referencedDeclaration": 2919,
																"src": "13416:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2950,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2936,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2931,
																"src": "13449:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2945,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2938,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2925,
																						"src": "13476:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2056",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2056",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2937,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3098,
																					"src": "13459:16:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2056_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2939,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2944,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2942,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2940,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2941,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2931,
																						"src": "13495:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2943,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2922,
																					"src": "13504:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2947,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2948,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2946,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2949,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2929,
														"id": 2951,
														"nodeType": "Return",
														"src": "13442:76:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2920,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:11",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2954,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2922,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2954,
												"src": "13299:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2925,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2954,
												"src": "13314:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2056",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2924,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2923,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2056,
														"src": "13314:8:11"
													},
													"referencedDeclaration": 2056,
													"src": "13314:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2056",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:11"
									},
									"returnParameters": {
										"id": 2929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2928,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2954,
												"src": "13356:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:11"
									},
									"scope": 3099,
									"src": "13284:251:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3040,
										"nodeType": "Block",
										"src": "13855:600:11",
										"statements": [
											{
												"assignments": [
													2963
												],
												"declarations": [
													{
														"constant": false,
														"id": 2963,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 3040,
														"src": "13865:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2962,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2965,
												"initialValue": {
													"hexValue": "30",
													"id": 2964,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:11"
											},
											{
												"id": 3037,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2968,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2966,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2957,
																	"src": "13921:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2967,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2969,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2980,
														"nodeType": "IfStatement",
														"src": "13917:98:11",
														"trueBody": {
															"id": 2979,
															"nodeType": "Block",
															"src": "13939:76:11",
															"statements": [
																{
																	"expression": {
																		"id": 2973,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2971,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2957,
																			"src": "13957:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2972,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2974,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:11"
																},
																{
																	"expression": {
																		"id": 2977,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2975,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2963,
																			"src": "13988:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2976,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2978,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2983,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2981,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2957,
																	"src": "14032:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2982,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2984,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2995,
														"nodeType": "IfStatement",
														"src": "14028:95:11",
														"trueBody": {
															"id": 2994,
															"nodeType": "Block",
															"src": "14049:74:11",
															"statements": [
																{
																	"expression": {
																		"id": 2988,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2986,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2957,
																			"src": "14067:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2987,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2989,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:11"
																},
																{
																	"expression": {
																		"id": 2992,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2990,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2963,
																			"src": "14097:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2991,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2993,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2998,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2996,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2957,
																	"src": "14140:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2997,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2999,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3010,
														"nodeType": "IfStatement",
														"src": "14136:95:11",
														"trueBody": {
															"id": 3009,
															"nodeType": "Block",
															"src": "14157:74:11",
															"statements": [
																{
																	"expression": {
																		"id": 3003,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3001,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2957,
																			"src": "14175:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3002,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3004,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:11"
																},
																{
																	"expression": {
																		"id": 3007,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3005,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2963,
																			"src": "14205:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3006,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3008,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3013,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3011,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2957,
																	"src": "14248:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3014,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3025,
														"nodeType": "IfStatement",
														"src": "14244:95:11",
														"trueBody": {
															"id": 3024,
															"nodeType": "Block",
															"src": "14265:74:11",
															"statements": [
																{
																	"expression": {
																		"id": 3018,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3016,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2957,
																			"src": "14283:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3017,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3019,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:11"
																},
																{
																	"expression": {
																		"id": 3022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3020,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2963,
																			"src": "14313:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3021,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3023,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3028,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3026,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2957,
																	"src": "14356:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3029,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3036,
														"nodeType": "IfStatement",
														"src": "14352:64:11",
														"trueBody": {
															"id": 3035,
															"nodeType": "Block",
															"src": "14372:44:11",
															"statements": [
																{
																	"expression": {
																		"id": 3033,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3031,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2963,
																			"src": "14390:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3032,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3034,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:11"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3038,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2963,
													"src": "14442:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2961,
												"id": 3039,
												"nodeType": "Return",
												"src": "14435:13:11"
											}
										]
									},
									"documentation": {
										"id": 2955,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:11",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 3041,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2957,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3041,
												"src": "13808:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:11"
									},
									"returnParameters": {
										"id": 2961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2960,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3041,
												"src": "13846:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:11"
									},
									"scope": 3099,
									"src": "13792:663:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3078,
										"nodeType": "Block",
										"src": "14692:177:11",
										"statements": [
											{
												"id": 3077,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:11",
												"statements": [
													{
														"assignments": [
															3053
														],
														"declarations": [
															{
																"constant": false,
																"id": 3053,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 3077,
																"src": "14726:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3052,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3057,
														"initialValue": {
															"arguments": [
																{
																	"id": 3055,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3044,
																	"src": "14750:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3054,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3041,
																	3079
																],
																"referencedDeclaration": 3041,
																"src": "14743:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3058,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3053,
																"src": "14777:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3070,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3060,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3047,
																						"src": "14804:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2056",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2056",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3059,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3098,
																					"src": "14787:16:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2056_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3061,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3069,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3067,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3062,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3065,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3063,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3053,
																									"src": "14823:6:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 3064,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3066,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3068,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3044,
																					"src": "14838:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3072,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3073,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3071,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3074,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3051,
														"id": 3076,
														"nodeType": "Return",
														"src": "14770:82:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3042,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:11",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3079,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3044,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3079,
												"src": "14626:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3047,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 3079,
												"src": "14641:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2056",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3046,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3045,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2056,
														"src": "14641:8:11"
													},
													"referencedDeclaration": 2056,
													"src": "14641:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2056",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:11"
									},
									"returnParameters": {
										"id": 3051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3050,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3079,
												"src": "14683:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:11"
									},
									"scope": 3099,
									"src": "14610:259:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3097,
										"nodeType": "Block",
										"src": "15067:48:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3093,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3090,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3083,
																	"src": "15090:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$2056",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$2056",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 3089,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 3088,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:11",
																	"typeDescriptions": {}
																}
															},
															"id": 3091,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 3092,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3094,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3087,
												"id": 3096,
												"nodeType": "Return",
												"src": "15077:31:11"
											}
										]
									},
									"documentation": {
										"id": 3080,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:11",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3098,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3083,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 3098,
												"src": "15019:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2056",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3082,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3081,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2056,
														"src": "15019:8:11"
													},
													"referencedDeclaration": 2056,
													"src": "15019:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2056",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:11"
									},
									"returnParameters": {
										"id": 3087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3086,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3098,
												"src": "15061:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3085,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:11"
									},
									"scope": 3099,
									"src": "14993:122:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3100,
							"src": "203:14914:11",
							"usedErrors": [
								2051
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3204
						]
					},
					"id": 3205,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3101,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3102,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:12",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3204,
							"linearizedBaseContracts": [
								3204
							],
							"name": "SignedMath",
							"nameLocation": "224:10:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3119,
										"nodeType": "Block",
										"src": "376:37:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3112,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3105,
															"src": "393:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3113,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3107,
															"src": "397:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3116,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3107,
														"src": "405:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:12",
													"trueExpression": {
														"id": 3115,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3105,
														"src": "401:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3111,
												"id": 3118,
												"nodeType": "Return",
												"src": "386:20:12"
											}
										]
									},
									"documentation": {
										"id": 3103,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:12",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 3120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3105,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3120,
												"src": "325:8:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3104,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3107,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3120,
												"src": "335:8:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3106,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:12"
									},
									"returnParameters": {
										"id": 3111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3120,
												"src": "368:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3109,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:12"
									},
									"scope": 3204,
									"src": "312:101:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3137,
										"nodeType": "Block",
										"src": "555:37:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3132,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3130,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3123,
															"src": "572:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3131,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3125,
															"src": "576:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3134,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3125,
														"src": "584:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:12",
													"trueExpression": {
														"id": 3133,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3123,
														"src": "580:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3129,
												"id": 3136,
												"nodeType": "Return",
												"src": "565:20:12"
											}
										]
									},
									"documentation": {
										"id": 3121,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:12",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 3138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3123,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3138,
												"src": "504:8:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3122,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3125,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3138,
												"src": "514:8:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3124,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:12"
									},
									"returnParameters": {
										"id": 3129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3138,
												"src": "547:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3127,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:12"
									},
									"scope": 3204,
									"src": "491:101:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3181,
										"nodeType": "Block",
										"src": "797:162:12",
										"statements": [
											{
												"assignments": [
													3149
												],
												"declarations": [
													{
														"constant": false,
														"id": 3149,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:12",
														"nodeType": "VariableDeclaration",
														"scope": 3181,
														"src": "859:8:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3148,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3162,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3150,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3141,
																	"src": "871:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3151,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3143,
																	"src": "875:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3153,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3156,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3154,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3141,
																				"src": "882:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3155,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3143,
																				"src": "886:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3157,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3160,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:12"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3163,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3149,
														"src": "911:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3168,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3149,
																						"src": "931:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3167,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3166,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:12",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3169,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3170,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3164,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3175,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3173,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3141,
																				"src": "945:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3174,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3143,
																				"src": "949:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3176,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3178,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3147,
												"id": 3180,
												"nodeType": "Return",
												"src": "904:48:12"
											}
										]
									},
									"documentation": {
										"id": 3139,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:12",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3141,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3182,
												"src": "746:8:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3140,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3143,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3182,
												"src": "756:8:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3142,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:12"
									},
									"returnParameters": {
										"id": 3147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3146,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3182,
												"src": "789:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3145,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:12"
									},
									"scope": 3204,
									"src": "729:230:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3202,
										"nodeType": "Block",
										"src": "1103:158:12",
										"statements": [
											{
												"id": 3201,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:12",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3194,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3192,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3185,
																			"src": "1228:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3193,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:12",
																		"subExpression": {
																			"id": 3196,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3185,
																			"src": "1242:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:12",
																	"trueExpression": {
																		"id": 3195,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3185,
																		"src": "1237:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3191,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3190,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 3199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3189,
														"id": 3200,
														"nodeType": "Return",
														"src": "1213:31:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3183,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:12",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3185,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3203,
												"src": "1061:8:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3184,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:12"
									},
									"returnParameters": {
										"id": 3189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3188,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3203,
												"src": "1094:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:12"
									},
									"scope": 3204,
									"src": "1048:213:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3205,
							"src": "216:1047:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:12"
				},
				"id": 12
			},
			"contracts/MintAnimalToken.sol": {
				"ast": {
					"absolutePath": "contracts/MintAnimalToken.sol",
					"exportedSymbols": {
						"ERC721": [
							1145
						],
						"ERC721Enumerable": [
							1664
						],
						"IERC165": [
							2045
						],
						"IERC721Enumerable": [
							1696
						],
						"MintAnimalToken": [
							3265
						]
					},
					"id": 3266,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3206,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
							"id": 3207,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3266,
							"sourceUnit": 1665,
							"src": "62:78:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3208,
										"name": "ERC721Enumerable",
										"nameLocations": [
											"174:16:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1664,
										"src": "174:16:13"
									},
									"id": 3209,
									"nodeType": "InheritanceSpecifier",
									"src": "174:16:13"
								}
							],
							"canonicalName": "MintAnimalToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3265,
							"linearizedBaseContracts": [
								3265,
								1664,
								1696,
								1145,
								89,
								1724,
								1262,
								2033,
								2045,
								1754
							],
							"name": "MintAnimalToken",
							"nameLocation": "155:15:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3216,
										"nodeType": "Block",
										"src": "245:2:13",
										"statements": []
									},
									"id": 3217,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "626f757267656f6973416e696d616c73",
													"id": 3212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "219:18:13",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_cf66cb804d6cc1d1c9c72d6194033c74d8605a101377fe3b5e57377fe270283b",
														"typeString": "literal_string \"bourgeoisAnimals\""
													},
													"value": "bourgeoisAnimals"
												},
												{
													"hexValue": "424153",
													"id": 3213,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "239:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_8cfcee55ccd2fd16f92981c12cd89f017951b215f9bc050f8e57d4c03f13c0cd",
														"typeString": "literal_string \"BAS\""
													},
													"value": "BAS"
												}
											],
											"id": 3214,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3211,
												"name": "ERC721",
												"nameLocations": [
													"212:6:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1145,
												"src": "212:6:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "212:33:13"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "209:2:13"
									},
									"returnParameters": {
										"id": 3215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "245:0:13"
									},
									"scope": 3265,
									"src": "198:49:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4e7fe41e",
									"id": 3221,
									"mutability": "mutable",
									"name": "animalTypes",
									"nameLocation": "291:11:13",
									"nodeType": "VariableDeclaration",
									"scope": 3265,
									"src": "256:46:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 3220,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3218,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "264:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "256:27:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3219,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "275:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 3263,
										"nodeType": "Block",
										"src": "345:278:13",
										"statements": [
											{
												"assignments": [
													3225
												],
												"declarations": [
													{
														"constant": false,
														"id": 3225,
														"mutability": "mutable",
														"name": "animalTokenId",
														"nameLocation": "364:13:13",
														"nodeType": "VariableDeclaration",
														"scope": 3263,
														"src": "356:21:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3224,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "356:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3230,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3226,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1383,
															"src": "380:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 3227,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "380:13:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31",
														"id": 3228,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "396:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "380:17:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "356:41:13"
											},
											{
												"assignments": [
													3232
												],
												"declarations": [
													{
														"constant": false,
														"id": 3232,
														"mutability": "mutable",
														"name": "animalType",
														"nameLocation": "418:10:13",
														"nodeType": "VariableDeclaration",
														"scope": 3263,
														"src": "410:18:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3231,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "410:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3250,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3247,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 3238,
																						"name": "block",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967292,
																						"src": "466:5:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_block",
																							"typeString": "block"
																						}
																					},
																					"id": 3239,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "472:9:13",
																					"memberName": "timestamp",
																					"nodeType": "MemberAccess",
																					"src": "466:15:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"expression": {
																						"id": 3240,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "483:3:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 3241,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "487:6:13",
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "483:10:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 3242,
																					"name": "animalTokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3225,
																					"src": "495:13:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 3236,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "449:3:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 3237,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "453:12:13",
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"src": "449:16:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 3243,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "449:60:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 3235,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "439:9:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 3244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "439:71:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 3234,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "431:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3233,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "431:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 3245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "431:80:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "35",
															"id": 3246,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "514:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															},
															"value": "5"
														},
														"src": "431:84:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31",
														"id": 3248,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "518:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "431:88:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "410:109:13"
											},
											{
												"expression": {
													"id": 3255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3251,
															"name": "animalTypes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3221,
															"src": "531:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 3253,
														"indexExpression": {
															"id": 3252,
															"name": "animalTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3225,
															"src": "543:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "531:26:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3254,
														"name": "animalType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3232,
														"src": "560:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "531:39:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3256,
												"nodeType": "ExpressionStatement",
												"src": "531:39:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3258,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "588:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "592:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "588:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3260,
															"name": "animalTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3225,
															"src": "600:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3257,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "582:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "582:32:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3262,
												"nodeType": "ExpressionStatement",
												"src": "582:32:13"
											}
										]
									},
									"functionSelector": "62b4c27f",
									"id": 3264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mintAnimalToken",
									"nameLocation": "320:15:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "335:2:13"
									},
									"returnParameters": {
										"id": 3223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "345:0:13"
									},
									"scope": 3265,
									"src": "311:312:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3266,
							"src": "146:480:13",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88,
								1317,
								1320
							],
							"usedEvents": [
								1161,
								1170,
								1179
							]
						}
					],
					"src": "35:591:13"
				},
				"id": 13
			},
			"contracts/SaleAnimalToken.sol": {
				"ast": {
					"absolutePath": "contracts/SaleAnimalToken.sol",
					"exportedSymbols": {
						"ERC721": [
							1145
						],
						"ERC721Enumerable": [
							1664
						],
						"IERC165": [
							2045
						],
						"IERC721Enumerable": [
							1696
						],
						"MintAnimalToken": [
							3265
						],
						"SaleAnimalToken": [
							3354
						]
					},
					"id": 3355,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3267,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:14"
						},
						{
							"absolutePath": "contracts/MintAnimalToken.sol",
							"file": "./MintAnimalToken.sol",
							"id": 3268,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3355,
							"sourceUnit": 3266,
							"src": "62:31:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SaleAnimalToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3354,
							"linearizedBaseContracts": [
								3354
							],
							"name": "SaleAnimalToken",
							"nameLocation": "106:15:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "c6ffd54e",
									"id": 3271,
									"mutability": "mutable",
									"name": "mintAnimalTokenAddress",
									"nameLocation": "152:22:14",
									"nodeType": "VariableDeclaration",
									"scope": 3354,
									"src": "129:45:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_MintAnimalToken_$3265",
										"typeString": "contract MintAnimalToken"
									},
									"typeName": {
										"id": 3270,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3269,
											"name": "MintAnimalToken",
											"nameLocations": [
												"129:15:14"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 3265,
											"src": "129:15:14"
										},
										"referencedDeclaration": 3265,
										"src": "129:15:14",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_MintAnimalToken_$3265",
											"typeString": "contract MintAnimalToken"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 3282,
										"nodeType": "Block",
										"src": "228:84:14",
										"statements": [
											{
												"expression": {
													"id": 3280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3276,
														"name": "mintAnimalTokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3271,
														"src": "239:22:14",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_MintAnimalToken_$3265",
															"typeString": "contract MintAnimalToken"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3278,
																"name": "_mintAnimalTolenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3273,
																"src": "280:23:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 3277,
															"name": "MintAnimalToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3265,
															"src": "264:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_MintAnimalToken_$3265_$",
																"typeString": "type(contract MintAnimalToken)"
															}
														},
														"id": 3279,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "264:40:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_MintAnimalToken_$3265",
															"typeString": "contract MintAnimalToken"
														}
													},
													"src": "239:65:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_MintAnimalToken_$3265",
														"typeString": "contract MintAnimalToken"
													}
												},
												"id": 3281,
												"nodeType": "ExpressionStatement",
												"src": "239:65:14"
											}
										]
									},
									"id": 3283,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3273,
												"mutability": "mutable",
												"name": "_mintAnimalTolenAddress",
												"nameLocation": "203:23:14",
												"nodeType": "VariableDeclaration",
												"scope": 3283,
												"src": "195:31:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "195:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "194:33:14"
									},
									"returnParameters": {
										"id": 3275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "228:0:14"
									},
									"scope": 3354,
									"src": "183:129:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2dd7d12f",
									"id": 3287,
									"mutability": "mutable",
									"name": "animalTokenPrices",
									"nameLocation": "405:17:14",
									"nodeType": "VariableDeclaration",
									"scope": 3354,
									"src": "370:52:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 3286,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3284,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "378:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "370:27:14",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3285,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "389:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4d1d7d5f",
									"id": 3290,
									"mutability": "mutable",
									"name": "onSaleAnimalTokenArray",
									"nameLocation": "448:22:14",
									"nodeType": "VariableDeclaration",
									"scope": 3354,
									"src": "431:39:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 3288,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "431:7:14",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 3289,
										"nodeType": "ArrayTypeName",
										"src": "431:9:14",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 3352,
										"nodeType": "Block",
										"src": "634:707:14",
										"statements": [
											{
												"assignments": [
													3298
												],
												"declarations": [
													{
														"constant": false,
														"id": 3298,
														"mutability": "mutable",
														"name": "animalTokenOwner",
														"nameLocation": "653:16:14",
														"nodeType": "VariableDeclaration",
														"scope": 3352,
														"src": "645:24:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3297,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "645:7:14",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3303,
												"initialValue": {
													"arguments": [
														{
															"id": 3301,
															"name": "_animalTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3292,
															"src": "703:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3299,
															"name": "mintAnimalTokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3271,
															"src": "672:22:14",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_MintAnimalToken_$3265",
																"typeString": "contract MintAnimalToken"
															}
														},
														"id": 3300,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "695:7:14",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 278,
														"src": "672:30:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view external returns (address)"
														}
													},
													"id": 3302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "672:46:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "645:73:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3305,
																"name": "animalTokenOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3298,
																"src": "862:16:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 3306,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "882:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3307,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "886:6:14",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "882:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "862:30:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c6572206973206e6f7420616e696d616c20746f6b656e206f6e7765722e",
															"id": 3309,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "894:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e55848a2c79418aae567817e49c2f1512916dfd26abaeaa883e0e5dd1032d5c5",
																"typeString": "literal_string \"Caller is not animal token onwer.\""
															},
															"value": "Caller is not animal token onwer."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e55848a2c79418aae567817e49c2f1512916dfd26abaeaa883e0e5dd1032d5c5",
																"typeString": "literal_string \"Caller is not animal token onwer.\""
															}
														],
														"id": 3304,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "854:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "854:76:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3311,
												"nodeType": "ExpressionStatement",
												"src": "854:76:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3313,
																"name": "_price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3294,
																"src": "949:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3314,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "958:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "949:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5072696365206973207a65726f206f72206c6f7765722e",
															"id": 3316,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "961:25:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fa56a0634fb2d521a787ef3cdac325b3079949c554e101d0d44c9d87f0eeea33",
																"typeString": "literal_string \"Price is zero or lower.\""
															},
															"value": "Price is zero or lower."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fa56a0634fb2d521a787ef3cdac325b3079949c554e101d0d44c9d87f0eeea33",
																"typeString": "literal_string \"Price is zero or lower.\""
															}
														],
														"id": 3312,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "941:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "941:46:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3318,
												"nodeType": "ExpressionStatement",
												"src": "941:46:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 3320,
																	"name": "animalTokenPrices",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3287,
																	"src": "1006:17:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 3322,
																"indexExpression": {
																	"id": 3321,
																	"name": "_animalTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3292,
																	"src": "1024:14:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1006:33:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 3323,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1043:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1006:38:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468697320616e696d616c546f6b656e20697320616c7265616479206f6e2073616c652e",
															"id": 3325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1046:38:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ee45af5e6adfe68b22d0cf095aa0e0331e653da1cebe089aea7cdb29bf06b415",
																"typeString": "literal_string \"This animalToken is already on sale.\""
															},
															"value": "This animalToken is already on sale."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ee45af5e6adfe68b22d0cf095aa0e0331e653da1cebe089aea7cdb29bf06b415",
																"typeString": "literal_string \"This animalToken is already on sale.\""
															}
														],
														"id": 3319,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "998:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "998:87:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3327,
												"nodeType": "ExpressionStatement",
												"src": "998:87:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3331,
																	"name": "animalTokenOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3298,
																	"src": "1144:16:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 3334,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1170:4:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SaleAnimalToken_$3354",
																				"typeString": "contract SaleAnimalToken"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SaleAnimalToken_$3354",
																				"typeString": "contract SaleAnimalToken"
																			}
																		],
																		"id": 3333,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1162:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 3332,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1162:7:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1162:13:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 3329,
																	"name": "mintAnimalTokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3271,
																	"src": "1104:22:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MintAnimalToken_$3265",
																		"typeString": "contract MintAnimalToken"
																	}
																},
																"id": 3330,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1127:16:14",
																"memberName": "isApprovedForAll",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 407,
																"src": "1104:39:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view external returns (bool)"
																}
															},
															"id": 3336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1104:72:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416e696d616c20746f6b656e206f776e657220646964206e6f7420617070726f766520746f6c656e2e",
															"id": 3337,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1178:43:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a6d4808755e48fdf37626e9a728d72f0fc49d60bd77dffba4f5b754673e0cf8e",
																"typeString": "literal_string \"Animal token owner did not approve tolen.\""
															},
															"value": "Animal token owner did not approve tolen."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a6d4808755e48fdf37626e9a728d72f0fc49d60bd77dffba4f5b754673e0cf8e",
																"typeString": "literal_string \"Animal token owner did not approve tolen.\""
															}
														],
														"id": 3328,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1096:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1096:126:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3339,
												"nodeType": "ExpressionStatement",
												"src": "1096:126:14"
											},
											{
												"expression": {
													"id": 3344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3340,
															"name": "animalTokenPrices",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3287,
															"src": "1235:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 3342,
														"indexExpression": {
															"id": 3341,
															"name": "_animalTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3292,
															"src": "1253:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1235:33:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3343,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3294,
														"src": "1271:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1235:42:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3345,
												"nodeType": "ExpressionStatement",
												"src": "1235:42:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3349,
															"name": "_animalTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3292,
															"src": "1318:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3346,
															"name": "onSaleAnimalTokenArray",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3290,
															"src": "1290:22:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 3348,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1313:4:14",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "1290:27:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 3350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1290:43:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3351,
												"nodeType": "ExpressionStatement",
												"src": "1290:43:14"
											}
										]
									},
									"functionSelector": "498b520e",
									"id": 3353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setForSaleAnimalToken",
									"nameLocation": "565:21:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3292,
												"mutability": "mutable",
												"name": "_animalTokenId",
												"nameLocation": "595:14:14",
												"nodeType": "VariableDeclaration",
												"scope": 3353,
												"src": "587:22:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "587:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3294,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "619:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 3353,
												"src": "611:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "586:40:14"
									},
									"returnParameters": {
										"id": 3296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "634:0:14"
									},
									"scope": 3354,
									"src": "556:785:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3355,
							"src": "97:1247:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "35:1309:14"
				},
				"id": 14
			}
		}
	}
}